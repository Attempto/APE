true.

000001 there is a man.
fof(f1, axiom, (
? [A] : (man(A)))).
000002 a flat mate runs.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,run,B)) &
((property1(B,flat,pos)) &
(mate(B)))))).
000003 a dog is good.
fof(f1, axiom, (
? [A,B] : ((property1(A,good,pos)) &
((B=A) &
(dog(B)))))).
000004 A man waits in a bank.
fof(f1, axiom, (
? [A,B,C] : ((modifier_pp(A,in,B)) &
((predicate1(A,wait,C)) &
((man(C)) &
(bank(B))))))).
000005 A dummy Dummy dummy a dummy.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000006 a man Kaarel works hard.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000007 a man Kaarel works extremely fast.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000008 There is a man John. A man Bob brings him his pencil and his own computer.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000009 A man runs and walks or sleeps.
fof(f1, axiom, (
? [A] : ((man(A)) &
(? [B,C] : (((predicate1(B,walk,A)) &
(predicate1(C,run,A)))
| (? [D] : (predicate1(D,sleep,A)))))))).
000010 there is some absinth.
fof(f1, axiom, (
? [A] : (object(A,absinth,mass,na,na,na)))).
000011 is there some absinth?
fof(f1, conjecture, (
? [A] : (object(A,absinth,mass,na,na,na)))).
000012 a n:sdfsdfsdfsdfsdf waits.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,wait,B)) &
(sdfsdfsdfsdfsdf(B))))).
000013 a /* man */ dog barks.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,bark,B)) &
(dog(B))))).
000014 /** * This ACE text tests APE's comment support. */ #The program APE supports the comments of language Perl. /* The program APE supports the comments of language C. */ A /* big */ man walks. #fast. A woman /* who sees him */ smiles. A dog /* who # sees her */ barks. A cat # /* who sees her eats a cake. A rat # */ who sees her eats a cheese. /* /* C-comment inside a C-comment */ */ /* # Perl-comment inside a C-comment */ /* This is a large ACE text, which has been commented out. This is a large ACE text, which has been commented out. This is a large ACE text, which has been commented out. */
ERROR	DRS is empty	apply_converter/2	drs([],[])
000015 is there a man?
fof(f1, conjecture, (
? [A] : (man(A)))).
000016 are there some men?
fof(f1, conjecture, (
? [A] : (object(A,man,countable,na,geq,2)))).
000017 does a man wait?
fof(f1, conjecture, (
? [A,B] : ((man(A)) &
(predicate1(B,wait,A))))).
000018 do some men wait?
fof(f1, conjecture, (
? [A,B] : ((object(A,man,countable,na,geq,2)) &
(predicate1(B,wait,A))))).
000019 a man does not wait in a bank.
fof(f1, axiom, (
? [A] : ((man(A)) &
(~(? [B,C] : ((bank(B)) &
((modifier_pp(C,in,B)) &
(predicate1(C,wait,A))))))))).
000020 a man is happy a dog.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000021 where does a man wait?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,where)
000022 John waits.
fof(f1, axiom, (
? [A] : (predicate1(A,wait,'John')))).
000023 The flat mate of John is a clerk.
fof(f1, axiom, (
? [A,B] : ((A=B) &
((property1(A,flat,pos)) &
((relation(A,of,'John')) &
((mate(A)) &
(clerk(B)))))))).
000024 the customer John enters a card.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000025 the screen blinks and John waits.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,blink,B)) &
(screen(B))))).

fof(f2, axiom, (
? [A] : (predicate1(A,wait,'John')))).
000026 the surface of the card has a green color.
fof(f1, axiom, (
? [A,B,C,D] : ((property1(A,green,pos)) &
((predicate2(B,have,C,A)) &
((relation(C,of,D)) &
((card(D)) &
((surface(C)) &
(color(A))))))))).
000027 John ' s car is fast.
fof(f1, axiom, (
? [A,B] : ((relation(A,of,'John')) &
((property1(B,fast,pos)) &
((A=B) &
(car(A))))))).
000028 John's car is fast.
fof(f1, axiom, (
? [A,B] : ((A=B) &
((property1(B,fast,pos)) &
((car(A)) &
(relation(A,of,'John'))))))).
000029 A n:aaa v:bbb the n:ccc.
fof(f1, axiom, (
? [A,B,C] : ((predicate2(A,bbb,B,C)) &
((ccc(C)) &
(aaa(B)))))).
000030 a man waits.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,wait,B)) &
(man(B))))).
000031 A man X waits.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,wait,B)) &
(man(B))))).
000032 John beats the donkey of his own wife's brother.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000033 some money is green.
fof(f1, axiom, (
? [A,B] : ((A=B) &
((property1(B,green,pos)) &
(object(A,money,mass,na,na,na)))))).
000034 A man hits a dog that runs in a park.
fof(f1, axiom, (
? [A,B,C,D,E] : ((man(A)) &
((dog(B)) &
((park(C)) &
((predicate1(D,run,B)) &
((modifier_pp(D,in,C)) &
(predicate2(E,hit,A,B))))))))).
000035 A man gives a cat which gives a bone to a dog.
fof(f1, axiom, (
? [A,B,C,D,E,F] : ((predicate3(A,give,B,C,D)) &
((dog(D)) &
((predicate2(E,give,C,F)) &
((bone(F)) &
((cat(C)) &
(man(B))))))))).
000036 a man is taller than a woman.
fof(f1, axiom, (
? [A,B,C] : ((A=B) &
((property2(B,tall,comp_than,C)) &
((woman(C)) &
(man(A))))))).
000037 a man hits a dog that is smaller than a cat.
fof(f1, axiom, (
? [A,B,C,D,E] : ((predicate2(A,hit,B,C)) &
((C=D) &
((property2(D,small,comp_than,E)) &
((cat(E)) &
((dog(C)) &
(man(B))))))))).
000038 An animal X eats an animal Y that is smaller than X.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate2(A,eat,B,C)) &
((C=D) &
((property2(D,small,comp_than,B)) &
((animal(B)) &
(animal(C)))))))).
000039 Every animal X eats an animal Y that is smaller than X.
fof(f1, axiom, (
! [A] : ((animal(A))
=> (? [B,C,D] : ((animal(B)) &
((property2(C,small,comp_than,A)) &
((B=C) &
(predicate2(D,eat,A,B))))))))).
000040 A man is a:reich-an a dog.
fof(f1, axiom, (
? [A,B,C] : ((A=B) &
((property2(B,'reich-an',pos,C)) &
((dog(C)) &
(man(A))))))).
000041 5 clerks' codes are valid.
fof(f1, axiom, (
? [A,B,C] : ((A=B) &
((property1(B,valid,pos)) &
((object(A,code,countable,na,geq,2)) &
((relation(A,of,C)) &
(object(C,clerk,countable,na,eq,5)))))))).
000042 each of 5 clerks' codes is valid.
fof(f1, axiom, (
? [A,B] : ((! [C] : ((has_part(A,C))
=> (? [D] : ((property1(D,valid,pos)) &
(C=D))))) &
((object(A,code,countable,na,geq,2)) &
((relation(A,of,B)) &
(object(B,clerk,countable,na,eq,5))))))).
000043 A man A waits.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,wait,B)) &
(man(B))))).
000044 A man John gives an apple to a woman Mary. Mary accepts the apple and eats it. She is happy and he has no apples.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000045 A man John waits.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000046 There is a man B. B waits.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,wait,B)) &
(man(B))))).
000047 A man waits. He is happy.
fof(f1, axiom, (
? [A,B,C] : ((predicate1(A,wait,B)) &
((property1(C,happy,pos)) &
((B=C) &
(man(B))))))).
000048 Some men wait. They are happy.
fof(f1, axiom, (
? [A,B,C] : ((A=B) &
((property1(B,happy,pos)) &
((predicate1(C,wait,A)) &
(object(A,man,countable,na,geq,2))))))).
000049 There is 1 man D. There is 1 park B. D waits in B.
fof(f1, axiom, (
? [A,B,C] : ((modifier_pp(A,in,B)) &
((predicate1(A,wait,C)) &
((man(C)) &
(park(B))))))).
000050 Every man waits-for some women who are happy or are sad.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000051 If there is a man then there is 1 woman.
fof(f1, axiom, (
! [A] : ((man(A))
=> (? [B] : (woman(B)))))).
000052 If there is a man then there is more than 1 woman.
fof(f1, axiom, (
! [A] : ((man(A))
=> (? [B] : (object(B,woman,countable,na,greater,1)))))).
000053 There is a man A. A are happy.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000054 There is not some water.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000055 There are no laundries.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000056 There is no laundry.
fof(f1, axiom, (
~(? [A] : (laundry(A))))).
000057 There is some laundry.
fof(f1, axiom, (
? [A] : (object(A,laundry,mass,na,na,na)))).
000058 There is a laundry.
fof(f1, axiom, (
? [A] : (laundry(A)))).
000059 There is a button "Go!".
ERROR	DRS is empty	apply_converter/2	drs([],[])
000060 There is a button "John's doorbell".
ERROR	DRS is empty	apply_converter/2	drs([],[])
000061 2 men see themselves.
fof(f1, axiom, (
? [A,B] : ((predicate2(A,see,B,B)) &
(object(B,man,countable,na,eq,2))))).
000062 2 men see their own card.
fof(f1, axiom, (
? [A,B,C] : ((predicate2(A,see,B,C)) &
((relation(C,of,B)) &
((object(B,man,countable,na,eq,2)) &
(card(C))))))).
000063 The train arrives in the station in the morning.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate1(A,arrive,B)) &
((modifier_pp(A,in,C)) &
((modifier_pp(A,in,D)) &
((morning(D)) &
((station(C)) &
(train(B))))))))).
000064 For each process P there is a process Q such that P relates-to Q.
fof(f1, axiom, (
! [A] : ((process(A))
=> (? [B,C] : ((process(B)) &
(predicate2(C,'relate-to',A,B))))))).
000065 Some money is green.
fof(f1, axiom, (
? [A,B] : ((A=B) &
((property1(B,green,pos)) &
(object(A,money,mass,na,na,na)))))).
000066 All money is green.
fof(f1, axiom, (
! [A] : ((object(A,money,mass,na,na,na))
=> (? [B] : ((property1(B,green,pos)) &
(A=B)))))).
000067 For all money a man waits.
fof(f1, axiom, (
! [A] : ((object(A,money,mass,na,na,na))
=> (? [B,C] : ((man(B)) &
(predicate1(C,wait,B))))))).
000068 If there is some money then a man waits.
fof(f1, axiom, (
! [A] : ((object(A,money,mass,na,na,na))
=> (? [B,C] : ((man(B)) &
(predicate1(C,wait,B))))))).
000069 There are some men.
fof(f1, axiom, (
? [A] : (object(A,man,countable,na,geq,2)))).
000070 Every man is happy.
fof(f1, axiom, (
! [A] : ((man(A))
=> (? [B] : ((A=B) &
(property1(B,happy,pos))))))).
000071 Each man is happy.
fof(f1, axiom, (
! [A] : ((man(A))
=> (? [B] : ((A=B) &
(property1(B,happy,pos))))))).
000072 No man is sad.
fof(f1, axiom, (
! [A] : ((man(A))
=> (~(? [B] : ((property1(B,sad,pos)) &
(A=B))))))).
000073 No men are sad.
fof(f1, axiom, (
! [A] : ((man(A))
=> (~(? [B] : ((property1(B,sad,pos)) &
(A=B))))))).
000074 No men wait.
fof(f1, axiom, (
! [A] : ((man(A))
=> (~(? [B] : (predicate1(B,wait,A))))))).
000075 There are no men.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000076 For every man a dog barks.
fof(f1, axiom, (
! [A] : ((man(A))
=> (? [B,C] : ((dog(B)) &
(predicate1(C,bark,B))))))).
000077 For each man a dog barks.
fof(f1, axiom, (
! [A] : ((man(A))
=> (? [B,C] : ((dog(B)) &
(predicate1(C,bark,B))))))).
000078 /* Modus Ponens */ There is a thing A. There is a thing B. If A is true and A implies B then B is true.
fof(f1, axiom, (
? [A,B] : ((! [C,D] : (((property1(C,true,pos)) &
((A=C) &
(predicate2(D,imply,A,B))))
=> (? [E] : ((property1(E,true,pos)) &
(B=E))))) &
((thing(A)) &
(thing(B)))))).
000079 What does a man look-at?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,what)
000080 A man looks-at a card.
fof(f1, axiom, (
? [A,B,C] : ((predicate2(A,'look-at',B,C)) &
((card(C)) &
(man(B)))))).
000081 There is a form. A man fills-in it.
fof(f1, axiom, (
? [A,B,C] : ((predicate2(A,'fill-in',B,C)) &
((man(B)) &
(form(C)))))).
000082 What does a man look at?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,what)
000083 A man looks at a card.
fof(f1, axiom, (
? [A,B,C] : ((predicate1(A,look,B)) &
((modifier_pp(A,at,C)) &
((card(C)) &
(man(B))))))).
000084 Every man sees every dog.
fof(f1, axiom, (
! [A] : ((man(A))
=> (! [B] : ((dog(B))
=> (? [C] : (predicate2(C,see,A,B)))))))).
000085 For every dog every man sees it.
fof(f1, axiom, (
! [A] : ((dog(A))
=> (! [B] : ((man(B))
=> (? [C] : (predicate2(C,see,B,A)))))))).
000086 A customer inserts 2 cards.
fof(f1, axiom, (
? [A,B,C] : ((predicate2(A,insert,B,C)) &
((object(C,card,countable,na,eq,2)) &
(customer(B)))))).
000087 A card is valid.
fof(f1, axiom, (
? [A,B] : ((property1(A,valid,pos)) &
((B=A) &
(card(B)))))).
000088 A new customer inserts 2 valid cards.
fof(f1, axiom, (
? [A,B,C] : ((predicate2(A,insert,B,C)) &
((property1(C,valid,pos)) &
((object(C,card,countable,na,eq,2)) &
((property1(B,new,pos)) &
(customer(B)))))))).
000089 John's customer inserts a card of Mary.
fof(f1, axiom, (
? [A,B,C] : ((relation(A,of,'John')) &
((relation(B,of,'Mary')) &
((predicate2(C,insert,A,B)) &
((card(B)) &
(customer(A)))))))).
000090 The customer Mr Miller inserts a card A.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000091 A customer who is new inserts a card that he owns.
fof(f1, axiom, (
? [A,B,C,D,E] : ((property1(A,new,pos)) &
((B=A) &
((predicate2(C,own,B,D)) &
((predicate2(E,insert,B,D)) &
((card(D)) &
(customer(B))))))))).
000092 A customer inserts some cards manually.
fof(f1, axiom, (
? [A,B,C] : ((modifier_adv(A,manually,pos)) &
((predicate2(A,insert,B,C)) &
((object(C,card,countable,na,geq,2)) &
(customer(B))))))).
000093 A customer manually inserts some cards.
fof(f1, axiom, (
? [A,B,C] : ((modifier_adv(A,manually,pos)) &
((predicate2(A,insert,B,C)) &
((object(C,card,countable,na,geq,2)) &
(customer(B))))))).
000094 A customer inserts some cards into a slot.
fof(f1, axiom, (
? [A,B,C,D] : ((modifier_pp(A,into,B)) &
((predicate2(A,insert,C,D)) &
((object(D,card,countable,na,geq,2)) &
((customer(C)) &
(slot(B)))))))).
000095 John's customer who is new inserts a valid card of Mary manually into a slot A.
fof(f1, axiom, (
? [A,B,C,D,E] : ((modifier_adv(A,manually,pos)) &
((modifier_pp(A,into,B)) &
((predicate2(A,insert,C,D)) &
((relation(D,of,'Mary')) &
((property1(D,valid,pos)) &
((card(D)) &
((relation(C,of,'John')) &
((property1(E,new,pos)) &
((C=E) &
((customer(C)) &
(slot(B)))))))))))))).
000096 A customer inserts a card and enters a code.
fof(f1, axiom, (
? [A,B,C,D,E] : ((predicate2(A,insert,B,C)) &
((predicate2(D,enter,B,E)) &
((code(E)) &
((customer(B)) &
(card(C)))))))).
000097 An old and a:trusted customer enters a card and a code.
fof(f1, axiom, (
? [A,B,C,D,E] : ((property1(A,old,pos)) &
((property1(A,trusted,pos)) &
((predicate2(B,enter,A,C)) &
((has_part(C,D)) &
((has_part(C,E)) &
((code(E)) &
((object(C,na,countable,na,eq,2)) &
((card(D)) &
(customer(A)))))))))))).
000098 A customer inserts a card or enters a code.
fof(f1, axiom, (
? [A] : ((customer(A)) &
(? [B,C] : (((card(B)) &
(predicate2(C,insert,A,B)))
| (? [D,E] : ((code(D)) &
(predicate2(E,enter,A,D))))))))).
000099 Every customer inserts a card.
fof(f1, axiom, (
! [A] : ((customer(A))
=> (? [B,C] : ((card(B)) &
(predicate2(C,insert,A,B))))))).
000100 There is a card that every customer inserts.
fof(f1, axiom, (
? [A] : ((card(A)) &
(! [B] : ((customer(B))
=> (? [C] : (predicate2(C,insert,B,A)))))))).
000101 For every card there is a customer who inserts it.
fof(f1, axiom, (
! [A] : ((card(A))
=> (? [B,C] : ((customer(B)) &
(predicate2(C,insert,B,A))))))).
000102 A customer does not insert a card.
fof(f1, axiom, (
? [A] : ((customer(A)) &
(~(? [B,C] : ((card(B)) &
(predicate2(C,insert,A,B)))))))).
000103 A card is not valid.
fof(f1, axiom, (
? [A] : ((card(A)) &
(~(? [B] : ((A=B) &
(property1(B,valid,pos)))))))).
000104 No customer inserts more than 2 cards.
fof(f1, axiom, (
! [A] : ((customer(A))
=> (~(? [B,C] : ((object(B,card,countable,na,greater,2)) &
(predicate2(C,insert,A,B)))))))).
000105 There is no customer who inserts a card.
fof(f1, axiom, (
~(? [A,B,C] : ((customer(A)) &
((card(B)) &
(predicate2(C,insert,A,B))))))).
000106 It is not the case that a customer inserts a card.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000107 A customer inserts a card.
fof(f1, axiom, (
? [A,B,C] : ((predicate2(A,insert,B,C)) &
((card(C)) &
(customer(B)))))).
000108 Does a customer insert a card?
fof(f1, conjecture, (
? [A,B,C] : ((customer(A)) &
((card(B)) &
(predicate2(C,insert,A,B)))))).
000109 A new customer inserts a valid card manually.
fof(f1, axiom, (
? [A,B,C] : ((property1(A,new,pos)) &
((property1(B,valid,pos)) &
((predicate2(C,insert,A,B)) &
((modifier_adv(C,manually,pos)) &
((card(B)) &
(customer(A))))))))).
000110 Who inserts a card?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,who)
000111 Which customer inserts a card?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,which)
000112 What does the customer insert?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,what)
000113 How does the customer insert a card?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,how)
000114 There is John and there is a card that John enters. Does John enter the card?
ERROR	DRS is empty	apply_converter/2	drs([],[])
000115 A customer inserts a card that is valid and opens an account.
fof(f1, axiom, (
? [A,B,C,D,E,F] : ((predicate2(A,open,B,C)) &
((predicate2(D,insert,B,E)) &
((E=F) &
((property1(F,valid,pos)) &
((card(E)) &
((customer(B)) &
(account(C)))))))))).
000116 A customer inserts a card that is valid and that opens an account.
fof(f1, axiom, (
? [A,B,C,D,E,F] : ((predicate2(A,insert,B,C)) &
((predicate2(D,open,C,E)) &
((C=F) &
((property1(F,valid,pos)) &
((card(C)) &
((account(E)) &
(customer(B)))))))))).
000117 The customer inserts a card with a code.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate2(A,insert,B,C)) &
((modifier_pp(A,with,D)) &
((code(D)) &
((card(C)) &
(customer(B)))))))).
000118 The customer inserts a card that carries a code.
fof(f1, axiom, (
? [A,B,C,D,E] : ((predicate2(A,carry,B,C)) &
((predicate2(D,insert,E,B)) &
((card(B)) &
((customer(E)) &
(code(C)))))))).
000119 The customer inserts a card and a code.
fof(f1, axiom, (
? [A,B,C,D,E] : ((predicate2(A,insert,B,C)) &
((has_part(C,D)) &
((has_part(C,E)) &
((code(E)) &
((object(C,na,countable,na,eq,2)) &
((card(D)) &
(customer(B)))))))))).
000120 The customer who inserts a card manually enters a code.
fof(f1, axiom, (
? [A,B,C,D,E] : ((predicate2(A,insert,B,C)) &
((modifier_adv(A,manually,pos)) &
((predicate2(D,enter,B,E)) &
((code(E)) &
((customer(B)) &
(card(C))))))))).
000121 A customer enters a red card and a blue card. The card is correct.
fof(f1, axiom, (
? [A,B,C,D,E,F] : ((property1(A,red,pos)) &
((predicate2(B,enter,C,D)) &
((property1(E,blue,pos)) &
((has_part(D,A)) &
((has_part(D,E)) &
((property1(F,correct,pos)) &
((E=F) &
((card(E)) &
((object(D,na,countable,na,eq,2)) &
((card(A)) &
(customer(C)))))))))))))).
000122 A customer enters a red card and a blue card. The red card is correct.
fof(f1, axiom, (
? [A,B,C,D,E,F] : ((property1(A,red,pos)) &
((predicate2(B,enter,C,D)) &
((property1(E,blue,pos)) &
((has_part(D,A)) &
((has_part(D,E)) &
((card(E)) &
((object(D,na,countable,na,eq,2)) &
((property1(F,correct,pos)) &
((A=F) &
((card(A)) &
(customer(C)))))))))))))).
000123 A customer does not enter a card. The card is correct.
fof(f1, axiom, (
? [A] : ((~(? [B,C] : ((card(B)) &
(predicate2(C,enter,A,B))))) &
(customer(A))))).

fof(f2, axiom, (
? [A,B] : ((property1(A,correct,pos)) &
((B=A) &
(card(B)))))).
000124 A customer inserts a card and the machine checks the code.
fof(f1, axiom, (
? [A,B,C] : ((predicate2(A,insert,B,C)) &
((card(C)) &
(customer(B)))))).

fof(f2, axiom, (
? [A,B,C] : ((predicate2(A,check,B,C)) &
((code(C)) &
(machine(B)))))).
000125 An old and happy customer enters a card and a code.
fof(f1, axiom, (
? [A,B,C,D,E] : ((property1(A,old,pos)) &
((property1(A,happy,pos)) &
((predicate2(B,enter,A,C)) &
((has_part(C,D)) &
((has_part(C,E)) &
((code(E)) &
((object(C,na,countable,na,eq,2)) &
((card(D)) &
(customer(A)))))))))))).
000126 If a card is valid then a customer inserts it.
fof(f1, axiom, (
! [A,B] : (((card(B)) &
((B=A) &
(property1(A,valid,pos))))
=> (? [C,D] : ((customer(C)) &
(predicate2(D,insert,C,B))))))).
000127 A customer enters a card and a code. If a code is valid then SimpleMat accepts a card. If a code is not valid then SimpleMat rejects a card.
fof(f1, axiom, (
? [A,B,C,D,E] : ((predicate2(A,enter,B,C)) &
((has_part(C,D)) &
((has_part(C,E)) &
((code(E)) &
((object(C,na,countable,na,eq,2)) &
((card(D)) &
(customer(B)))))))))).

fof(f2, axiom, (
! [A,B] : (((code(B)) &
((B=A) &
(property1(A,valid,pos))))
=> (? [C,D] : ((card(C)) &
(predicate2(D,accept,'SimpleMat',C))))))).

fof(f3, axiom, (
! [A] : (((~(? [B] : ((A=B) &
(property1(B,valid,pos))))) &
(code(A)))
=> (? [C,D] : ((card(C)) &
(predicate2(D,reject,'SimpleMat',C))))))).
000128 A customer enters a card and a code. If it is valid then SimpleMat accepts the card. If it is not valid then SimpleMat rejects the card.
fof(f1, axiom, (
? [A,B,C,D,E] : (((~(? [F] : ((property1(F,valid,pos)) &
('SimpleMat'=F))))
=> (? [G] : (predicate2(G,reject,'SimpleMat',E)))) &
((! [H] : (((property1(H,valid,pos)) &
(B=H))
=> (? [I] : (predicate2(I,accept,'SimpleMat',E))))) &
((object(A,na,countable,na,eq,2)) &
((has_part(A,B)) &
((code(B)) &
((predicate2(C,enter,D,A)) &
((has_part(A,E)) &
((card(E)) &
(customer(D)))))))))))).
000129 A customer enters a card CARD and a code CODE. If CODE is valid then SimpleMat accepts CARD. If CODE is not valid then SimpleMat rejects CARD.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000130 A customer enters a card CARD and a code CODE. If the code CODE is valid then SimpleMat accepts the card CARD. If the code CODE is not valid then SimpleMat rejects the card CARD.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000131 A clerk enters every card of him.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000132 It is permitted that John waits.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000133 A clerk enters every card of himself.
fof(f1, axiom, (
? [A] : ((! [B] : (((card(B)) &
(relation(B,of,A)))
=> (? [C] : (predicate2(C,enter,A,B))))) &
(clerk(A))))).
000134 There are some men. For each of they the card is valid.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000135 A clerk rejects a card or accepts it.
fof(f1, axiom, (
? [A] : ((clerk(A)) &
(? [B,C] : (((card(B)) &
(predicate2(C,reject,A,B)))
| (? [D] : (predicate2(D,accept,A,B)))))))).
000136 John's new customer is happy.
fof(f1, axiom, (
? [A,B] : ((relation(A,of,'John')) &
((property1(A,new,pos)) &
((property1(B,happy,pos)) &
((A=B) &
(customer(A)))))))).
000137 What does a man enter?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,what)
000138 A man sees a dog that barks.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate1(A,bark,B)) &
((predicate2(C,see,D,B)) &
((dog(B)) &
(man(D))))))).
000139 If a clerk enters a card then he does not own it.
fof(f1, axiom, (
! [A,B,C] : (((clerk(B)) &
((card(C)) &
(predicate2(A,enter,B,C))))
=> (~(? [D] : (predicate2(D,own,B,C))))))).
000140 A man enters no card.
fof(f1, axiom, (
? [A] : ((! [B] : ((card(B))
=> (~(? [C] : (predicate2(C,enter,A,B)))))) &
(man(A))))).
000141 No card is valid.
fof(f1, axiom, (
! [A] : ((card(A))
=> (~(? [B] : ((property1(B,valid,pos)) &
(A=B))))))).
000142 There is John and there is Mary. He and she wait.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000143 A man enters every card in the morning.
fof(f1, axiom, (
? [A] : ((! [B] : ((card(B))
=> (? [C,D] : ((predicate2(C,enter,A,B)) &
((modifier_pp(C,in,D)) &
(morning(D))))))) &
(man(A))))).
000144 A man enters no card manually.
fof(f1, axiom, (
? [A] : ((! [B] : ((card(B))
=> (~(? [C] : ((predicate2(C,enter,A,B)) &
(modifier_adv(C,manually,pos))))))) &
(man(A))))).
000145 A man walks or a woman sees the man.
fof(f1, axiom, (
? [A,B] : (((man(A)) &
(predicate1(B,walk,A)))
| (? [C,D] : ((woman(C)) &
(predicate2(D,see,C,A))))))).
000146 A man walks or a woman sees the man. There is John.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000147 There is a man. There is a card or the man inserts it.
fof(f1, axiom, (
? [A] : ((man(A)) &
(? [B] : ((card(B))
| (? [C] : (predicate2(C,insert,A,B)))))))).
000148 A card CARD is green.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000149 Every dog is evil.
fof(f1, axiom, (
! [A] : ((dog(A))
=> (? [B] : ((A=B) &
(property1(B,evil,pos))))))).
000150 For every dog every man sees the dog.
fof(f1, axiom, (
! [A] : ((dog(A))
=> (! [B] : ((man(B))
=> (? [C] : (predicate2(C,see,B,A)))))))).
000151 A man Kaarel tests an ape.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000152 Where does a man enter a card?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,where)
000153 How does a man enter a card?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,how)
000154 When does a man enter a card?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,when)
000155 Is there a man?
fof(f1, conjecture, (
? [A] : (man(A)))).
000156 It is not the case that some men wait.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000157 A number "1" is smaller than a number "2".
ERROR	DRS is empty	apply_converter/2	drs([],[])
000158 A number "3.14" is a ratio of a circumference of a circle to its diameter.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000159 There is a number "3.14...".
ERROR	DRS is empty	apply_converter/2	drs([],[])
000160 A number Pi is a ratio of a circumference of a circle to its diameter.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000161 A man sees a dog's tail.
fof(f1, axiom, (
? [A,B,C,D] : ((relation(A,of,B)) &
((predicate2(C,see,D,A)) &
((tail(A)) &
((man(D)) &
(dog(B)))))))).
000162 A mat on which a cat waits is red.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate1(A,wait,B)) &
((modifier_pp(A,on,C)) &
((property1(D,red,pos)) &
((C=D) &
((mat(C)) &
(cat(B))))))))).
000163 A man sees a mat on which a cat sits.
fof(f1, axiom, (
? [A,B,C,D,E] : ((predicate1(A,sit,B)) &
((modifier_pp(A,on,C)) &
((predicate2(D,see,E,C)) &
((mat(C)) &
((man(E)) &
(cat(B))))))))).
000164 A man sees a mat on which every cat sits.
fof(f1, axiom, (
? [A,B,C] : ((! [D] : ((cat(D))
=> (? [E] : ((modifier_pp(E,on,C)) &
(predicate1(E,sit,D)))))) &
((predicate2(A,see,B,C)) &
((mat(C)) &
(man(B))))))).
000165 A man sees every mat on which a cat sits.
fof(f1, axiom, (
? [A] : ((man(A)) &
(! [B,C,D] : (((mat(C)) &
((cat(D)) &
((modifier_pp(B,on,C)) &
(predicate1(B,sit,D)))))
=> (? [E] : (predicate2(E,see,A,C)))))))).
000166 Some cards a green.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000167 A man has 2 kg of apples.
fof(f1, axiom, (
? [A,B,C] : ((predicate2(A,have,B,C)) &
((object(C,apple,countable,kg,eq,2)) &
(man(B)))))).
000168 A man has 2 ton of apples.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000169 John is a rich man.
fof(f1, axiom, (
? [A] : ((property1(A,rich,pos)) &
(('John'=A) &
(man(A)))))).
000170 A man enters a card which is green or which is red.
fof(f1, axiom, (
? [A,B,C] : ((? [D] : (((C=D) &
(property1(D,green,pos)))
| (? [E] : ((C=E) &
(property1(E,red,pos)))))) &
((predicate2(A,enter,B,C)) &
((card(C)) &
(man(B))))))).
000171 There is a green card or there is a red card such that a man enters it.
fof(f1, axiom, (
? [A] : (((card(A)) &
(property1(A,green,pos)))
| (? [B,C,D] : ((card(C)) &
((man(D)) &
((predicate2(B,enter,D,C)) &
(property1(C,red,pos))))))))).
000172 For each card which is green or which is red a man enters it.
fof(f1, axiom, (
! [A] : (((? [B] : (((A=B) &
(property1(B,green,pos)))
| (? [C] : ((A=C) &
(property1(C,red,pos)))))) &
(card(A)))
=> (? [D,E] : ((man(D)) &
(predicate2(E,enter,D,A))))))).
000173 A man is fond-of a dog.
fof(f1, axiom, (
? [A,B,C] : ((A=B) &
((property2(B,'fond-of',pos,C)) &
((dog(C)) &
(man(A))))))).
000174 Everybody gives something to somebody.
fof(f1, axiom, (
! [A] : (($true)
=> (? [B,C,D] : (($true) &
(($true) &
(predicate3(D,give,A,B,C)))))))).
000175 Everybody gives somebody something.
fof(f1, axiom, (
! [A] : (($true)
=> (? [B,C,D] : (($true) &
(($true) &
(predicate3(D,give,A,C,B)))))))).
000176 Nobody barks.
fof(f1, axiom, (
! [A] : (($true)
=> (~(? [B] : (predicate1(B,bark,A))))))).
000177 Everybody blames somebody and nobody works.
fof(f1, axiom, (
! [A] : (($true)
=> (~(? [B] : (predicate1(B,work,A))))))).

fof(f2, axiom, (
! [A] : (($true)
=> (? [B,C] : (($true) &
(predicate2(C,blame,A,B))))))).
000178 A persona non grata enters a zip code.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000179 John beats his own wife.
fof(f1, axiom, (
? [A,B] : ((relation(A,of,'John')) &
((predicate2(B,beat,'John',A)) &
(wife(A)))))).
000180 John beats his own wife's mother.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000181 John beats a mother of his own wife.
fof(f1, axiom, (
? [A,B,C] : ((relation(A,of,'John')) &
((relation(B,of,A)) &
((predicate2(C,beat,'John',B)) &
((mother(B)) &
(wife(A)))))))).
000182 John beats a mother of his own wife's brother.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000183 No laundries are clean.
fof(f1, axiom, (
! [A] : ((laundry(A))
=> (~(? [B] : ((property1(B,clean,pos)) &
(A=B))))))).
000184 No laundry is clean.
fof(f1, axiom, (
! [A] : ((laundry(A))
=> (~(? [B] : ((property1(B,clean,pos)) &
(A=B))))))).
000185 John's laundries are clean.
fof(f1, axiom, (
? [A,B] : ((relation(A,of,'John')) &
((object(A,laundry,countable,na,geq,2)) &
((A=B) &
(property1(B,clean,pos))))))).
000186 A man eats and he drinks.
fof(f1, axiom, (
? [A,B,C] : ((predicate1(A,eat,B)) &
((predicate1(C,drink,B)) &
(man(B)))))).
000187 A man eats, and he drinks.
fof(f1, axiom, (
? [A,B,C] : ((predicate1(A,eat,B)) &
((predicate1(C,drink,B)) &
(man(B)))))).
000188 A man eats or he drinks.
fof(f1, axiom, (
? [A,B] : (((man(A)) &
(predicate1(B,eat,A)))
| (? [C] : (predicate1(C,drink,A)))))).
000189 A man eats, or he drinks.
fof(f1, axiom, (
? [A,B] : (((man(A)) &
(predicate1(B,eat,A)))
| (? [C] : (predicate1(C,drink,A)))))).
000190 A man eats and he drinks or he sleeps.
fof(f1, axiom, (
? [A,B,C] : (((man(B)) &
((predicate1(C,drink,B)) &
(predicate1(A,eat,B))))
| (? [D] : (predicate1(D,sleep,B)))))).
000191 A man eats or he drinks or he sleeps.
fof(f1, axiom, (
? [A,B] : (((man(A)) &
(predicate1(B,eat,A)))
| (? [C] : ((predicate1(C,drink,A))
| (? [D] : (predicate1(D,sleep,A)))))))).
000192 There is John.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000193 Is there John?
ERROR	DRS is empty	apply_converter/2	drs([],[])
000194 There is John. There is Mary. His and her card's code is valid.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000195 A man that enters a card waits.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate2(A,enter,B,C)) &
((predicate1(D,wait,B)) &
((man(B)) &
(card(C))))))).
000196 A man the card of who is valid waits.
fof(f1, axiom, (
? [A,B,C,D] : ((relation(A,of,B)) &
((property1(C,valid,pos)) &
((A=C) &
((card(A)) &
((predicate1(D,wait,B)) &
(man(B))))))))).
000197 A card that a man enters is valid.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate2(A,enter,B,C)) &
((property1(D,valid,pos)) &
((C=D) &
((card(C)) &
(man(B)))))))).
000198 A card the code of which a man enters is valid.
fof(f1, axiom, (
? [A,B,C,D,E] : ((predicate2(A,enter,B,C)) &
((property1(D,valid,pos)) &
((E=D) &
((relation(C,of,E)) &
((code(C)) &
((card(E)) &
(man(B)))))))))).
000199 A bank in which a man enters a code is open.
fof(f1, axiom, (
? [A,B,C,D,E] : ((predicate2(A,enter,B,C)) &
((modifier_pp(A,in,D)) &
((property1(E,open,pos)) &
((D=E) &
((bank(D)) &
((code(C)) &
(man(B)))))))))).
000200 A man that eats and that drinks is happy.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate1(A,eat,B)) &
((predicate1(C,drink,B)) &
((property1(D,happy,pos)) &
((B=D) &
(man(B)))))))).
000201 A man that eats or that drinks is happy.
fof(f1, axiom, (
? [A,B] : ((? [C] : ((predicate1(C,eat,B))
| (? [D] : (predicate1(D,drink,B))))) &
((property1(A,happy,pos)) &
((B=A) &
(man(B))))))).
000202 A man that eats or that drinks or that talks is happy.
fof(f1, axiom, (
? [A,B] : ((? [C] : ((predicate1(C,eat,B))
| (? [D] : ((predicate1(D,drink,B))
| (? [E] : (predicate1(E,talk,B))))))) &
((property1(A,happy,pos)) &
((B=A) &
(man(B))))))).
000203 A man that eats or that drinks and that talks is happy.
fof(f1, axiom, (
? [A,B] : ((? [C] : ((predicate1(C,eat,B))
| (? [D,E] : ((predicate1(D,talk,B)) &
(predicate1(E,drink,B)))))) &
((property1(A,happy,pos)) &
((B=A) &
(man(B))))))).
000204 A man that eats and that drinks or that talks is happy.
fof(f1, axiom, (
? [A,B] : ((? [C,D] : (((predicate1(C,drink,B)) &
(predicate1(D,eat,B)))
| (? [E] : (predicate1(E,talk,B))))) &
((property1(A,happy,pos)) &
((B=A) &
(man(B))))))).
000205 A man the card of who is valid or the card of who is green waits.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,wait,B)) &
((? [C,D] : (((card(C)) &
((relation(C,of,B)) &
((property1(D,valid,pos)) &
(C=D))))
| (? [E] : ((property1(E,green,pos)) &
(C=E))))) &
(man(B)))))).
000206 A man the card of who is valid or who is green waits.
fof(f1, axiom, (
? [A,B] : ((? [C,D] : (((card(D)) &
((D=C) &
((property1(C,valid,pos)) &
(relation(D,of,B)))))
| (? [E] : ((B=E) &
(property1(E,green,pos)))))) &
((predicate1(A,wait,B)) &
(man(B)))))).
000207 A man the card of who is valid or who is green and that is happy waits.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,wait,B)) &
((? [C,D] : (((property1(C,valid,pos)) &
((D=C) &
((relation(D,of,B)) &
(card(D)))))
| (? [E,F] : ((property1(E,green,pos)) &
((B=E) &
((property1(F,happy,pos)) &
(B=F))))))) &
(man(B)))))).
000208 A man writes a book the text of which is good.
fof(f1, axiom, (
? [A,B,C,D,E] : ((relation(A,of,B)) &
((property1(C,good,pos)) &
((A=C) &
((text(A)) &
((predicate2(D,write,E,B)) &
((book(B)) &
(man(E)))))))))).
000209 A man writes a book the hero of which waits.
fof(f1, axiom, (
? [A,B,C,D,E] : ((relation(A,of,B)) &
((predicate1(C,wait,A)) &
((hero(A)) &
((predicate2(D,write,E,B)) &
((book(B)) &
(man(E))))))))).
000210 For each money a man waits.
fof(f1, axiom, (
! [A] : ((money(A))
=> (? [B,C] : ((man(B)) &
(predicate1(C,wait,B))))))).
000211 A man waits-for something.
fof(f1, axiom, (
? [A,B,C] : ((predicate2(A,'wait-for',B,C)) &
(($true) &
(man(B)))))).
000212 Some cards are green.
fof(f1, axiom, (
? [A,B] : ((A=B) &
((property1(B,green,pos)) &
(object(A,card,countable,na,geq,2)))))).
000213 A man is a:reich.
fof(f1, axiom, (
? [A,B] : ((property1(A,reich,pos)) &
((B=A) &
(man(B)))))).
000214 A man is good or is bad.
fof(f1, axiom, (
? [A] : ((man(A)) &
(? [B] : (((A=B) &
(property1(B,good,pos)))
| (? [C] : ((A=C) &
(property1(C,bad,pos))))))))).
000215 A man is good, or is bad.
fof(f1, axiom, (
? [A] : ((man(A)) &
(? [B] : (((A=B) &
(property1(B,good,pos)))
| (? [C] : ((A=C) &
(property1(C,bad,pos))))))))).
000216 A man is good and is bad.
fof(f1, axiom, (
? [A,B,C] : ((property1(A,good,pos)) &
((B=A) &
((property1(C,bad,pos)) &
((B=C) &
(man(B)))))))).
000217 A man is good, and is bad.
fof(f1, axiom, (
? [A,B,C] : ((property1(A,good,pos)) &
((B=A) &
((property1(C,bad,pos)) &
((B=C) &
(man(B)))))))).
000218 A man is good and is nice or is bad.
fof(f1, axiom, (
? [A] : ((man(A)) &
(? [B,C] : (((A=B) &
((property1(B,nice,pos)) &
((A=C) &
(property1(C,good,pos)))))
| (? [D] : ((A=D) &
(property1(D,bad,pos))))))))).
000219 A man is good, and is nice or is bad.
fof(f1, axiom, (
? [A,B] : ((property1(A,good,pos)) &
((B=A) &
((man(B)) &
(? [C] : (((B=C) &
(property1(C,nice,pos)))
| (? [D] : ((B=D) &
(property1(D,bad,pos))))))))))).
000220 A man is good or is nice or is bad.
fof(f1, axiom, (
? [A] : ((man(A)) &
(? [B] : (((A=B) &
(property1(B,good,pos)))
| (? [C] : (((A=C) &
(property1(C,nice,pos)))
| (? [D] : ((A=D) &
(property1(D,bad,pos))))))))))).
000221 A man is good or is nice, or is bad.
fof(f1, axiom, (
? [A] : ((man(A)) &
((? [B] : (((A=B) &
(property1(B,good,pos)))
| (? [C] : ((A=C) &
(property1(C,nice,pos))))))
| (? [D] : ((A=D) &
(property1(D,bad,pos)))))))).
000222 There is a man that eats and drinks.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000223 There is a man that eats or drinks.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000224 There is a man that eats and that drinks.
fof(f1, axiom, (
? [A,B,C] : ((predicate1(A,drink,B)) &
((predicate1(C,eat,B)) &
(man(B)))))).
000225 There is a man the card of who is green and the code of who is valid.
fof(f1, axiom, (
? [A,B,C,D,E] : ((relation(A,of,B)) &
((property1(C,green,pos)) &
((A=C) &
((card(A)) &
((relation(D,of,B)) &
((property1(E,valid,pos)) &
((D=E) &
((code(D)) &
(man(B)))))))))))).
000226 There is a man the card of who is green or the code of who is valid.
fof(f1, axiom, (
? [A] : ((man(A)) &
(? [B,C] : (((card(C)) &
((C=B) &
((property1(B,green,pos)) &
(relation(C,of,A)))))
| (? [D,E] : ((code(E)) &
((E=D) &
((property1(D,valid,pos)) &
(relation(E,of,A))))))))))).
000227 Is there a man that waits?
fof(f1, conjecture, (
? [A,B] : ((man(A)) &
(predicate1(B,wait,A))))).
000228 There is a man that eats and that drinks or that sleeps.
fof(f1, axiom, (
? [A] : ((man(A)) &
(? [B,C] : (((predicate1(B,drink,A)) &
(predicate1(C,eat,A)))
| (? [D] : (predicate1(D,sleep,A)))))))).
000229 There is a man that eats, and that drinks or that sleeps.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,eat,B)) &
((man(B)) &
(? [C] : ((predicate1(C,drink,B))
| (? [D] : (predicate1(D,sleep,B))))))))).
000230 There is a man that eats, and that drinks or that sleeps and that waits.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,eat,B)) &
((man(B)) &
(? [C] : ((predicate1(C,drink,B))
| (? [D,E] : ((predicate1(D,wait,B)) &
(predicate1(E,sleep,B)))))))))).
000231 There is a man that eats, and that drinks or that sleeps, and that waits.
fof(f1, axiom, (
? [A,B,C] : ((predicate1(A,eat,B)) &
((? [D] : ((predicate1(D,drink,B))
| (? [E] : (predicate1(E,sleep,B))))) &
((predicate1(C,wait,B)) &
(man(B))))))).
000232 There is a man the dog of who barks and the cat of who plays or the mouse of who eats.
fof(f1, axiom, (
? [A] : ((man(A)) &
(? [B,C,D,E] : (((dog(E)) &
((cat(B)) &
((predicate1(D,play,B)) &
((relation(B,of,A)) &
((predicate1(C,bark,E)) &
(relation(E,of,A)))))))
| (? [F,G] : ((mouse(G)) &
((predicate1(F,eat,G)) &
(relation(G,of,A)))))))))).
000233 There is a man the dog of who barks, and the cat of who plays or the mouse of who eats.
fof(f1, axiom, (
? [A,B,C] : ((relation(A,of,B)) &
((predicate1(C,bark,A)) &
((dog(A)) &
((man(B)) &
(? [D,E] : (((cat(E)) &
((predicate1(D,play,E)) &
(relation(E,of,B))))
| (? [F,G] : ((mouse(G)) &
((predicate1(F,eat,G)) &
(relation(G,of,B))))))))))))).
000234 Is there a man that runs or waits?
ERROR	DRS is empty	apply_converter/2	drs([],[])
000235 Is there a man that runs or that waits?
fof(f1, conjecture, (
? [A] : ((man(A)) &
(? [B] : ((predicate1(B,run,A))
| (? [C] : (predicate1(C,wait,A)))))))).
000236 A man who is happy and sad waits.
fof(f1, axiom, (
? [A,B,C] : ((property1(A,happy,pos)) &
((property1(A,sad,pos)) &
((B=A) &
((predicate1(C,wait,B)) &
(man(B)))))))).
000237 A man who is happy or who is sad waits.
fof(f1, axiom, (
? [A,B] : ((? [C] : (((B=C) &
(property1(C,happy,pos)))
| (? [D] : ((B=D) &
(property1(D,sad,pos)))))) &
((predicate1(A,wait,B)) &
(man(B)))))).
000238 A man who is happy or who is sad and who is rich waits.
fof(f1, axiom, (
? [A,B] : ((? [C] : (((B=C) &
(property1(C,happy,pos)))
| (? [D,E] : ((B=D) &
((property1(D,rich,pos)) &
((B=E) &
(property1(E,sad,pos)))))))) &
((predicate1(A,wait,B)) &
(man(B)))))).
000239 A man who is happy or who is sad, and who is rich waits.
fof(f1, axiom, (
? [A,B,C] : ((? [D] : (((B=D) &
(property1(D,happy,pos)))
| (? [E] : ((B=E) &
(property1(E,sad,pos)))))) &
((property1(A,rich,pos)) &
((B=A) &
((predicate1(C,wait,B)) &
(man(B)))))))).
000240 A man who is happy or who is sad, and the dog of who barks waits.
fof(f1, axiom, (
? [A,B,C,D] : ((? [E] : (((B=E) &
(property1(E,happy,pos)))
| (? [F] : ((B=F) &
(property1(F,sad,pos)))))) &
((relation(A,of,B)) &
((predicate1(C,bark,A)) &
((dog(A)) &
((predicate1(D,wait,B)) &
(man(B))))))))).
000241 If there is a man who is happy or who is sad, and the dog of who barks then he waits.
fof(f1, axiom, (
! [A,B,C] : (((man(C)) &
((dog(A)) &
((predicate1(B,bark,A)) &
((relation(A,of,C)) &
(? [D] : (((C=D) &
(property1(D,happy,pos)))
| (? [E] : ((C=E) &
(property1(E,sad,pos))))))))))
=> (? [F] : (predicate1(F,wait,C)))))).
000242 2 men Gerold and Kaarel program a n:parser APE the sentences of which nobody understands.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000243 Some men Gerold and Kaarel program a n:parser APE the sentences of which nobody understands.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000244 John's code is red. John's code is blue.
fof(f1, axiom, (
? [A,B] : ((A=B) &
((property1(B,red,pos)) &
((code(A)) &
(relation(A,of,'John'))))))).

fof(f2, axiom, (
? [A,B] : ((A=B) &
((property1(B,blue,pos)) &
((code(A)) &
(relation(A,of,'John'))))))).
000245 John enters every card which is his own card.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000246 A man sees a dog and a cat.
fof(f1, axiom, (
? [A,B,C,D,E] : ((predicate2(A,see,B,C)) &
((has_part(C,D)) &
((has_part(C,E)) &
((cat(E)) &
((object(C,na,countable,na,eq,2)) &
((dog(D)) &
(man(B)))))))))).
000247 A man sees a dog and a man.
fof(f1, axiom, (
? [A,B,C,D,E] : ((predicate2(A,see,B,C)) &
((has_part(C,D)) &
((has_part(C,E)) &
((man(E)) &
((object(C,na,countable,na,eq,2)) &
((dog(D)) &
(man(B)))))))))).
000248 A man hits his own dog. The man is happy.
fof(f1, axiom, (
? [A,B,C,D] : ((A=B) &
((property1(B,happy,pos)) &
((predicate2(C,hit,A,D)) &
((relation(D,of,A)) &
((man(A)) &
(dog(D))))))))).
000249 Who waits?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,who)
000250 Who hits who?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,who)
000251 Who gives who who?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,who)
000252 Who gives who what?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,who)
000253 Who gives what to who?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,who)
000254 A man who a man who a man sees sees sees a man.
fof(f1, axiom, (
? [A,B,C,D,E,F,G] : ((predicate2(A,see,B,C)) &
((predicate2(D,see,C,E)) &
((predicate2(F,see,E,G)) &
((man(G)) &
((man(E)) &
((man(C)) &
(man(B)))))))))).
000255 There is a man whose dog is happy.
fof(f1, axiom, (
? [A,B,C] : ((A=B) &
((property1(B,happy,pos)) &
((relation(A,of,C)) &
((man(C)) &
(dog(A)))))))).
000256 A man waits at a desk in a bank.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate1(A,wait,B)) &
((modifier_pp(A,in,C)) &
((modifier_pp(A,at,D)) &
((desk(D)) &
((bank(C)) &
(man(B))))))))).
000257 Where does a man A wait?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,where)
000258 A man John gives his own wife Mary a unknownword.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000259 A syntactic error is in the sentence.
fof(f1, axiom, (
? [A,B,C] : ((modifier_pp(A,in,B)) &
((predicate1(A,be,C)) &
((property1(C,syntactic,pos)) &
((error(C)) &
(sentence(B)))))))).
000260 There is a man A. A sees himself.
fof(f1, axiom, (
? [A,B] : ((predicate2(A,see,B,B)) &
(man(B))))).
000261 There are John and Mary.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000262 There are John and Mary. There are Bill and Mary.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000263 There is a man. There is the woman.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000264 There is the man A.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000265 There is someone. He waits.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,wait,B)) &
($true)))).
000266 There is something. It waits.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,wait,B)) &
($true)))).
000267 Who sees himself?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,who)
000268 Somebody sees himself/herself.
fof(f1, axiom, (
? [A,B] : ((predicate2(A,see,B,B)) &
($true)))).
000269 Who see themselves?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,who)
000270 Who sees themselves?
ERROR	DRS is empty	apply_converter/2	drs([],[])
000271 There is somebody. They wait.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000272 Who runs and hits himself?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,who)
000273 Who wait?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,who)
000274 John waits. John runs.
fof(f1, axiom, (
? [A] : (predicate1(A,wait,'John')))).

fof(f2, axiom, (
? [A] : (predicate1(A,run,'John')))).
000275 There is a man. There is a boy. He sees him.
fof(f1, axiom, (
? [A,B,C] : ((predicate2(A,see,B,C)) &
((boy(B)) &
(man(C)))))).
000276 There is a man. There is a boy. He sees himself.
fof(f1, axiom, (
? [A] : (man(A)))).

fof(f2, axiom, (
? [A,B] : ((predicate2(A,see,B,B)) &
(boy(B))))).
000277 There is a boy. He sees the boy.
fof(f1, axiom, (
? [A,B] : ((predicate2(A,see,B,B)) &
(boy(B))))).
000278 There is a man. There is a boy. The man sees the boy.
fof(f1, axiom, (
? [A,B,C] : ((predicate2(A,see,B,C)) &
((boy(C)) &
(man(B)))))).
000279 There is a man. There is a boy. The man sees himself.
fof(f1, axiom, (
? [A,B] : ((predicate2(A,see,B,B)) &
(man(B))))).

fof(f2, axiom, (
? [A] : (boy(A)))).
000280 There is a man. There is a boy. The man sees a boy.
fof(f1, axiom, (
? [A,B,C] : ((predicate2(A,see,B,C)) &
((boy(C)) &
(man(B)))))).

fof(f2, axiom, (
? [A] : (boy(A)))).
000281 There are a man and a dog.
fof(f1, axiom, (
? [A,B,C] : ((has_part(A,B)) &
((has_part(A,C)) &
((dog(C)) &
((object(A,na,countable,na,eq,2)) &
(man(B)))))))).
000282 There are a man and he.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000283 There is a boy. There are a man and he.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000284 There is a laundry. The laundry is clean.
fof(f1, axiom, (
? [A,B] : ((property1(A,clean,pos)) &
((B=A) &
(laundry(B)))))).
000285 There is some laundry. The laundry is clean.
fof(f1, axiom, (
? [A,B] : ((A=B) &
((property1(B,clean,pos)) &
(object(A,laundry,mass,na,na,na)))))).
000286 There is a man John.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000287 There is a man John. John sleeps.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000288 A man likes a dog. It barks.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate2(A,like,B,C)) &
((predicate1(D,bark,C)) &
((dog(C)) &
(man(B))))))).
000289 A man does not like John. He waits.
fof(f1, axiom, (
? [A] : ((~(? [B] : (predicate2(B,like,A,'John')))) &
(man(A))))).

fof(f2, axiom, (
? [A] : (predicate1(A,wait,'John')))).
000290 A man does not like a man John.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000291 A man likes a boy John.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000292 For every wolf for every fox the wolf does not eat the fox.
fof(f1, axiom, (
! [A] : ((wolf(A))
=> (! [B] : ((fox(B))
=> (~(? [C] : (predicate2(C,eat,A,B))))))))).
000293 If a man owns a donkey then he beats it.
fof(f1, axiom, (
! [A,B,C] : (((man(C)) &
((donkey(A)) &
(predicate2(B,own,C,A))))
=> (? [D] : (predicate2(D,beat,C,A)))))).
000294 If John owns a donkey then he beats it.
fof(f1, axiom, (
! [A,B] : (((donkey(A)) &
(predicate2(B,own,'John',A)))
=> (? [C] : (predicate2(C,beat,'John',A)))))).
000295 Every farmer who owns a donkey beats it.
fof(f1, axiom, (
! [A,B,C] : (((farmer(C)) &
((donkey(A)) &
(predicate2(B,own,C,A))))
=> (? [D] : (predicate2(D,beat,C,A)))))).
000296 John owns a donkey. He beats it.
fof(f1, axiom, (
? [A,B,C] : ((predicate2(A,own,'John',B)) &
((predicate2(C,beat,'John',B)) &
(donkey(B)))))).
000297 Every man who loves a woman who loves him is happy.
fof(f1, axiom, (
! [A,B,C,D] : (((man(D)) &
((woman(B)) &
((predicate2(A,love,D,B)) &
(predicate2(C,love,B,D)))))
=> (? [E] : ((D=E) &
(property1(E,happy,pos))))))).
000298 If there is a man and there is a woman and the man loves the woman and the woman loves the man then the man is happy.
fof(f1, axiom, (
! [A,B,C,D] : (((man(D)) &
((woman(B)) &
((predicate2(A,love,B,D)) &
(predicate2(C,love,D,B)))))
=> (? [E] : ((D=E) &
(property1(E,happy,pos))))))).
000299 John owns Mary. He beats her.
fof(f1, axiom, (
? [A] : (predicate2(A,own,'John','Mary')))).

fof(f2, axiom, (
? [A] : (predicate2(A,beat,'John','Mary')))).
000300 There is a man who sees himself.
fof(f1, axiom, (
? [A,B] : ((predicate2(A,see,B,B)) &
(man(B))))).
000301 There is a boy. There is a man who he sees.
fof(f1, axiom, (
? [A,B,C] : ((predicate2(A,see,B,C)) &
((man(C)) &
(boy(B)))))).
000302 There is a boy. There is a man who sees him.
fof(f1, axiom, (
? [A,B,C] : ((predicate2(A,see,B,C)) &
((man(B)) &
(boy(C)))))).
000303 There is a man who the man sees.
fof(f1, axiom, (
? [A,B] : ((man(A)) &
(predicate2(B,see,A,A))))).
000304 There is a man who sees the man.
fof(f1, axiom, (
? [A,B] : ((predicate2(A,see,B,B)) &
(man(B))))).
000305 A man Man1 waits.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000306 A man Man1 waits. The man Man1 is happy.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000307 A man Man1 waits. Man1 is happy.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000308 There is a dog. A man does not see the dog. It is under the bed.
fof(f1, axiom, (
? [A,B,C,D] : ((modifier_pp(A,under,B)) &
((predicate1(A,be,C)) &
((~(? [E] : (predicate2(E,see,D,C)))) &
((dog(C)) &
((man(D)) &
(bed(B))))))))).
000309 Some abaci are green.
fof(f1, axiom, (
? [A,B] : ((A=B) &
((property1(B,green,pos)) &
(object(A,abacus,countable,na,geq,2)))))).
000310 A man enters a card manually and waits.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate2(A,enter,B,C)) &
((modifier_adv(A,manually,pos)) &
((predicate1(D,wait,B)) &
((man(B)) &
(card(C)))))))).
000311 Which man the dog of who sees a bone is there?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,which)
000312 Which man the dog of who sees a bone waits?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,which)
000313 Which man who eats waits?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,which)
000314 Which man whose dog sees a bone waits?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,which)
000315 A man hits a dog the bone of who is green.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000316 A man hits a dog whose bone is green.
fof(f1, axiom, (
? [A,B,C,D,E] : ((predicate2(A,hit,B,C)) &
((D=E) &
((property1(E,green,pos)) &
((relation(D,of,C)) &
((dog(C)) &
((bone(D)) &
(man(B)))))))))).
000317 Which man is there?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,which)
000318 Who does a man hit?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,who)
000319 A man waits in a room in a bank.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate1(A,wait,B)) &
((modifier_pp(A,in,C)) &
((modifier_pp(A,in,D)) &
((room(D)) &
((bank(C)) &
(man(B))))))))).
000320 A man waits quickly in a bank.
fof(f1, axiom, (
? [A,B,C] : ((modifier_adv(A,quickly,pos)) &
((modifier_pp(A,in,B)) &
((predicate1(A,wait,C)) &
((man(C)) &
(bank(B)))))))).
000321 A man waits in a bank quickly.
fof(f1, axiom, (
? [A,B,C] : ((modifier_pp(A,in,B)) &
((modifier_adv(A,quickly,pos)) &
((predicate1(A,wait,C)) &
((man(C)) &
(bank(B)))))))).
000322 A man hits a dog which runs fast.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate2(A,hit,B,C)) &
((modifier_adv(D,fast,pos)) &
((predicate1(D,run,C)) &
((dog(C)) &
(man(B)))))))).
000323 A man hits a dog which runs fast quickly.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000324 A man quickly hits a dog which runs fast.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate1(A,run,B)) &
((modifier_adv(A,fast,pos)) &
((predicate2(C,hit,D,B)) &
((modifier_adv(C,quickly,pos)) &
((dog(B)) &
(man(D))))))))).
000325 Whose card is valid?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,what)
000326 Is the man's card valid?
fof(f1, conjecture, (
? [A,B,C] : ((relation(A,of,C)) &
((card(A)) &
((property1(B,valid,pos)) &
((A=B) &
(man(C)))))))).
000327 John is small.
fof(f1, axiom, (
? [A] : ((property1(A,small,pos)) &
('John'=A)))).
000328 A man hits a green dog that barks.
fof(f1, axiom, (
? [A,B,C,D] : ((property1(A,green,pos)) &
((predicate1(B,bark,A)) &
((predicate2(C,hit,D,A)) &
((dog(A)) &
(man(D)))))))).
000329 The card of which man is valid?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,which)
000330 The card of who is valid?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,who)
000331 Which card of which man is valid?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,which)
000332 There is a card of a man which is valid.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000333 There is a man. If the man enters a card then the card is correct.
fof(f1, axiom, (
? [A] : ((man(A)) &
(! [B,C] : (((card(C)) &
(predicate2(B,enter,A,C)))
=> (? [D] : ((C=D) &
(property1(D,correct,pos))))))))).
000334 There is a man. If the man enters a card then the card is correct. He sleeps.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,sleep,B)) &
((! [C,D] : (((card(C)) &
(predicate2(D,enter,B,C)))
=> (? [E] : ((property1(E,correct,pos)) &
(C=E))))) &
(man(B)))))).
000335 John eats or John drinks.
fof(f1, axiom, (
? [A] : ((predicate1(A,eat,'John'))
| (? [B] : (predicate1(B,drink,'John')))))).
000336 John eats or John drinks. Mary eats or Mary drinks or Bill sleeps.
fof(f1, axiom, (
? [A] : ((predicate1(A,eat,'John'))
| (? [B] : (predicate1(B,drink,'John')))))).

fof(f2, axiom, (
? [A] : ((predicate1(A,eat,'Mary'))
| (? [B] : ((predicate1(B,drink,'Mary'))
| (? [C] : (predicate1(C,sleep,'Bill')))))))).
000337 There are John and 2 men.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000338 There are John and 2 men ManGroup.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000339 There are John and 2 men ManGroup. ManGroup is happy.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000340 There are a man X and a man Y and a man Z.
fof(f1, axiom, (
? [A,B,C,D] : ((has_part(A,B)) &
((has_part(A,C)) &
((has_part(A,D)) &
((man(D)) &
((object(A,na,countable,na,eq,3)) &
((man(C)) &
(man(B)))))))))).
000341 There are some men. If they are happy then they wait.
fof(f1, axiom, (
? [A] : ((! [B] : (((property1(B,happy,pos)) &
(A=B))
=> (? [C] : (predicate1(C,wait,A))))) &
(object(A,man,countable,na,geq,2))))).
000342 If John waits then John sleeps.
fof(f1, axiom, (
! [A] : ((predicate1(A,wait,'John'))
=> (? [B] : (predicate1(B,sleep,'John')))))).
000343 If John waits then he sleeps.
fof(f1, axiom, (
! [A] : ((predicate1(A,wait,'John'))
=> (? [B] : (predicate1(B,sleep,'John')))))).
000344 If a man John waits then he sleeps.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000345 John's laundry is clean.
fof(f1, axiom, (
? [A,B] : ((A=B) &
((property1(B,clean,pos)) &
((relation(A,of,'John')) &
(laundry(A))))))).
000346 Some laundry of John is clean.
fof(f1, axiom, (
? [A,B] : ((A=B) &
((property1(B,clean,pos)) &
((relation(A,of,'John')) &
(object(A,laundry,mass,na,na,na))))))).
000347 A laundry of John is clean.
fof(f1, axiom, (
? [A,B] : ((relation(A,of,'John')) &
((property1(B,clean,pos)) &
((A=B) &
(laundry(A))))))).
000348 Something happens. It is good.
fof(f1, axiom, (
? [A,B,C] : ((A=B) &
((property1(B,good,pos)) &
((predicate1(C,happen,A)) &
($true)))))).
000349 Nobody waits.
fof(f1, axiom, (
! [A] : (($true)
=> (~(? [B] : (predicate1(B,wait,A))))))).
000350 Nobody sees himself.
fof(f1, axiom, (
! [A] : (($true)
=> (~(? [B] : (predicate2(B,see,A,A))))))).
000351 Every man who sees himself waits.
fof(f1, axiom, (
! [A,B] : (((man(B)) &
(predicate2(A,see,B,B)))
=> (? [C] : (predicate1(C,wait,B)))))).
000352 Each of some men waits.
fof(f1, axiom, (
? [A] : ((object(A,man,countable,na,geq,2)) &
(! [B] : ((has_part(A,B))
=> (? [C] : (predicate1(C,wait,B)))))))).
000353 Each of some men who eat waits.
fof(f1, axiom, (
? [A,B] : ((object(A,man,countable,na,geq,2)) &
((predicate1(B,eat,A)) &
(! [C] : ((has_part(A,C))
=> (? [D] : (predicate1(D,wait,C))))))))).
000354 Each of some men who see themselves waits.
fof(f1, axiom, (
? [A,B] : ((object(A,man,countable,na,geq,2)) &
((predicate2(B,see,A,A)) &
(! [C] : ((has_part(A,C))
=> (? [D] : (predicate1(D,wait,C))))))))).
000355 A man who walks is happy.
fof(f1, axiom, (
? [A,B,C] : ((predicate1(A,walk,B)) &
((property1(C,happy,pos)) &
((B=C) &
(man(B))))))).
000356 A man who walks is happy. A man who talks is sad. The man waits.
fof(f1, axiom, (
? [A,B,C] : ((predicate1(A,walk,B)) &
((property1(C,happy,pos)) &
((B=C) &
(man(B))))))).

fof(f2, axiom, (
? [A,B,C,D] : ((predicate1(A,talk,B)) &
((property1(C,sad,pos)) &
((B=C) &
((predicate1(D,wait,B)) &
(man(B)))))))).
000357 A man who walks is happy. A man who talks is sad. The man who walks waits.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate1(A,walk,B)) &
((property1(C,happy,pos)) &
((B=C) &
((predicate1(D,wait,B)) &
(man(B)))))))).

fof(f2, axiom, (
? [A,B,C] : ((predicate1(A,talk,B)) &
((property1(C,sad,pos)) &
((B=C) &
(man(B))))))).
000358 A dog of a man is happy. A dog of a woman is sad. The dog barks.
fof(f1, axiom, (
? [A,B,C] : ((relation(A,of,B)) &
((property1(C,happy,pos)) &
((A=C) &
((dog(A)) &
(man(B)))))))).

fof(f2, axiom, (
? [A,B,C,D] : ((relation(A,of,B)) &
((property1(C,sad,pos)) &
((A=C) &
((predicate1(D,bark,A)) &
((dog(A)) &
(woman(B))))))))).
000359 A dog of a man is happy. A dog of a woman is sad. The dog of a man barks.
fof(f1, axiom, (
? [A,B,C,D] : ((relation(A,of,B)) &
((property1(C,happy,pos)) &
((A=C) &
((predicate1(D,bark,A)) &
((dog(A)) &
(man(B))))))))).

fof(f2, axiom, (
? [A,B,C] : ((relation(A,of,B)) &
((property1(C,sad,pos)) &
((A=C) &
((dog(A)) &
(woman(B)))))))).
000360 A dog of a man is happy. A dog of a woman is sad. The dog of the man barks.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate1(A,bark,B)) &
((B=C) &
((property1(C,happy,pos)) &
((relation(B,of,D)) &
((dog(B)) &
(man(D))))))))).

fof(f2, axiom, (
? [A,B,C] : ((A=B) &
((property1(B,sad,pos)) &
((relation(A,of,C)) &
((dog(A)) &
(woman(C)))))))).
000361 A dog Muri of a man is happy. A dog of a woman is sad. Muri barks.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000362 A dog Muri of a man is happy. A dog of a woman is sad. The dog Muri barks.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000363 A man's dog barks. He waits.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate1(A,wait,B)) &
((predicate1(C,bark,D)) &
((dog(D)) &
((relation(D,of,B)) &
(man(B)))))))).
000364 A man's dog barks. It eats.
fof(f1, axiom, (
? [A,B,C,D] : ((relation(A,of,B)) &
((predicate1(C,bark,A)) &
((predicate1(D,eat,A)) &
((dog(A)) &
(man(B)))))))).
000365 A small card is green. A big card is red. The small card is valid.
fof(f1, axiom, (
? [A,B,C] : ((property1(A,small,pos)) &
((property1(B,green,pos)) &
((A=B) &
((property1(C,valid,pos)) &
((A=C) &
(card(A))))))))).

fof(f2, axiom, (
? [A,B] : ((property1(A,big,pos)) &
((property1(B,red,pos)) &
((A=B) &
(card(A))))))).
000366 The small card is green. A big card is red. The small card is valid.
fof(f1, axiom, (
? [A,B,C] : ((property1(A,green,pos)) &
((B=A) &
((property1(C,valid,pos)) &
((B=C) &
((property1(B,small,pos)) &
(card(B))))))))).

fof(f2, axiom, (
? [A,B] : ((property1(A,big,pos)) &
((property1(B,red,pos)) &
((A=B) &
(card(A))))))).
000367 The small card is green. The big card is red. The small card is valid.
fof(f1, axiom, (
? [A,B,C] : ((property1(A,green,pos)) &
((B=A) &
((property1(C,valid,pos)) &
((B=C) &
((property1(B,small,pos)) &
(card(B))))))))).

fof(f2, axiom, (
? [A,B] : ((property1(A,red,pos)) &
((B=A) &
((property1(B,big,pos)) &
(card(B))))))).
000368 A man is happy. A dog is happy.
fof(f1, axiom, (
? [A,B] : ((property1(A,happy,pos)) &
((B=A) &
(man(B)))))).

fof(f2, axiom, (
? [A,B] : ((property1(A,happy,pos)) &
((B=A) &
(dog(B)))))).
000369 A man a card of who is valid waits.
fof(f1, axiom, (
? [A,B,C,D] : ((relation(A,of,B)) &
((property1(C,valid,pos)) &
((A=C) &
((card(A)) &
((predicate1(D,wait,B)) &
(man(B))))))))).
000370 John's dog barks. It is happy.
fof(f1, axiom, (
? [A,B,C] : ((relation(A,of,'John')) &
((predicate1(B,bark,A)) &
((property1(C,happy,pos)) &
((A=C) &
(dog(A)))))))).
000371 John's dog barks. He is happy.
fof(f1, axiom, (
? [A,B] : ((relation(A,of,'John')) &
((predicate1(B,bark,A)) &
(dog(A)))))).

fof(f2, axiom, (
? [A] : ((property1(A,happy,pos)) &
('John'=A)))).
000372 A man's man waits. He is happy.
fof(f1, axiom, (
? [A,B,C,D] : ((relation(A,of,B)) &
((predicate1(C,wait,A)) &
((property1(D,happy,pos)) &
((A=D) &
((man(A)) &
(man(B))))))))).
000373 A man's man waits. The man is happy.
fof(f1, axiom, (
? [A,B,C,D] : ((relation(A,of,B)) &
((predicate1(C,wait,A)) &
((property1(D,happy,pos)) &
((A=D) &
((man(A)) &
(man(B))))))))).
000374 There is a red card. There is a blue card. The red card is valid.
fof(f1, axiom, (
? [A,B] : ((property1(A,red,pos)) &
((property1(B,valid,pos)) &
((A=B) &
(card(A))))))).

fof(f2, axiom, (
? [A] : ((property1(A,blue,pos)) &
(card(A))))).
000375 There is a red card RC. There is a blue card BC. The red card RC is valid.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000376 There is a red card RC. There is a blue card BC. The card RC is valid.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000377 There is a red card RC. There is a blue card BC. The card is valid.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000378 There is a red card RC. There is a blue card BC. The red card is valid.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000379 There is a red card RC. There is a blue card BC. RC is valid.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000380 There are a red card RC and a blue card BC. RC is valid.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000381 There are a red card RC and a blue card BC. They are valid.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000382 There are a red card and a blue card. The card is valid.
fof(f1, axiom, (
? [A,B,C,D] : ((property1(A,red,pos)) &
((property1(B,blue,pos)) &
((has_part(C,A)) &
((has_part(C,B)) &
((property1(D,valid,pos)) &
((B=D) &
((card(B)) &
((object(C,na,countable,na,eq,2)) &
(card(A)))))))))))).
000383 There are a red card and a blue card. The red card is valid.
fof(f1, axiom, (
? [A,B,C,D] : ((property1(A,red,pos)) &
((property1(B,blue,pos)) &
((has_part(C,A)) &
((has_part(C,B)) &
((card(B)) &
((object(C,na,countable,na,eq,2)) &
((property1(D,valid,pos)) &
((A=D) &
(card(A)))))))))))).
000384 There are 384 tests.
fof(f1, axiom, (
? [A] : (object(A,test,countable,na,eq,384)))).
000385 There are 3 things and 4 things. Are they 7 things?
ERROR	DRS condition not supported: question	tptp/4	question(drs([A,B],[object(A,thing,countable,na,eq,7)-2/4,predicate(B,be,_,A)-2/1]))
000386 A man's dog barks.
fof(f1, axiom, (
? [A,B,C] : ((relation(A,of,B)) &
((predicate1(C,bark,A)) &
((dog(A)) &
(man(B))))))).
000387 The man's dog barks.
fof(f1, axiom, (
? [A,B,C] : ((relation(A,of,B)) &
((predicate1(C,bark,A)) &
((dog(A)) &
(man(B))))))).
000388 A dog of a man barks.
fof(f1, axiom, (
? [A,B,C] : ((relation(A,of,B)) &
((predicate1(C,bark,A)) &
((dog(A)) &
(man(B))))))).
000389 The dog of a man barks.
fof(f1, axiom, (
? [A,B,C] : ((predicate1(A,bark,B)) &
((relation(B,of,C)) &
((man(C)) &
(dog(B))))))).
000390 A dog of the man barks.
fof(f1, axiom, (
? [A,B,C] : ((relation(A,of,B)) &
((predicate1(C,bark,A)) &
((dog(A)) &
(man(B))))))).
000391 The dog of the man barks.
fof(f1, axiom, (
? [A,B,C] : ((predicate1(A,bark,B)) &
((relation(B,of,C)) &
((man(C)) &
(dog(B))))))).
000392 There is a dog. There is a man. The man's dog barks.
fof(f1, axiom, (
? [A] : (dog(A)))).

fof(f2, axiom, (
? [A,B,C] : ((predicate1(A,bark,B)) &
((relation(B,of,C)) &
((dog(B)) &
(man(C))))))).
000393 No man sees himself.
fof(f1, axiom, (
! [A] : ((man(A))
=> (~(? [B] : (predicate2(B,see,A,A))))))).
000394 For each man a dog sees the man.
fof(f1, axiom, (
! [A] : ((man(A))
=> (? [B,C] : ((dog(C)) &
(predicate2(B,see,C,A))))))).
000395 There is a man who feeds every dog. There is a man who feeds every cat. The man who feeds every dog waits.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,wait,B)) &
((! [C] : ((dog(C))
=> (? [D] : (predicate2(D,feed,B,C))))) &
(man(B)))))).

fof(f2, axiom, (
? [A] : ((! [B] : ((cat(B))
=> (? [C] : (predicate2(C,feed,A,B))))) &
(man(A))))).
000396 Everybody sees nobody.
fof(f1, axiom, (
! [A] : (($true)
=> (! [B] : (($true)
=> (~(? [C] : (predicate2(C,see,A,B))))))))).
000397 It is not the case that everybody sees somebody.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000398 Nobody sees everybody.
fof(f1, axiom, (
! [A] : (($true)
=> (~(! [B] : (($true)
=> (? [C] : (predicate2(C,see,A,B))))))))).
000399 Somebody sees everybody.
fof(f1, axiom, (
? [A] : ((! [B] : (($true)
=> (? [C] : (predicate2(C,see,A,B))))) &
($true)))).
000400 A man waits. The man walks.
fof(f1, axiom, (
? [A,B,C] : ((predicate1(A,wait,B)) &
((predicate1(C,walk,B)) &
(man(B)))))).
000401 There is a man. His dog eats. There is a woman. Her dog drinks. The dog of the man barks.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate1(A,bark,B)) &
((predicate1(C,eat,B)) &
((dog(B)) &
((relation(B,of,D)) &
(man(D)))))))).

fof(f2, axiom, (
? [A,B,C] : ((predicate1(A,drink,B)) &
((dog(B)) &
((relation(B,of,C)) &
(woman(C))))))).
000402 The man John walks. The woman John talks.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000403 A man John walks.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000404 A man waits. The man talks.
fof(f1, axiom, (
? [A,B,C] : ((predicate1(A,wait,B)) &
((predicate1(C,talk,B)) &
(man(B)))))).
000405 A man waits. The man talks and walks.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate1(A,wait,B)) &
((predicate1(C,talk,B)) &
((predicate1(D,walk,B)) &
(man(B))))))).
000406 Some men wait. The men talk.
fof(f1, axiom, (
? [A,B,C] : ((predicate1(A,talk,B)) &
((predicate1(C,wait,B)) &
(object(B,man,countable,na,geq,2)))))).
000407 Some men wait. They talk.
fof(f1, axiom, (
? [A,B,C] : ((predicate1(A,talk,B)) &
((predicate1(C,wait,B)) &
(object(B,man,countable,na,geq,2)))))).
000408 If John waits then a dog barks.
fof(f1, axiom, (
! [A] : ((predicate1(A,wait,'John'))
=> (? [B,C] : ((dog(C)) &
(predicate1(B,bark,C))))))).
000409 All laundry waits.
fof(f1, axiom, (
! [A] : ((object(A,laundry,mass,na,na,na))
=> (? [B] : (predicate1(B,wait,A)))))).
000410 A man M1 eats. A man M2 drinks. M1 waits.
fof(f1, axiom, (
? [A,B,C] : ((predicate1(A,wait,B)) &
((predicate1(C,eat,B)) &
(man(B)))))).

fof(f2, axiom, (
? [A,B] : ((predicate1(A,drink,B)) &
(man(B))))).
000411 A man M1 eats. A man M2 drinks. The man M1 waits.
fof(f1, axiom, (
? [A,B,C] : ((predicate1(A,wait,B)) &
((predicate1(C,eat,B)) &
(man(B)))))).

fof(f2, axiom, (
? [A,B] : ((predicate1(A,drink,B)) &
(man(B))))).
000412 Every man M sees M.
fof(f1, axiom, (
! [A] : ((man(A))
=> (? [B] : (predicate2(B,see,A,A)))))).
000413 No man M sees M.
fof(f1, axiom, (
! [A] : ((man(A))
=> (~(? [B] : (predicate2(B,see,A,A))))))).
000414 Someone waits.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,wait,B)) &
($true)))).
000415 No one waits.
fof(f1, axiom, (
! [A] : (($true)
=> (~(? [B] : (predicate1(B,wait,A))))))).
000416 It is not the case that no one does not wait.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000417 It is not the case that no one waits.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000418 It is not the case that it is not the case that a man waits.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000419 Not everyone waits.
fof(f1, axiom, (
~(! [A] : (($true)
=> (? [B] : (predicate1(B,wait,A))))))).
000420 There is someone and he does not wait.
fof(f1, axiom, (
? [A] : ((~(? [B] : (predicate1(B,wait,A)))) &
($true)))).
000421 It is not the case that if there is someone then he waits.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000422 At least 3 men wait.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,wait,B)) &
(object(B,man,countable,na,geq,3))))).
000423 At least 3 men wait. They drink.
fof(f1, axiom, (
? [A,B,C] : ((predicate1(A,drink,B)) &
((predicate1(C,wait,B)) &
(object(B,man,countable,na,geq,3)))))).
000424 Some men M1 and M2 drink. They talk.
fof(f1, axiom, (
? [A,B,C,D,E] : ((predicate1(A,talk,B)) &
((object(B,na,countable,na,eq,2)) &
((has_part(B,C)) &
(($true) &
((predicate1(D,drink,B)) &
((has_part(B,E)) &
(object(E,man,countable,na,geq,2)))))))))).
000425 A man and a dog wait. They talk.
fof(f1, axiom, (
? [A,B,C,D,E] : ((predicate1(A,wait,B)) &
((has_part(B,C)) &
((has_part(B,D)) &
((predicate1(E,talk,B)) &
((object(B,na,countable,na,eq,2)) &
((dog(D)) &
(man(C)))))))))).
000426 A man and a dog wait. He talks.
fof(f1, axiom, (
? [A,B,C,D,E] : ((predicate1(A,wait,B)) &
((has_part(B,C)) &
((has_part(B,D)) &
((dog(D)) &
((object(B,na,countable,na,eq,2)) &
((predicate1(E,talk,C)) &
(man(C)))))))))).
000427 A man and a dog wait. It talks.
fof(f1, axiom, (
? [A,B,C,D,E] : ((predicate1(A,wait,B)) &
((has_part(B,C)) &
((has_part(B,D)) &
((predicate1(E,talk,D)) &
((dog(D)) &
((object(B,na,countable,na,eq,2)) &
(man(C)))))))))).
000428 A man M and a dog D wait. They talk.
fof(f1, axiom, (
? [A,B,C,D,E] : ((predicate1(A,talk,B)) &
((has_part(B,C)) &
((has_part(B,D)) &
((predicate1(E,wait,B)) &
((object(B,na,countable,na,eq,2)) &
((man(D)) &
(dog(C)))))))))).
000429 A man M and the dog D wait. They talk.
fof(f1, axiom, (
? [A,B,C,D,E] : ((predicate1(A,talk,B)) &
((has_part(B,C)) &
((has_part(B,D)) &
((predicate1(E,wait,B)) &
((object(B,na,countable,na,eq,2)) &
((man(D)) &
(dog(C)))))))))).
000430 Each of some men talks. They walk.
fof(f1, axiom, (
? [A,B] : ((object(A,man,countable,na,geq,2)) &
((! [C] : ((has_part(A,C))
=> (? [D] : (predicate1(D,talk,C))))) &
(predicate1(B,walk,A)))))).
000431 Each of some men talks. The men walk.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,walk,B)) &
((! [C] : ((has_part(B,C))
=> (? [D] : (predicate1(D,talk,C))))) &
(object(B,man,countable,na,geq,2)))))).
000432 John's dog barks.
fof(f1, axiom, (
? [A,B] : ((relation(A,of,'John')) &
((predicate1(B,bark,A)) &
(dog(A)))))).
000433 There is a man. His dog barks.
fof(f1, axiom, (
? [A,B,C] : ((dog(A)) &
((predicate1(B,bark,A)) &
((relation(A,of,C)) &
(man(C))))))).
000434 There is a man a dog of who barks.
fof(f1, axiom, (
? [A,B,C] : ((relation(A,of,B)) &
((predicate1(C,bark,A)) &
((dog(A)) &
(man(B))))))).
000435 There is a man a dog of who barks. There is a man a dog of who eats. The man a dog of who barks waits.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate1(A,wait,B)) &
((predicate1(C,bark,D)) &
((relation(D,of,B)) &
((man(B)) &
(dog(D)))))))).

fof(f2, axiom, (
? [A,B,C] : ((predicate1(A,eat,B)) &
((relation(B,of,C)) &
((man(C)) &
(dog(B))))))).
000436 There is a man. There is a woman. His and her dog barks.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000437 There is a man. His dog barks. The dog is happy.
fof(f1, axiom, (
? [A,B,C,D] : ((A=B) &
((property1(B,happy,pos)) &
((predicate1(C,bark,A)) &
((relation(A,of,D)) &
((man(D)) &
(dog(A))))))))).
000438 Somebody who eats drinks.
fof(f1, axiom, (
? [A,B,C] : ((predicate1(A,eat,B)) &
((predicate1(C,drink,B)) &
($true))))).
000439 Something moves. It waits.
fof(f1, axiom, (
? [A,B,C] : ((predicate1(A,wait,B)) &
((predicate1(C,move,B)) &
($true))))).
000440 Something moves.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,move,B)) &
($true)))).
000441 Something sees itself.
fof(f1, axiom, (
? [A,B] : ((predicate2(A,see,B,B)) &
($true)))).
000442 A dog of somebody barks.
fof(f1, axiom, (
? [A,B,C] : ((predicate1(A,bark,B)) &
((relation(B,of,C)) &
((dog(B)) &
($true)))))).
000443 A dog of somebody barks. He waits.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate1(A,wait,B)) &
((predicate1(C,bark,D)) &
((relation(D,of,B)) &
((dog(D)) &
($true))))))).
000444 A dog of somebody barks. It waits.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate1(A,wait,B)) &
((predicate1(C,bark,B)) &
((relation(B,of,D)) &
((dog(B)) &
($true))))))).
000445 Nobody sees herself.
fof(f1, axiom, (
! [A] : (($true)
=> (~(? [B] : (predicate2(B,see,A,A))))))).
000446 A man sees everybody.
fof(f1, axiom, (
? [A] : ((! [B] : (($true)
=> (? [C] : (predicate2(C,see,A,B))))) &
(man(A))))).
000447 A man sees everybody. He eats.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,eat,B)) &
((! [C] : (($true)
=> (? [D] : (predicate2(D,see,B,C))))) &
(man(B)))))).
000448 A man sees everybody who eat.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000449 Not everything sees itself.
fof(f1, axiom, (
~(! [A] : (($true)
=> (? [B] : (predicate2(B,see,A,A))))))).
000450 Everything barks at itself.
fof(f1, axiom, (
! [A] : (($true)
=> (? [B] : ((predicate1(B,bark,A)) &
(modifier_pp(B,at,A))))))).
000451 A man sees everybody and him.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000452 There is a man who owns a dog. There is a man who owns a cat. John sees the man. John sees the man who owns the dog.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate2(A,see,'John',B)) &
((predicate2(C,own,B,D)) &
((man(B)) &
(dog(D))))))).

fof(f2, axiom, (
? [A,B,C,D] : ((predicate2(A,see,'John',B)) &
((predicate2(C,own,B,D)) &
((man(B)) &
(cat(D))))))).
000453 John goes to Berlin.
fof(f1, axiom, (
? [A] : ((predicate1(A,go,'John')) &
(modifier_pp(A,to,'Berlin'))))).
000454 John comes from Berlin.
fof(f1, axiom, (
? [A] : ((predicate1(A,come,'John')) &
(modifier_pp(A,from,'Berlin'))))).
000455 John likes a town which he goes to.
fof(f1, axiom, (
? [A,B,C] : ((predicate2(A,like,'John',B)) &
((modifier_pp(C,to,B)) &
((predicate1(C,go,'John')) &
(town(B))))))).
000456 In which town does John live?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,which)
000457 John comes from Berlin and goes to Paris.
fof(f1, axiom, (
? [A] : ((predicate1(A,come,'John')) &
(modifier_pp(A,from,'Berlin'))))).

fof(f2, axiom, (
? [A] : ((predicate1(A,go,'John')) &
(modifier_pp(A,to,'Paris'))))).
000458 Where does John live?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,where)
000459 Where does John live in?
ERROR	DRS is empty	apply_converter/2	drs([],[])
000460 From where does John come?
ERROR	DRS is empty	apply_converter/2	drs([],[])
000461 Where does John come from?
ERROR	DRS is empty	apply_converter/2	drs([],[])
000462 There is a man such that he waits.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,wait,B)) &
(man(B))))).
000463 There is a man such that the man sees himself.
fof(f1, axiom, (
? [A,B] : ((predicate2(A,see,B,B)) &
(man(B))))).
000464 There is a man. There is a man such that the man sees him.
fof(f1, axiom, (
? [A,B,C] : ((predicate2(A,see,B,C)) &
((man(B)) &
(man(C)))))).
000465 For each of the men a dog barks.
fof(f1, axiom, (
? [A] : ((object(A,man,countable,na,geq,2)) &
(! [B] : ((has_part(A,B))
=> (? [C,D] : ((predicate1(D,bark,C)) &
(dog(C))))))))).
000466 For each of the men a dog sees him.
fof(f1, axiom, (
? [A] : ((object(A,man,countable,na,geq,2)) &
(! [B] : ((has_part(A,B))
=> (? [C,D] : ((predicate2(D,see,C,B)) &
(dog(C))))))))).
000467 For each rich man a woman likes the rich man.
fof(f1, axiom, (
! [A] : (((man(A)) &
(property1(A,rich,pos)))
=> (? [B,C] : ((woman(C)) &
(predicate2(B,like,C,A))))))).
000468 For every rich man a woman likes the rich man.
fof(f1, axiom, (
! [A] : (((man(A)) &
(property1(A,rich,pos)))
=> (? [B,C] : ((woman(C)) &
(predicate2(B,like,C,A))))))).
000469 There are some big men. There are some small men. The big men are happy.
fof(f1, axiom, (
? [A,B] : ((A=B) &
((property1(B,happy,pos)) &
((property1(A,big,pos)) &
(object(A,man,countable,na,geq,2))))))).

fof(f2, axiom, (
? [A] : ((property1(A,small,pos)) &
(object(A,man,countable,na,geq,2))))).
000470 There are some big men. There are some small men. They wait.
fof(f1, axiom, (
? [A] : ((property1(A,big,pos)) &
(object(A,man,countable,na,geq,2))))).

fof(f2, axiom, (
? [A,B] : ((predicate1(A,wait,B)) &
((property1(B,small,pos)) &
(object(B,man,countable,na,geq,2)))))).
000471 There are some men. For each of the men a dog barks.
fof(f1, axiom, (
? [A] : ((! [B] : ((has_part(A,B))
=> (? [C,D] : ((dog(C)) &
(predicate1(D,bark,C)))))) &
(object(A,man,countable,na,geq,2))))).
000472 For each man a dog sees it.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000473 A man's dog barks. The dog waits.
fof(f1, axiom, (
? [A,B,C,D] : ((relation(A,of,B)) &
((predicate1(C,bark,A)) &
((predicate1(D,wait,A)) &
((dog(A)) &
(man(B)))))))).
000474 A big man's dog barks. The dog waits.
fof(f1, axiom, (
? [A,B,C,D] : ((property1(A,big,pos)) &
((relation(B,of,A)) &
((predicate1(C,bark,B)) &
((predicate1(D,wait,B)) &
((dog(B)) &
(man(A))))))))).
000475 There is a man. There is a dog. John beats his dog.
fof(f1, axiom, (
? [A,B,C] : ((predicate2(A,beat,'John',B)) &
((dog(B)) &
((relation(B,of,C)) &
(man(C))))))).

fof(f2, axiom, (
? [A] : (dog(A)))).
000476 John beats his own big dog and beats his own small dog. The big dog is sad.
fof(f1, axiom, (
? [A,B,C] : ((A=B) &
((property1(B,sad,pos)) &
((property1(A,big,pos)) &
((predicate2(C,beat,'John',A)) &
((relation(A,of,'John')) &
(dog(A))))))))).

fof(f2, axiom, (
? [A,B] : ((property1(A,small,pos)) &
((predicate2(B,beat,'John',A)) &
((relation(A,of,'John')) &
(dog(A))))))).
000477 There is the man.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000478 The dog who sees the man barks.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000479 There is a man. There is he.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000480 There is a man. There is he. There is he.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000481 There is a man. There are he and he.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000482 There is some laundry. It is clean.
fof(f1, axiom, (
? [A,B] : ((A=B) &
((property1(B,clean,pos)) &
(object(A,laundry,mass,na,na,na)))))).
000483 Each of some men who see themselves sees himself. /* Axiom :) */
fof(f1, axiom, (
? [A,B] : ((! [C] : ((has_part(B,C))
=> (? [D] : (predicate2(D,see,C,C))))) &
((predicate2(A,see,B,B)) &
(object(B,man,countable,na,geq,2)))))).
000484 There are 3 men.
fof(f1, axiom, (
? [A] : (object(A,man,countable,na,eq,3)))).
000485 There are 3 men. They talk.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,talk,B)) &
(object(B,man,countable,na,eq,3))))).
000486 There are 3 men. The men talk.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,talk,B)) &
(object(B,man,countable,na,eq,3))))).
000487 There are 3 men. 3 men talk.
fof(f1, axiom, (
? [A] : (object(A,man,countable,na,eq,3)))).

fof(f2, axiom, (
? [A,B] : ((predicate1(A,talk,B)) &
(object(B,man,countable,na,eq,3))))).
000488 There is a man A#.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000489 There are 3 men Men-3. Men-3 talk.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000490 John waits. John does not sleep.
fof(f1, axiom, (
? [A] : (predicate1(A,wait,'John')))).

fof(f2, axiom, (
~(? [A] : (predicate1(A,sleep,'John'))))).
000491 There is a man. He sees himself.
fof(f1, axiom, (
? [A,B] : ((predicate2(A,see,B,B)) &
(man(B))))).
000492 If John waits then a man John sleeps.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000493 If John waits then the man John sleeps.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000494 Each of some men who own a dog owns a dog.
fof(f1, axiom, (
? [A,B,C] : ((object(A,man,countable,na,geq,2)) &
((dog(B)) &
((predicate2(C,own,A,B)) &
(! [D] : ((has_part(A,D))
=> (? [E,F] : ((predicate2(F,own,D,E)) &
(dog(E))))))))))).
000495 Each of some men who own the dog owns the dog.
fof(f1, axiom, (
? [A,B,C] : ((! [D] : ((has_part(B,D))
=> (? [E] : (predicate2(E,own,D,C))))) &
((predicate2(A,own,B,C)) &
((object(B,man,countable,na,geq,2)) &
(dog(C))))))).
000496 Each of some men who own the dog Muri owns Muri.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000497 There is a dog Muri. Each of some men who own Muri owns Muri.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000498 There is a dog. Each of some men who own the dog owns the dog.
fof(f1, axiom, (
? [A,B,C] : ((dog(A)) &
((object(B,man,countable,na,geq,2)) &
((predicate2(C,own,B,A)) &
(! [D] : ((has_part(B,D))
=> (? [E] : (predicate2(E,own,D,A)))))))))).
000499 There is a man who sees a big dog. There is a man who sees a small dog. The man who sees a big dog waits.
fof(f1, axiom, (
? [A,B,C,D] : ((property1(A,big,pos)) &
((predicate2(B,see,C,A)) &
((predicate1(D,wait,C)) &
((man(C)) &
(dog(A)))))))).

fof(f2, axiom, (
? [A,B,C] : ((property1(A,small,pos)) &
((predicate2(B,see,C,A)) &
((dog(A)) &
(man(C))))))).
000500 There are some men. Each of the men waits.
fof(f1, axiom, (
? [A] : ((! [B] : ((has_part(A,B))
=> (? [C] : (predicate1(C,wait,B))))) &
(object(A,man,countable,na,geq,2))))).
000501 Some groups of some men talk.
fof(f1, axiom, (
? [A,B,C] : ((predicate1(A,talk,B)) &
((relation(B,of,C)) &
((object(C,man,countable,na,geq,2)) &
(object(B,group,countable,na,geq,2))))))).
000502 Some groups of some men see themselves.
fof(f1, axiom, (
? [A,B,C] : ((predicate2(A,see,B,B)) &
((relation(B,of,C)) &
((object(C,man,countable,na,geq,2)) &
(object(B,group,countable,na,geq,2))))))).
000503 Every group of some men waits.
fof(f1, axiom, (
! [A,B] : (((group(A)) &
((object(B,man,countable,na,geq,2)) &
(relation(A,of,B))))
=> (? [C] : (predicate1(C,wait,A)))))).
000504 Each of no men talks.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000505 Each of some men does not talk.
fof(f1, axiom, (
? [A] : ((object(A,man,countable,na,geq,2)) &
(! [B] : ((has_part(A,B))
=> (~(? [C] : (predicate1(C,talk,B))))))))).
000506 A doctor sees himself/herself.
fof(f1, axiom, (
? [A,B] : ((predicate2(A,see,B,B)) &
(doctor(B))))).
000507 A doctor sees herself/himself.
fof(f1, axiom, (
? [A,B] : ((predicate2(A,see,B,B)) &
(doctor(B))))).
000508 A thing sees himself/itself.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000509 For each of some men a dog barks.
fof(f1, axiom, (
? [A] : ((object(A,man,countable,na,geq,2)) &
(! [B] : ((has_part(A,B))
=> (? [C,D] : ((predicate1(D,bark,C)) &
(dog(C))))))))).
000510 For each of some men a dog sees him.
fof(f1, axiom, (
? [A] : ((object(A,man,countable,na,geq,2)) &
(! [B] : ((has_part(A,B))
=> (? [C,D] : ((predicate2(D,see,C,B)) &
(dog(C))))))))).
000511 For each of John and Mary a dog sees him/her.
fof(f1, axiom, (
? [A] : ((has_part(A,'John')) &
((has_part(A,'Mary')) &
((! [B] : ((has_part(A,B))
=> (? [C,D] : ((dog(D)) &
(predicate2(C,see,D,B)))))) &
(object(A,na,countable,na,eq,2))))))).
000512 A person sees himself.
fof(f1, axiom, (
? [A,B] : ((predicate2(A,see,B,B)) &
(person(B))))).
000513 A person sees herself.
fof(f1, axiom, (
? [A,B] : ((predicate2(A,see,B,B)) &
(person(B))))).
000514 For each of some men he waits.
fof(f1, axiom, (
? [A] : ((object(A,man,countable,na,geq,2)) &
(! [B] : ((has_part(A,B))
=> (? [C] : (predicate1(C,wait,B)))))))).
000515 For each of the men he waits.
fof(f1, axiom, (
? [A] : ((object(A,man,countable,na,geq,2)) &
(! [B] : ((has_part(A,B))
=> (? [C] : (predicate1(C,wait,B)))))))).
000516 For each of a man and a woman a dog sees the man.
fof(f1, axiom, (
? [A,B,C] : ((has_part(A,B)) &
((has_part(A,C)) &
((woman(C)) &
((man(B)) &
((object(A,na,countable,na,eq,2)) &
(! [D] : ((has_part(A,D))
=> (? [E,F] : ((dog(F)) &
(predicate2(E,see,F,B))))))))))))).
000517 For each of a big man and a small man a dog sees the big man.
fof(f1, axiom, (
? [A,B,C] : ((property1(A,big,pos)) &
((property1(B,small,pos)) &
((has_part(C,A)) &
((has_part(C,B)) &
((man(B)) &
((man(A)) &
((object(C,na,countable,na,eq,2)) &
(! [D] : ((has_part(C,D))
=> (? [E,F] : ((dog(F)) &
(predicate2(E,see,F,A))))))))))))))).
000518 5 men's dog barks.
fof(f1, axiom, (
? [A,B,C] : ((predicate1(A,bark,B)) &
((dog(B)) &
((relation(B,of,C)) &
(object(C,man,countable,na,eq,5))))))).
000519 3 codes X and Y and Z are valid.
fof(f1, axiom, (
? [A,B,C,D,E] : ((object(A,na,countable,na,eq,3)) &
((has_part(A,B)) &
(($true) &
((has_part(A,C)) &
(($true) &
((A=D) &
((property1(D,valid,pos)) &
((has_part(A,E)) &
(object(E,code,countable,na,eq,3)))))))))))).
000520 2 men sees their own card.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000521 If there is a man then there is more than 1 women.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000522 Each of some men sees himself.
fof(f1, axiom, (
? [A] : ((! [B] : ((has_part(A,B))
=> (? [C] : (predicate2(C,see,B,B))))) &
(object(A,man,countable,na,geq,2))))).
000523 Each of some men who see themselves sees himself.
fof(f1, axiom, (
? [A,B] : ((! [C] : ((has_part(B,C))
=> (? [D] : (predicate2(D,see,C,C))))) &
((predicate2(A,see,B,B)) &
(object(B,man,countable,na,geq,2)))))).
000524 A man has 2 kg of laundry.
fof(f1, axiom, (
? [A,B,C] : ((predicate2(A,have,B,C)) &
((object(C,laundry,mass,kg,eq,2)) &
(man(B)))))).
000525 A child Id1 of a child Id2 of a man Adam waits.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000526 There is a child of a man. The child waits.
fof(f1, axiom, (
? [A,B,C] : ((predicate1(A,wait,B)) &
((relation(B,of,C)) &
((child(B)) &
(man(C))))))).
000527 The dog that sees the man barks.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate1(A,bark,B)) &
((predicate2(C,see,B,D)) &
((man(D)) &
(dog(B))))))).
000528 The dog that sees the man barks. The dog eats. The man drinks.
fof(f1, axiom, (
? [A,B,C,D,E,F] : ((predicate1(A,bark,B)) &
((predicate1(C,eat,B)) &
((predicate1(D,drink,E)) &
((predicate2(F,see,B,E)) &
((man(E)) &
(dog(B))))))))).
000529 There is a man. Who hits him?
ERROR	DRS condition not supported: question	tptp/4	question(drs([A,B],[query(A,who)-2/1,predicate(B,hit,A,_)-2/2]))
000530 There is a man. Who hits himself?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,who)
000531 Who sees who?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,who)
000532 What sees itself?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,what)
000533 Mary sees herself. Who sees herself?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,who)
000534 John's dog barks. The dog of John is happy.
fof(f1, axiom, (
? [A,B,C] : ((relation(A,of,'John')) &
((dog(A)) &
((predicate1(B,bark,A)) &
((property1(C,happy,pos)) &
(A=C))))))).
000535 John's dog eats. Mary's dog drinks. The dog of John waits.
fof(f1, axiom, (
? [A,B,C] : ((relation(A,of,'John')) &
((dog(A)) &
((predicate1(B,eat,A)) &
(predicate1(C,wait,A))))))).

fof(f2, axiom, (
? [A,B] : ((relation(A,of,'Mary')) &
((dog(A)) &
(predicate1(B,drink,A)))))).
000536 A dog of a man eats. A dog of a woman drinks. The dog of a man waits.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate1(A,wait,B)) &
((predicate1(C,eat,B)) &
((relation(B,of,D)) &
((dog(B)) &
(man(D)))))))).

fof(f2, axiom, (
? [A,B,C] : ((predicate1(A,drink,B)) &
((relation(B,of,C)) &
((dog(B)) &
(woman(C))))))).
000537 A dog of a man eats. A dog of a woman drinks. The dog of the man waits.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate1(A,wait,B)) &
((predicate1(C,eat,B)) &
((relation(B,of,D)) &
((dog(B)) &
(man(D)))))))).

fof(f2, axiom, (
? [A,B,C] : ((predicate1(A,drink,B)) &
((relation(B,of,C)) &
((dog(B)) &
(woman(C))))))).
000538 A man's card sees itself.
fof(f1, axiom, (
? [A,B,C] : ((predicate2(A,see,B,B)) &
((relation(B,of,C)) &
((man(C)) &
(card(B))))))).
000539 A man's card sees him.
fof(f1, axiom, (
? [A,B,C] : ((predicate2(A,see,B,C)) &
((card(B)) &
((relation(B,of,C)) &
(man(C))))))).
000540 A man's dog barks. The woman's dog is green.
fof(f1, axiom, (
? [A,B,C] : ((predicate1(A,bark,B)) &
((relation(B,of,C)) &
((man(C)) &
(dog(B))))))).

fof(f2, axiom, (
? [A,B,C] : ((A=B) &
((property1(B,green,pos)) &
((relation(A,of,C)) &
((woman(C)) &
(dog(A)))))))).
000541 Somebody's dog barks.
fof(f1, axiom, (
? [A,B,C] : ((predicate1(A,bark,B)) &
((dog(B)) &
((relation(B,of,C)) &
($true)))))).
000542 Every ancestor of a man's father is the ancestor of the man.
fof(f1, axiom, (
! [A,B,C] : (((ancestor(A)) &
((man(B)) &
((relation(C,of,B)) &
((father(C)) &
(relation(A,of,C))))))
=> (? [D] : ((A=D) &
((relation(D,of,B)) &
(ancestor(D)))))))).
000543 There is a man who sees John's brother. The man who sees the brother of John waits.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate1(A,wait,B)) &
((predicate2(C,see,B,D)) &
((brother(D)) &
((relation(D,of,'John')) &
(man(B)))))))).
000544 There is a man who sees John's mother. The man who sees the mother of John waits.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate1(A,wait,B)) &
((predicate2(C,see,B,D)) &
((relation(D,of,'John')) &
((mother(D)) &
(man(B)))))))).
000545 There is a man who sees a mother of John. The man who sees John's mother waits.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate1(A,wait,B)) &
((predicate2(C,see,B,D)) &
((relation(D,of,'John')) &
((mother(D)) &
(man(B)))))))).
000546 2 girls lift 2 tables.
fof(f1, axiom, (
? [A,B,C] : ((predicate2(A,lift,B,C)) &
((object(C,table,countable,na,eq,2)) &
(object(B,girl,countable,na,eq,2)))))).
000547 2 girls lift each of 2 tables.
fof(f1, axiom, (
? [A,B] : ((! [C] : ((has_part(A,C))
=> (? [D] : (predicate2(D,lift,B,C))))) &
((object(A,table,countable,na,eq,2)) &
(object(B,girl,countable,na,eq,2)))))).
000548 Each of 2 girls lifts 2 tables.
fof(f1, axiom, (
? [A] : ((! [B] : ((has_part(A,B))
=> (? [C,D] : ((object(C,table,countable,na,eq,2)) &
(predicate2(D,lift,B,C)))))) &
(object(A,girl,countable,na,eq,2))))).
000549 Each of 2 girls lifts each of 2 tables.
fof(f1, axiom, (
? [A] : ((! [B] : ((has_part(A,B))
=> (? [C] : ((object(C,table,countable,na,eq,2)) &
(! [D] : ((has_part(C,D))
=> (? [E] : (predicate2(E,lift,B,D))))))))) &
(object(A,girl,countable,na,eq,2))))).
000550 There are 2 tables such that 2 girls lift them.
fof(f1, axiom, (
? [A,B,C] : ((predicate2(A,lift,B,C)) &
((object(B,girl,countable,na,eq,2)) &
(object(C,table,countable,na,eq,2)))))).
000551 There are 2 tables such that each of 2 girls lifts them.
fof(f1, axiom, (
? [A] : ((! [B] : ((has_part(A,B))
=> (? [C] : (predicate2(C,lift,B,A))))) &
(object(A,girl,countable,na,eq,2))))).

fof(f2, axiom, (
? [A] : (object(A,table,countable,na,eq,2)))).
000552 For each of 2 tables 2 girls lift it.
fof(f1, axiom, (
? [A] : ((! [B] : ((has_part(A,B))
=> (? [C,D] : ((object(C,girl,countable,na,eq,2)) &
(predicate2(D,lift,C,B)))))) &
(object(A,table,countable,na,eq,2))))).
000553 For each of 2 tables each of 2 girls lifts it.
fof(f1, axiom, (
? [A] : ((! [B] : ((has_part(A,B))
=> (? [C] : ((object(C,girl,countable,na,eq,2)) &
(! [D] : ((has_part(C,D))
=> (? [E] : (predicate2(E,lift,D,B))))))))) &
(object(A,table,countable,na,eq,2))))).
000554 There are 2 girls and there are 2 tables such that each of the girls lifts each of the tables.
fof(f1, axiom, (
? [A,B] : ((object(A,girl,countable,na,eq,2)) &
((object(B,table,countable,na,eq,2)) &
(! [C] : ((has_part(A,C))
=> (! [D] : ((has_part(B,D))
=> (? [E] : (predicate2(E,lift,C,D))))))))))).
000555 There are 2 girls and there are 2 tables. Each of the girls lifts each of the tables.
fof(f1, axiom, (
? [A,B] : ((object(A,girl,countable,na,eq,2)) &
((object(B,table,countable,na,eq,2)) &
(! [C] : ((has_part(A,C))
=> (! [D] : ((has_part(B,D))
=> (? [E] : (predicate2(E,lift,C,D))))))))))).
000556 Some men M1 and M2 and M3 drink.
fof(f1, axiom, (
? [A,B,C,D,E] : ((object(A,na,countable,na,eq,3)) &
((has_part(A,B)) &
(($true) &
((has_part(A,C)) &
(($true) &
((predicate1(D,drink,A)) &
((has_part(A,E)) &
(object(E,man,countable,na,geq,2))))))))))).
000557 There are a man and a woman.
fof(f1, axiom, (
? [A,B,C] : ((has_part(A,B)) &
((has_part(A,C)) &
((woman(C)) &
((object(A,na,countable,na,eq,2)) &
(man(B)))))))).
000558 2 codes X and Y are valid.
fof(f1, axiom, (
? [A,B,C,D] : ((object(A,na,countable,na,eq,2)) &
((has_part(A,B)) &
(($true) &
((A=C) &
((property1(C,valid,pos)) &
((has_part(A,D)) &
(object(D,code,countable,na,eq,2)))))))))).
000559 There are 5 big men.
fof(f1, axiom, (
? [A] : ((property1(A,big,pos)) &
(object(A,man,countable,na,eq,5))))).
000560 2 men M1 and M2 drink. M1 talks.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000561 2 men M1 and M2 drink. M2 talks. They eat.
fof(f1, axiom, (
? [A,B,C,D,E,F] : ((predicate1(A,eat,B)) &
((predicate1(C,talk,D)) &
((object(B,na,countable,na,eq,2)) &
((has_part(B,D)) &
(($true) &
((predicate1(E,drink,B)) &
((has_part(B,F)) &
(object(F,man,countable,na,eq,2))))))))))).
000562 2 men ManGroup drink. They eat.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000563 2 men ManGroup drink. ManGroup talk. They eat.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000564 2 men ManGroup drink. ManGroup talks. They eat.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000565 2 men ManGroup drink. ManGroup talks. It eats.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000566 2 men John and John eat.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000567 There are 5 big men who are happy.
fof(f1, axiom, (
? [A,B] : ((A=B) &
((property1(B,happy,pos)) &
((property1(A,big,pos)) &
(object(A,man,countable,na,eq,5))))))).
000568 There are 5 big men such that they are happy.
fof(f1, axiom, (
? [A,B] : ((A=B) &
((property1(B,happy,pos)) &
((property1(A,big,pos)) &
(object(A,man,countable,na,eq,5))))))).
000569 2 men M1 and M2 drink. The man M2 talks.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000570 There is a man who sees himself. There is a man who sees John. John watches the man who sees him. John watches the man who sees himself.
fof(f1, axiom, (
? [A,B,C] : ((predicate2(A,watch,'John',B)) &
((predicate2(C,see,B,B)) &
(man(B)))))).

fof(f2, axiom, (
? [A,B,C] : ((predicate2(A,watch,'John',B)) &
((predicate2(C,see,B,'John')) &
(man(B)))))).
000571 There are some men. For each of them the card is valid.
fof(f1, axiom, (
? [A] : ((! [B] : ((has_part(A,B))
=> (? [C,D] : ((card(C)) &
((property1(D,valid,pos)) &
(C=D)))))) &
(object(A,man,countable,na,geq,2))))).
000572 The card of which man the card of who is valid is valid?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,which)
000573 There is a n:aaa. It barks.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,bark,B)) &
(aaa(B))))).
000574 There are some n:aaa. They bark.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,bark,B)) &
(object(B,aaa,countable,na,geq,2))))).
000575 There is a n:aaa who waits. The n:aaa who waits barks.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000576 A man who is hungry eats a pizza X. He is happy.
fof(f1, axiom, (
? [A,B,C,D,E] : ((A=B) &
((property1(B,happy,pos)) &
((predicate2(C,eat,A,D)) &
((A=E) &
((property1(E,hungry,pos)) &
((man(A)) &
(pizza(D)))))))))).
000577 There is a man or there is a dog who sees him or there is a cat who sees it.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000578 There is a man or there is a dog who sees him or there is a cat who sees him.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000579 There is a man or there is a dog who sees him or there is a cat who sees it and him.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000580 A dog barks. Not everybody waits.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,bark,B)) &
(dog(B))))).

fof(f2, axiom, (
~(! [A] : (($true)
=> (? [B] : (predicate1(B,wait,A))))))).
000581 A dog barks. Not every man waits.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,bark,B)) &
(dog(B))))).

fof(f2, axiom, (
~(! [A] : ((man(A))
=> (? [B] : (predicate1(B,wait,A))))))).
000582 Not everybody waits. A dog barks.
fof(f1, axiom, (
~(! [A] : (($true)
=> (? [B] : (predicate1(B,wait,A))))))).

fof(f2, axiom, (
? [A,B] : ((predicate1(A,bark,B)) &
(dog(B))))).
000583 There is a man. A clerk enters every card of him.
fof(f1, axiom, (
? [A,B] : ((! [C] : (((card(C)) &
(relation(C,of,A)))
=> (? [D] : (predicate2(D,enter,B,C))))) &
((man(A)) &
(clerk(B)))))).
000584 There is a park. A dog barks in it.
fof(f1, axiom, (
? [A,B,C] : ((modifier_pp(A,in,B)) &
((predicate1(A,bark,C)) &
((dog(C)) &
(park(B))))))).
000585 A man sees everybody who eats.
fof(f1, axiom, (
? [A] : ((! [B,C] : (((predicate1(B,eat,C)) &
($true))
=> (? [D] : (predicate2(D,see,A,C))))) &
(man(A))))).
000586 Every man who waits eats.
fof(f1, axiom, (
! [A,B] : (((man(A)) &
(predicate1(B,wait,A)))
=> (? [C] : (predicate1(C,eat,A)))))).
000587 Everybody who waits eats.
fof(f1, axiom, (
! [A,B] : ((($true) &
(predicate1(A,wait,B)))
=> (? [C] : (predicate1(C,eat,B)))))).
000588 There is a man. He who waits eats.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000589 A man sees himself and a dog.
fof(f1, axiom, (
? [A,B,C,D] : ((has_part(A,B)) &
((has_part(A,C)) &
((predicate2(D,see,C,A)) &
((man(C)) &
((object(A,na,countable,na,eq,2)) &
(dog(B))))))))).
000590 A man sees a dog and himself.
fof(f1, axiom, (
? [A,B,C,D] : ((has_part(A,B)) &
((has_part(A,C)) &
((predicate2(D,see,B,A)) &
((man(B)) &
((object(A,na,countable,na,eq,2)) &
(dog(C))))))))).
000591 There is a boy. A man sees him and a dog.
fof(f1, axiom, (
? [A,B,C,D,E] : ((object(A,na,countable,na,eq,2)) &
((has_part(A,B)) &
((dog(B)) &
((predicate2(C,see,D,A)) &
((has_part(A,E)) &
((boy(E)) &
(man(D)))))))))).
000592 There is a boy. A man sees himself and a dog.
fof(f1, axiom, (
? [A] : (boy(A)))).

fof(f2, axiom, (
? [A,B,C,D] : ((has_part(A,B)) &
((has_part(A,C)) &
((predicate2(D,see,C,A)) &
((man(C)) &
((object(A,na,countable,na,eq,2)) &
(dog(B))))))))).
000593 A man sees a dog X. He waits.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate1(A,wait,B)) &
((predicate2(C,see,B,D)) &
((man(B)) &
(dog(D))))))).
000594 There are some men. The men talk.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,talk,B)) &
(object(B,man,countable,na,geq,2))))).
000595 A set is a:located in itself.
fof(f1, axiom, (
? [A,B] : ((modifier_pp(C,in,A)) &
((A=B) &
((property1(B,located,pos)) &
(set(A))))))).
000596 A set is in a set.
fof(f1, axiom, (
? [A,B,C] : ((modifier_pp(A,in,B)) &
((predicate1(A,be,C)) &
((set(C)) &
(set(B))))))).
000597 A set is in itself.
fof(f1, axiom, (
? [A,B] : ((modifier_pp(A,in,B)) &
((predicate1(A,be,B)) &
(set(B)))))).
000598 A set is a member in itself.
fof(f1, axiom, (
? [A,B] : ((modifier_pp(C,in,A)) &
((A=B) &
((set(A)) &
(member(B))))))).
000599 A set exists in itself.
fof(f1, axiom, (
? [A,B] : ((modifier_pp(A,in,B)) &
((predicate1(A,exist,B)) &
(set(B)))))).
000600 A table John waits.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000601 John owns a park. A dog barks in it.
fof(f1, axiom, (
? [A,B,C,D] : ((modifier_pp(A,in,B)) &
((predicate1(A,bark,C)) &
((dog(C)) &
((predicate2(D,own,'John',B)) &
(park(B)))))))).
000602 A dog barks. It is not the case that everybody waits.
fof(f1, axiom, (
? [A,B] : ((~(? [C] : ((B=C) &
((! [D] : (($true)
=> (? [E] : (predicate2(E,wait,D,C))))) &
(case(C)))))) &
((predicate1(A,bark,B)) &
(dog(B)))))).
000603 VisaCards wait.
fof(f1, axiom, (
? [A] : (predicate1(A,wait,'VisaCard')))).
000604 Christmases are white.
fof(f1, axiom, (
? [A] : (('Christmas'=A) &
(property1(A,white,pos))))).
000605 Each of Christmases is white.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000606 Christmases are white. Some children like them.
fof(f1, axiom, (
? [A] : (('Christmas'=A) &
(property1(A,white,pos))))).

fof(f2, axiom, (
? [A,B] : ((predicate2(A,like,B,'Christmas')) &
(object(B,child,countable,na,geq,2))))).
000607 A person:xxx sees a masc:yyy and event:zzz him.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000608 A person:xxx sees a masc:yyy and event:zzz herself.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000609 A man talks about a day.
fof(f1, axiom, (
? [A,B,C] : ((modifier_pp(A,about,B)) &
((predicate1(A,talk,C)) &
((man(C)) &
(day(B))))))).
000610 A man talks during a day.
fof(f1, axiom, (
? [A,B,C] : ((modifier_pp(A,during,B)) &
((predicate1(A,talk,C)) &
((man(C)) &
(day(B))))))).
000611 A man sees a boy and the girl.
fof(f1, axiom, (
? [A,B,C,D,E] : ((has_part(A,B)) &
((has_part(A,C)) &
((predicate2(D,see,E,A)) &
((man(E)) &
((object(A,na,countable,na,eq,2)) &
((boy(C)) &
(girl(B)))))))))).
000612 There is a bone. A man enters it and a card.
fof(f1, axiom, (
? [A,B,C,D,E] : ((has_part(A,B)) &
((has_part(A,C)) &
((predicate2(D,enter,E,A)) &
((man(E)) &
((object(A,na,countable,na,eq,2)) &
((bone(C)) &
(card(B)))))))))).
000613 There is a bone. A man enters the bone and a card.
fof(f1, axiom, (
? [A,B,C,D,E] : ((has_part(A,B)) &
((has_part(A,C)) &
((predicate2(D,enter,E,A)) &
((man(E)) &
((object(A,na,countable,na,eq,2)) &
((bone(C)) &
(card(B)))))))))).
000614 A customer enters a card of himself.
fof(f1, axiom, (
? [A,B,C] : ((predicate2(A,enter,B,C)) &
((relation(C,of,B)) &
((customer(B)) &
(card(C))))))).
000615 There is John. Mary sees him. He walks.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000616 There is John. Peter sees him. He walks.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000617 A man hits his own dog. He is happy.
fof(f1, axiom, (
? [A,B,C,D] : ((A=B) &
((property1(B,happy,pos)) &
((predicate2(C,hit,A,D)) &
((relation(D,of,A)) &
((dog(D)) &
(man(A))))))))).
000618 A clerk enters a card of himself.
fof(f1, axiom, (
? [A,B,C] : ((predicate2(A,enter,B,C)) &
((relation(C,of,B)) &
((clerk(B)) &
(card(C))))))).
000619 A clerk enters the card of himself.
fof(f1, axiom, (
? [A,B,C] : ((predicate2(A,enter,B,C)) &
((relation(C,of,B)) &
((card(C)) &
(clerk(B))))))).
000620 A clerk enters a card of him.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000621 There is a man. The man sees himself.
fof(f1, axiom, (
? [A,B] : ((predicate2(A,see,B,B)) &
(man(B))))).
000622 A machine reads a card that carries its own code.
fof(f1, axiom, (
? [A,B,C,D,E] : ((predicate2(A,read,B,C)) &
((predicate2(D,carry,C,E)) &
((relation(E,of,C)) &
((code(E)) &
((card(C)) &
(machine(B))))))))).
000623 A dog of a woman walks. A dog of a boy barks. The dog of the boy is happy.
fof(f1, axiom, (
? [A,B,C] : ((predicate1(A,walk,B)) &
((relation(B,of,C)) &
((dog(B)) &
(woman(C))))))).

fof(f2, axiom, (
? [A,B,C,D] : ((A=B) &
((property1(B,happy,pos)) &
((predicate1(C,bark,A)) &
((relation(A,of,D)) &
((dog(A)) &
(boy(D))))))))).
000624 A dog of a boy barks. The boy waits.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate1(A,wait,B)) &
((predicate1(C,bark,D)) &
((relation(D,of,B)) &
((dog(D)) &
(boy(B)))))))).
000625 A man lives in a town.
fof(f1, axiom, (
? [A,B,C] : ((modifier_pp(A,in,B)) &
((predicate1(A,live,C)) &
((man(C)) &
(town(B))))))).
000626 A man lives in a town. Where does the man live?
ERROR	DRS condition not supported: question	tptp/4	question(drs([A],[predicate(A,live,_)-2/5,query(A,where)-2/1]))
000627 Where does the man live?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,where)
000628 Where does the man live? Who lives in the town?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,where)
000629 A man lives in a town. Where does the man live? Who lives in the town?
ERROR	DRS condition not supported: question	tptp/4	question(drs([A,B],[query(A,who)-3/1,predicate(B,live,A)-3/2,modifier_pp(B,in,_)-3/3]))
000630 A girl of a boy waits. The girl eats.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate1(A,eat,B)) &
((predicate1(C,wait,B)) &
((relation(B,of,D)) &
((girl(B)) &
(boy(D)))))))).
000631 There is John. Bill sees him. He walks.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000632 There is a man a dog of who barks. The dog eats.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate1(A,eat,B)) &
((predicate1(C,bark,B)) &
((relation(B,of,D)) &
((man(D)) &
(dog(B)))))))).
000633 There is a man a dog of who barks. The man eats.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate1(A,eat,B)) &
((predicate1(C,bark,D)) &
((relation(D,of,B)) &
((man(B)) &
(dog(D)))))))).
000634 Some men's car is fast.
fof(f1, axiom, (
? [A,B,C] : ((A=B) &
((property1(B,fast,pos)) &
((relation(A,of,C)) &
((object(C,man,countable,na,geq,2)) &
(car(A)))))))).
000635 There is a donkey of a wife's brother.
fof(f1, axiom, (
? [A,B,C] : ((relation(A,of,B)) &
((relation(B,of,C)) &
((wife(C)) &
((brother(B)) &
(donkey(A)))))))).
000636 There is a donkey of the wife's brother.
fof(f1, axiom, (
? [A,B,C] : ((wife(A)) &
((relation(B,of,C)) &
((brother(C)) &
((relation(C,of,A)) &
(donkey(B)))))))).
000637 A big hungry dog barks.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000638 John is a rich customer. His wealth is enormous. He is in his office.
fof(f1, axiom, (
? [A,B,C,D,E] : ((modifier_pp(A,in,B)) &
((predicate1(A,be,C)) &
((D=E) &
((property1(E,enormous,pos)) &
((relation(D,of,C)) &
(('John'=C) &
((property1(C,rich,pos)) &
((customer(C)) &
((object(D,wealth,mass,na,na,na)) &
((relation(B,of,'John')) &
(office(B)))))))))))))).
000639 John is a rich customer. His wealth is enormous. He is in his own office.
fof(f1, axiom, (
? [A,B,C,D,E] : ((modifier_pp(A,in,B)) &
((predicate1(A,be,C)) &
((relation(B,of,C)) &
((D=E) &
((property1(E,enormous,pos)) &
((relation(D,of,C)) &
(('John'=C) &
((property1(C,rich,pos)) &
((customer(C)) &
((object(D,wealth,mass,na,na,na)) &
(office(B)))))))))))))).
000640 John is not a customer. He is happy.
fof(f1, axiom, (
~(? [A] : ((customer(A)) &
('John'=A))))).

fof(f2, axiom, (
? [A] : (('John'=A) &
(property1(A,happy,pos))))).
000641 A man is not a customer. He is happy.
fof(f1, axiom, (
? [A,B] : ((A=B) &
((property1(B,happy,pos)) &
((~(? [C] : ((customer(C)) &
(A=C)))) &
(man(A))))))).
000642 A man is a clerk. His dog barks.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate1(A,bark,B)) &
((relation(B,of,C)) &
((D=C) &
((man(D)) &
((clerk(C)) &
(dog(B))))))))).
000643 A man is a clerk. His own dog barks.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000644 A customer gives a card to a clerk.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate3(A,give,B,C,D)) &
((clerk(D)) &
((card(C)) &
(customer(B))))))).
000645 A customer gives a clerk a card.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate3(A,give,B,C,D)) &
((card(C)) &
((clerk(D)) &
(customer(B))))))).
000646 For every code there is a clerk such that he enters it.
fof(f1, axiom, (
! [A] : ((code(A))
=> (? [B,C] : ((clerk(B)) &
(predicate2(C,enter,B,A))))))).
000647 For every code a clerk enters it.
fof(f1, axiom, (
! [A] : ((code(A))
=> (? [B,C] : ((clerk(B)) &
(predicate2(C,enter,B,A))))))).
000648 Some water is not drinkable.
fof(f1, axiom, (
? [A] : ((~(? [B] : ((property1(B,drinkable,pos)) &
(A=B)))) &
(object(A,water,mass,na,na,na))))).
000649 A man enters a card that carries a code and opens an account.
fof(f1, axiom, (
? [A,B,C,D,E,F,G] : ((predicate2(A,open,B,C)) &
((predicate2(D,enter,B,E)) &
((predicate2(F,carry,E,G)) &
((card(E)) &
((code(G)) &
((man(B)) &
(account(C)))))))))).
000650 A man who enters a card manually types a code.
fof(f1, axiom, (
? [A,B,C,D,E] : ((predicate2(A,type,B,C)) &
((modifier_adv(D,manually,pos)) &
((predicate2(D,enter,B,E)) &
((man(B)) &
((card(E)) &
(code(C))))))))).
000651 A man sees every dog.
fof(f1, axiom, (
? [A] : ((! [B] : ((dog(B))
=> (? [C] : (predicate2(C,see,A,B))))) &
(man(A))))).
000652 Every man sees a dog.
fof(f1, axiom, (
! [A] : ((man(A))
=> (? [B,C] : ((dog(B)) &
(predicate2(C,see,A,B))))))).
000653 A laundry of John collapses.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,collapse,B)) &
((relation(B,of,'John')) &
(laundry(B)))))).
000654 There is a man. His laundry smells.
fof(f1, axiom, (
? [A,B,C] : ((predicate1(A,smell,B)) &
((relation(B,of,C)) &
((laundry(B)) &
(man(C))))))).
000655 There is a man a laundry of who collapses.
fof(f1, axiom, (
? [A,B,C] : ((predicate1(A,collapse,B)) &
((relation(B,of,C)) &
((man(C)) &
(laundry(B))))))).
000656 John is a customer. He inserts a card that belongs to himself and types a code X. Bill sees X. He inserts his own card and types the code.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000657 John takes his own card and gets some money for himself.
fof(f1, axiom, (
? [A,B] : ((modifier_pp(A,for,'John')) &
((predicate2(A,get,'John',B)) &
(object(B,money,mass,na,na,na)))))).

fof(f2, axiom, (
? [A,B] : ((predicate2(A,take,'John',B)) &
((relation(B,of,'John')) &
(card(B)))))).
000658 A man visits a town ZÃ¼rich.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000659 A man who is richer than John waits.
fof(f1, axiom, (
? [A,B,C] : ((predicate1(A,wait,B)) &
((B=C) &
((property2(C,rich,comp_than,'John')) &
(man(B))))))).
000660 There is a dog. /* # with comment without comment */ There is a man.
fof(f1, axiom, (
? [A] : (dog(A)))).

fof(f2, axiom, (
? [A] : (man(A)))).
000661 There is a dog. /* # with comment (line break) without comment */ There is a man.
fof(f1, axiom, (
? [A] : (dog(A)))).

fof(f2, axiom, (
? [A] : (man(A)))).
000662 There is the man's dog and cat.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000663 A man waits carefully manually.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000664 A man carefully waits.
fof(f1, axiom, (
? [A,B] : ((modifier_adv(A,carefully,pos)) &
((predicate1(A,wait,B)) &
(man(B)))))).
000665 A man carefully manually waits.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000666 A man gives a bone to a dog manually carefully.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000667 A clerk enters a card of every customer.
fof(f1, axiom, (
? [A,B,C] : ((predicate2(A,enter,B,C)) &
((! [D] : ((customer(D))
=> (relation(C,of,D)))) &
((card(C)) &
(clerk(B))))))).
000668 A clerk enters every customer's card.
fof(f1, axiom, (
? [A] : ((! [B,C] : (((customer(B)) &
((relation(C,of,B)) &
(card(C))))
=> (? [D] : (predicate2(D,enter,A,C))))) &
(clerk(A))))).
000669 A n:xxx's dog barks.
fof(f1, axiom, (
? [A,B,C] : ((predicate1(A,bark,B)) &
((relation(B,of,C)) &
((xxx(C)) &
(dog(B))))))).
000670 The customer enters a card and a numeric personal code. If it is not valid then SM rejects the card.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000671 The customer enters a card and a numeric personal code.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000672 Who enters a card?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,who)
000673 A man John gives his own wife Mary a big and red apple.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000674 John owns some services that deliver some pizzas.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate2(A,own,'John',B)) &
((predicate2(C,deliver,B,D)) &
((object(D,pizza,countable,na,geq,2)) &
(object(B,service,countable,na,geq,2))))))).
000675 John owns some services each of which delivers some pizzas.
fof(f1, axiom, (
? [A,B] : ((predicate2(A,own,'John',B)) &
((! [C] : ((has_part(B,C))
=> (? [D,E] : ((object(D,pizza,countable,na,geq,2)) &
(predicate2(E,deliver,C,D)))))) &
(object(B,service,countable,na,geq,2)))))).
000676 John waits in a bank. He is happy.
fof(f1, axiom, (
? [A,B] : ((modifier_pp(A,in,B)) &
((predicate1(A,wait,'John')) &
(bank(B)))))).

fof(f2, axiom, (
? [A] : (('John'=A) &
(property1(A,happy,pos))))).
000677 1 man's dog barks.
fof(f1, axiom, (
? [A,B,C] : ((predicate1(A,bark,B)) &
((relation(B,of,C)) &
((man(C)) &
(dog(B))))))).
000678 A customer waits patiently.
fof(f1, axiom, (
? [A,B] : ((modifier_adv(A,patiently,pos)) &
((predicate1(A,wait,B)) &
(customer(B)))))).
000679 How does John enter a card?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,how)
000680 The waters are deep.
fof(f1, axiom, (
? [A,B] : ((object(A,water,countable,na,geq,2)) &
((A=B) &
(property1(B,deep,pos)))))).
000681 A customer enters a card or drops it. He is angry.
fof(f1, axiom, (
? [A,B] : ((A=B) &
((property1(B,angry,pos)) &
((? [C,D] : (((card(C)) &
(predicate2(D,enter,A,C)))
| (? [E] : (predicate2(E,drop,A,C))))) &
(customer(A))))))).
000682 A customer enters a card or he drops it. He is angry.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000683 A customer enters a card or he drops it. The customer is angry.
fof(f1, axiom, (
? [A,B,C] : (((card(A)) &
((customer(B)) &
(predicate2(C,enter,B,A))))
| (? [D] : (predicate2(D,drop,B,A)))))).

fof(f2, axiom, (
? [A,B] : ((A=B) &
((property1(B,angry,pos)) &
(customer(A)))))).
000684 If a customer has a card C then the customer enters C.
fof(f1, axiom, (
! [A,B,C] : (((card(A)) &
((customer(B)) &
(predicate2(C,have,B,A))))
=> (? [D] : (predicate2(D,enter,B,A)))))).
000685 If a customer has a card C then he enters C.
fof(f1, axiom, (
! [A,B,C] : (((card(A)) &
((customer(B)) &
(predicate2(C,have,B,A))))
=> (? [D] : (predicate2(D,enter,B,A)))))).
000686 p:Kaarel waits.
fof(f1, axiom, (
? [A] : (predicate1(A,wait,'Kaarel')))).
000687 Is there a dog?
fof(f1, conjecture, (
? [A] : (dog(A)))).
000688 John gives Bill Mary.
fof(f1, axiom, (
? [A] : (predicate3(A,give,'John','Mary','Bill')))).
000689 John gives Mary to Bill.
fof(f1, axiom, (
? [A] : (predicate3(A,give,'John','Mary','Bill')))).
000690 There is a man. The man "John" waits.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000691 There is a red and blue dog. The red dog barks.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,bark,B)) &
((property1(B,blue,pos)) &
((property1(B,red,pos)) &
(dog(B))))))).
000692 A dog of who eats a bone?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,who)
000693 The dog of who eats a bone?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,who)
000694 A man a dog of who eats a bone waits.
fof(f1, axiom, (
? [A,B,C,D,E] : ((predicate1(A,wait,B)) &
((predicate2(C,eat,D,E)) &
((relation(D,of,B)) &
((man(B)) &
((dog(D)) &
(bone(E))))))))).
000695 If a man walks then he talks quickly.
fof(f1, axiom, (
! [A,B] : (((man(A)) &
(predicate1(B,walk,A)))
=> (? [C] : ((predicate1(C,talk,A)) &
(modifier_adv(C,quickly,pos))))))).
000696 If a man walks quickly then he talks.
fof(f1, axiom, (
! [A,B] : (((man(A)) &
((predicate1(B,walk,A)) &
(modifier_adv(B,quickly,pos))))
=> (? [C] : (predicate1(C,talk,A)))))).
000697 If a man walks quickly then he talks quickly.
fof(f1, axiom, (
! [A,B] : (((man(A)) &
((predicate1(B,walk,A)) &
(modifier_adv(B,quickly,pos))))
=> (? [C] : ((predicate1(C,talk,A)) &
(modifier_adv(C,quickly,pos))))))).
000698 A man enters all laundry.
fof(f1, axiom, (
? [A] : ((! [B] : ((object(B,laundry,mass,na,na,na))
=> (? [C] : (predicate2(C,enter,A,B))))) &
(man(A))))).
000699 p:p v:v.
fof(f1, axiom, (
? [A] : (predicate1(A,v,p)))).
000700 A man is rich and famous.
fof(f1, axiom, (
? [A,B] : ((A=B) &
((property1(B,famous,pos)) &
((property1(B,rich,pos)) &
(man(A))))))).
000701 A dog is not a cat.
fof(f1, axiom, (
? [A] : ((~(? [B] : ((cat(B)) &
(A=B)))) &
(dog(A))))).
000702 John vaguely sees a big dog that barks in the garden of his own brother.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000703 John vaguely sees a big dog. The dog barks in the garden of the brother of John.
fof(f1, axiom, (
? [A,B,C,D,E] : ((modifier_pp(A,in,B)) &
((predicate1(A,bark,C)) &
((modifier_adv(D,vaguely,pos)) &
((predicate2(D,see,'John',C)) &
((property1(C,big,pos)) &
((dog(C)) &
((relation(E,of,'John')) &
((relation(B,of,E)) &
((garden(B)) &
(brother(E))))))))))))).
000704 Who is in the park in the town?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,who)
000705 There is not a man.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000706 There is not some laundry.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000707 There is no man.
fof(f1, axiom, (
~(? [A] : (man(A))))).
000708 A man Kaarel works extremely and fast.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000709 A man waits carefully and manually.
fof(f1, axiom, (
? [A,B] : ((modifier_adv(A,carefully,pos)) &
((modifier_adv(A,manually,pos)) &
((predicate1(A,wait,B)) &
(man(B))))))).
000710 A man gives a bone to a dog manually and carefully.
fof(f1, axiom, (
? [A,B,C,D] : ((modifier_adv(A,manually,pos)) &
((modifier_adv(A,carefully,pos)) &
((predicate3(A,give,B,C,D)) &
((dog(D)) &
((bone(C)) &
(man(B))))))))).
000711 A man carefully and manually waits.
fof(f1, axiom, (
? [A,B] : ((modifier_adv(A,carefully,pos)) &
((modifier_adv(A,manually,pos)) &
((predicate1(A,wait,B)) &
(man(B))))))).
000712 There are a dog and a cat.
fof(f1, axiom, (
? [A,B,C] : ((has_part(A,B)) &
((has_part(A,C)) &
((dog(C)) &
((object(A,na,countable,na,eq,2)) &
(cat(B)))))))).
000713 There is a dog and a cat.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000714 For every body who waits there is a clerk.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000715 For everybody who waits there is a clerk.
fof(f1, axiom, (
! [A,B] : ((($true) &
(predicate1(B,wait,A)))
=> (? [C] : (clerk(C)))))).
000716 There is a customer. The customer enters a card or he drops it. He is angry.
fof(f1, axiom, (
? [A,B] : ((A=B) &
((property1(B,angry,pos)) &
((? [C,D] : (((card(C)) &
(predicate2(D,enter,A,C)))
| (? [E] : (predicate2(E,drop,A,C))))) &
(customer(A))))))).
000717 There is a customer. The customer enters a card or drops it. He is angry.
fof(f1, axiom, (
? [A,B] : ((A=B) &
((property1(B,angry,pos)) &
((? [C,D] : (((card(C)) &
(predicate2(D,enter,A,C)))
| (? [E] : (predicate2(E,drop,A,C))))) &
(customer(A))))))).
000718 For everybody there is a dog.
fof(f1, axiom, (
! [A] : (($true)
=> (? [B] : (dog(B)))))).
000719 There is some n:laundry.
fof(f1, axiom, (
? [A] : (object(A,laundry,mass,na,na,na)))).
000720 2 kg of laundry waits.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,wait,B)) &
(object(B,laundry,mass,kg,eq,2))))).
000721 A man wait.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000722 2 men waits.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000723 A man manually is happy.
fof(f1, axiom, (
? [A,B] : ((modifier_adv(C,manually,pos)) &
((A=B) &
((property1(B,happy,pos)) &
(man(A))))))).
000724 A man very is happy.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000725 There is a dog X. A man's X barks.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000726 There is a dog X. X of a man barks.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000727 There is 1 kg of laundry.
fof(f1, axiom, (
? [A] : (laundry(A)))).
000728 Some men are happy.
fof(f1, axiom, (
? [A,B] : ((A=B) &
((property1(B,happy,pos)) &
(object(A,man,countable,na,geq,2)))))).
000729 Some men is happy.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000730 There is some men.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000731 John's laundry waits.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,wait,B)) &
((relation(B,of,'John')) &
(laundry(B)))))).
000732 A man runs almost.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000733 He who eats drinks.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000734 A dog of some men runs.
fof(f1, axiom, (
? [A,B,C] : ((predicate1(A,run,B)) &
((relation(B,of,C)) &
((object(C,man,countable,na,geq,2)) &
(dog(B))))))).
000735 A dog of some men who run barks.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate1(A,bark,B)) &
((relation(B,of,C)) &
((predicate1(D,run,C)) &
((object(C,man,countable,na,geq,2)) &
(dog(B)))))))).
000736 A dog of some men who runs barks.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000737 Some men's dog runs.
fof(f1, axiom, (
? [A,B,C] : ((predicate1(A,run,B)) &
((relation(B,of,C)) &
((object(C,man,countable,na,geq,2)) &
(dog(B))))))).
000738 Some men's dog who runs barks.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000739 Some men's dog who run barks.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000740 A dog who runs barks.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000741 A dog who run barks.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000742 Is there a man John?
ERROR	DRS is empty	apply_converter/2	drs([],[])
000743 There is a man or there is a woman.
fof(f1, axiom, (
? [A] : ((man(A))
| (? [B] : (woman(B)))))).
000744 Is there a man or is there a woman?
ERROR	DRS is empty	apply_converter/2	drs([],[])
000745 There is a n:laundry.
fof(f1, axiom, (
? [A] : (laundry(A)))).
000746 A man works in a bank in a morning.
fof(f1, axiom, (
? [A,B,C,D] : ((modifier_pp(A,in,B)) &
((modifier_pp(A,in,C)) &
((predicate1(A,work,D)) &
((man(D)) &
((morning(C)) &
(bank(B))))))))).
000747 A man works in a bank and in a morning.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000748 A man works in a bank manually.
fof(f1, axiom, (
? [A,B,C] : ((modifier_pp(A,in,B)) &
((modifier_adv(A,manually,pos)) &
((predicate1(A,work,C)) &
((man(C)) &
(bank(B)))))))).
000749 A man works manually in a bank.
fof(f1, axiom, (
? [A,B,C] : ((modifier_adv(A,manually,pos)) &
((modifier_pp(A,in,B)) &
((predicate1(A,work,C)) &
((man(C)) &
(bank(B)))))))).
000750 A man works manually in a bank quickly.
fof(f1, axiom, (
? [A,B,C] : ((modifier_adv(A,manually,pos)) &
((modifier_pp(A,in,B)) &
((modifier_adv(A,quickly,pos)) &
((predicate1(A,work,C)) &
((man(C)) &
(bank(B))))))))).
000751 A man works manually and quickly in a bank.
fof(f1, axiom, (
? [A,B,C] : ((modifier_adv(A,manually,pos)) &
((modifier_adv(A,quickly,pos)) &
((modifier_pp(A,in,B)) &
((predicate1(A,work,C)) &
((man(C)) &
(bank(B))))))))).
000752 A man works manually quickly in a bank.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000753 A man works in a bank manually quickly.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000754 A man works in a bank manually in a morning.
fof(f1, axiom, (
? [A,B,C,D] : ((modifier_pp(A,in,B)) &
((modifier_adv(A,manually,pos)) &
((modifier_pp(A,in,C)) &
((predicate1(A,work,D)) &
((man(D)) &
((morning(C)) &
(bank(B)))))))))).
000755 A man gives a boy his own card.
fof(f1, axiom, (
? [A,B,C,D] : ((card(A)) &
((predicate3(B,give,C,A,D)) &
((relation(A,of,C)) &
((man(C)) &
(boy(D)))))))).
000756 His own card waits.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000757 Not more than 5 men wait.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000758 Not less than 5 men wait.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000759 There is a cat. It sees itself.
fof(f1, axiom, (
? [A,B] : ((predicate2(A,see,B,B)) &
(cat(B))))).
000760 There is a cat. A dog sees it.
fof(f1, axiom, (
? [A,B,C] : ((predicate2(A,see,B,C)) &
((cat(C)) &
(dog(B)))))).
000761 Every man waits-for some women who are happy or who are sad.
fof(f1, axiom, (
! [A] : ((man(A))
=> (? [B,C] : ((object(B,woman,countable,na,geq,2)) &
((? [D] : (((property1(D,happy,pos)) &
(B=D))
| (? [E] : ((property1(E,sad,pos)) &
(B=E))))) &
(predicate2(C,'wait-for',A,B)))))))).
000762 If there is a man then there are more than 1 women.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000763 Is there no laundry?
fof(f1, conjecture, (
~(? [A] : (laundry(A))))).
000764 Everybody a dog of who barks waits.
fof(f1, axiom, (
! [A,B,C] : ((($true) &
((dog(B)) &
((relation(B,of,C)) &
(predicate1(A,bark,B)))))
=> (? [D] : (predicate1(D,wait,C)))))).
000765 Are there Augusts?
ERROR	DRS is empty	apply_converter/2	drs([],[])
000766 A laundry sees its own dog.
fof(f1, axiom, (
? [A,B,C] : ((predicate2(A,see,B,C)) &
((relation(C,of,B)) &
((dog(C)) &
(laundry(B))))))).
000767 Some laundry sees its own dog.
fof(f1, axiom, (
? [A,B,C] : ((predicate2(A,see,B,C)) &
((relation(C,of,B)) &
((dog(C)) &
(object(B,laundry,mass,na,na,na))))))).
000768 There is John. John walks.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000769 Some laundry are clean.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000770 A man sees 2 signs "Go!" and "Stop".
ERROR	DRS is empty	apply_converter/2	drs([],[])
000771 A man sees 3 signs "Go!" and "Stop".
ERROR	DRS is empty	apply_converter/2	drs([],[])
000772 Where does a man quickly run?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,where)
000773 Where does a man run quickly?
ERROR	DRS is empty	apply_converter/2	drs([],[])
000774 A card of a man sees him.
fof(f1, axiom, (
? [A,B,C] : ((predicate2(A,see,B,C)) &
((relation(B,of,C)) &
((card(B)) &
(man(C))))))).
000775 There are the man's dog and cat.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000776 A man runs. There is the man.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000777 where does a man run?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,where)
000778 Everything runs.
fof(f1, axiom, (
! [A] : (($true)
=> (? [B] : (predicate1(B,run,A)))))).
000779 A dog of a man and of a woman waits.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000780 John's Mary waits.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000781 Mary of John waits.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000782 If every man runs then a dog barks.
fof(f1, axiom, (
(! [A] : ((man(A))
=> (? [B] : (predicate1(B,run,A)))))
=> (? [C,D] : ((dog(C)) &
(predicate1(D,bark,C)))))).
000783 If if there is a man then he runs then a dog barks.
fof(f1, axiom, (
(! [A] : ((man(A))
=> (? [B] : (predicate1(B,run,A)))))
=> (? [C,D] : ((dog(C)) &
(predicate1(D,bark,C)))))).
000784 There is a man such that he walks.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,walk,B)) &
(man(B))))).
000785 There is a man A. A is happy.
fof(f1, axiom, (
? [A,B] : ((A=B) &
((property1(B,happy,pos)) &
(man(A)))))).
000786 Where does a man run?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,where)
000787 A man of the man waits.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,wait,B)) &
((relation(B,of,B)) &
(man(B)))))).
000788 If a man runs, and walks or eats then a dog barks.
fof(f1, axiom, (
! [A,B] : (((man(A)) &
((predicate1(B,run,A)) &
(? [C] : ((predicate1(C,walk,A))
| (? [D] : (predicate1(D,eat,A)))))))
=> (? [E,F] : ((dog(E)) &
(predicate1(F,bark,E))))))).
000789 If a man does not walk then a dog barks.
fof(f1, axiom, (
! [A] : (((man(A)) &
(~(? [B] : (predicate1(B,walk,A)))))
=> (? [C,D] : ((dog(C)) &
(predicate1(D,bark,C))))))).
000790 A man waits in a bank which likes him.
fof(f1, axiom, (
? [A,B,C,D] : ((modifier_pp(A,in,B)) &
((predicate1(A,wait,C)) &
((predicate2(D,like,B,C)) &
((bank(B)) &
(man(C)))))))).
000791 A man waits in a bank which likes himself.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000792 A man X walks. A man X talks.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000793 There is a box.
fof(f1, axiom, (
? [A] : (box(A)))).
000794 a man gives a dog a card in his house.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000795 a man gives a dog a card in him.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000796 a man gives his dog a card.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000797 a man gives a card to his dog.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000798 a man gives him a card .
ERROR	DRS is empty	apply_converter/2	drs([],[])
000799 a man gives a card to him.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000800 a man gives a dog him.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000801 a man gives him to a dog.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000802 a man sees a card in his house.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000803 a man sees a card in him.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000804 a man sees his card .
ERROR	DRS is empty	apply_converter/2	drs([],[])
000805 a man sees him.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000806 a man waits in his house.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000807 a man waits in him.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000808 A man X waits. X sleeps.
fof(f1, axiom, (
? [A,B,C] : ((predicate1(A,sleep,B)) &
((predicate1(C,wait,B)) &
(man(B)))))).
000809 A dog of its own man barks.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000811 A dog X of a woman eats. The dog X of a man drinks.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000812 A man sees a cat and a dog and a mouse.
fof(f1, axiom, (
? [A,B,C,D,E,F] : ((has_part(A,B)) &
((has_part(A,C)) &
((has_part(A,D)) &
((predicate2(E,see,F,A)) &
((man(F)) &
((object(A,na,countable,na,eq,3)) &
((cat(D)) &
((dog(C)) &
(mouse(B)))))))))))).
000813 Somebody waits. He sleeps.
fof(f1, axiom, (
? [A,B,C] : ((predicate1(A,sleep,B)) &
((predicate1(C,wait,B)) &
($true))))).
000814 Something waits. He sleeps.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000815 It is not the case that there is some water.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000816 There is no water.
fof(f1, axiom, (
~(? [A] : (water(A))))).
000817 Somebody waits. It sleeps.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000818 Something waits. It sleeps.
fof(f1, axiom, (
? [A,B,C] : ((predicate1(A,sleep,B)) &
((predicate1(C,wait,B)) &
($true))))).
000819 John watches a man who sees himself.
fof(f1, axiom, (
? [A,B,C] : ((predicate2(A,watch,'John',B)) &
((predicate2(C,see,B,B)) &
(man(B)))))).
000820 John beats the donkey of his wife.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000821 John beats his own donkey.
fof(f1, axiom, (
? [A,B] : ((predicate2(A,beat,'John',B)) &
((relation(B,of,'John')) &
(donkey(B)))))).
000822 John beats the donkey of himself.
fof(f1, axiom, (
? [A,B] : ((predicate2(A,beat,'John',B)) &
((relation(B,of,'John')) &
(donkey(B)))))).
000823 John beats a donkey of himself.
fof(f1, axiom, (
? [A,B] : ((predicate2(A,beat,'John',B)) &
((relation(B,of,'John')) &
(donkey(B)))))).
000824 John beats his donkey.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000825 John beats a donkey of him.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000826 John beats the donkey of him.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000827 John beats the donkey of his own wife.
fof(f1, axiom, (
? [A,B,C] : ((predicate2(A,beat,'John',B)) &
((relation(C,of,'John')) &
((relation(B,of,C)) &
((donkey(B)) &
(wife(C)))))))).
000828 John beats a donkey of a wife of himself.
fof(f1, axiom, (
? [A,B,C] : ((predicate2(A,beat,'John',B)) &
((relation(B,of,C)) &
((relation(C,of,'John')) &
((wife(C)) &
(donkey(B)))))))).
000829 John beats a donkey of a wife of him.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000830 A man has 2 kg of laundries.
fof(f1, axiom, (
? [A,B,C] : ((predicate2(A,have,B,C)) &
((object(C,laundry,countable,kg,eq,2)) &
(man(B)))))).
000831 John sees some water of himself.
fof(f1, axiom, (
? [A,B] : ((predicate2(A,see,'John',B)) &
((relation(B,of,'John')) &
(object(B,water,mass,na,na,na)))))).
000832 John sees a water of himself.
fof(f1, axiom, (
? [A,B] : ((predicate2(A,see,'John',B)) &
((relation(B,of,'John')) &
(water(B)))))).
000833 John sees his own water.
fof(f1, axiom, (
? [A,B] : ((predicate2(A,see,'John',B)) &
((relation(B,of,'John')) &
(water(B)))))).
000834 John sees a water.
fof(f1, axiom, (
? [A,B] : ((predicate2(A,see,'John',B)) &
(water(B))))).
000835 John sees some water.
fof(f1, axiom, (
? [A,B] : ((predicate2(A,see,'John',B)) &
(object(B,water,mass,na,na,na))))).
000836 John sees the water.
fof(f1, axiom, (
? [A,B] : ((predicate2(A,see,'John',B)) &
(water(B))))).
000837 John does not see a water.
fof(f1, axiom, (
~(? [A,B] : ((water(A)) &
(predicate2(B,see,'John',A)))))).
000838 John sees no water.
fof(f1, axiom, (
! [A] : ((water(A))
=> (~(? [B] : (predicate2(B,see,'John',A))))))).
000839 John does not see some water.
fof(f1, axiom, (
~(? [A,B] : ((object(A,water,mass,na,na,na)) &
(predicate2(B,see,'John',A)))))).
000840 A man waits. A man wait.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000841 A dog of a man of a house barks.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate1(A,bark,B)) &
((relation(B,of,C)) &
((relation(C,of,D)) &
((man(C)) &
((house(D)) &
(dog(B))))))))).
000842 A man gives a cat. The cat gives a bone to a dog.
fof(f1, axiom, (
? [A,B,C,D,E,F] : ((predicate3(A,give,B,C,D)) &
((dog(D)) &
((bone(C)) &
((predicate2(E,give,F,B)) &
((cat(B)) &
(man(F))))))))).
000843 A man gives a cat to a dog. The cat gives a bone.
fof(f1, axiom, (
? [A,B,C,D,E,F] : ((predicate2(A,give,B,C)) &
((bone(C)) &
((predicate3(D,give,E,B,F)) &
((dog(F)) &
((cat(B)) &
(man(E))))))))).
000844 If there is a man then there are more than 2 women.
fof(f1, axiom, (
! [A] : ((man(A))
=> (? [B] : (object(B,woman,countable,na,greater,2)))))).
000845 A man runs in the park manually and quickly.
fof(f1, axiom, (
? [A,B,C] : ((park(A)) &
((modifier_adv(B,quickly,pos)) &
((modifier_adv(B,manually,pos)) &
((modifier_pp(B,in,A)) &
((predicate1(B,run,C)) &
(man(C))))))))).
000846 A dog is good and bad.
fof(f1, axiom, (
? [A,B] : ((A=B) &
((property1(B,bad,pos)) &
((property1(B,good,pos)) &
(dog(A))))))).
000847 A dog is good and interested-in a bone.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000848 A dog is good and interested-in a bone and bad.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000849 if there is a man then there are 2 women.
fof(f1, axiom, (
! [A] : ((man(A))
=> (? [B] : (object(B,woman,countable,na,eq,2)))))).
000850 There is some laundry. There is a dog. It is clean.
fof(f1, axiom, (
? [A] : (object(A,laundry,mass,na,na,na)))).

fof(f2, axiom, (
? [A,B] : ((A=B) &
((property1(B,clean,pos)) &
(dog(A)))))).
000851 There is some laundry. It sees itself.
fof(f1, axiom, (
? [A,B] : ((predicate2(A,see,B,B)) &
(object(B,laundry,mass,na,na,na))))).
000852 There is some laundry. It sees its own dog.
fof(f1, axiom, (
? [A,B,C] : ((predicate2(A,see,B,C)) &
((relation(C,of,B)) &
((dog(C)) &
(object(B,laundry,mass,na,na,na))))))).
000853 Some laundry which sees itself is clean.
fof(f1, axiom, (
? [A,B,C] : ((A=B) &
((property1(B,clean,pos)) &
((predicate2(C,see,A,A)) &
(object(A,laundry,mass,na,na,na))))))).
000854 Each of 2 girls lifts them.
fof(f1, axiom, (
? [A] : ((! [B] : ((has_part(A,B))
=> (? [C] : (predicate2(C,lift,B,A))))) &
(object(A,girl,countable,na,eq,2))))).
000855 Each of 2 girls lifts themselves.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000856 A man is interested-in every dog.
fof(f1, axiom, (
? [A] : ((! [B] : ((dog(B))
=> (? [C] : ((property2(C,'interested-in',pos,B)) &
(A=C))))) &
(man(A))))).
000857 A man is interested-in every dog that barks.
fof(f1, axiom, (
? [A] : ((! [B,C] : (((dog(B)) &
(predicate1(C,bark,B)))
=> (? [D] : ((property2(D,'interested-in',pos,B)) &
(A=D))))) &
(man(A))))).
000858 A man is interested-in no dog.
fof(f1, axiom, (
? [A] : ((! [B] : ((dog(B))
=> (~(? [C] : ((property2(C,'interested-in',pos,B)) &
(A=C)))))) &
(man(A))))).
000859 A man is interested-in not every dog.
fof(f1, axiom, (
? [A] : ((~(! [B] : ((dog(B))
=> (? [C] : ((property2(C,'interested-in',pos,B)) &
(A=C)))))) &
(man(A))))).
000860 A bank which a man enters is good.
fof(f1, axiom, (
? [A,B,C,D] : ((A=B) &
((property1(B,good,pos)) &
((predicate2(C,enter,D,A)) &
((bank(A)) &
(man(D)))))))).
000861 Which bank which a man enters is good?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,which)
000862 What which is good does a man enter?
ERROR	DRS is empty	apply_converter/2	drs([],[])
000863 A card a code of who a man enters is valid.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000864 The customer Mr-Miller inserts a card A.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000865 The dog which sees the man barks.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate1(A,bark,B)) &
((predicate2(C,see,B,D)) &
((dog(B)) &
(man(D))))))).
000866 There is a n:aaa which waits. The n:aaa which waits barks.
fof(f1, axiom, (
? [A,B,C] : ((predicate1(A,bark,B)) &
((predicate1(C,wait,B)) &
(aaa(B)))))).
000867 There is a man or there is a dog which sees him or there is a cat which sees it.
fof(f1, axiom, (
? [A] : ((man(A))
| (? [B,C] : (((dog(B)) &
(predicate2(C,see,B,A)))
| (? [D,E] : ((cat(D)) &
(predicate2(E,see,D,B))))))))).
000868 There is a man or there is a dog which sees him or there is a cat which sees him.
fof(f1, axiom, (
? [A] : ((man(A))
| (? [B,C] : (((dog(B)) &
(predicate2(C,see,B,A)))
| (? [D,E] : ((cat(D)) &
(predicate2(E,see,D,A))))))))).
000869 For every body which waits there is a clerk.
fof(f1, axiom, (
! [A,B] : (((body(A)) &
(predicate1(B,wait,A)))
=> (? [C] : (clerk(C)))))).
000870 Some men's dog which runs barks.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate1(A,bark,B)) &
((predicate1(C,run,B)) &
((relation(B,of,D)) &
((object(D,man,countable,na,geq,2)) &
(dog(B)))))))).
000871 A dog which runs barks.
fof(f1, axiom, (
? [A,B,C] : ((predicate1(A,bark,B)) &
((predicate1(C,run,B)) &
(dog(B)))))).
000872 A man John waits. John is happy.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000873 2 men X and X eat.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000874 A laundry washes some laundry. It is clean. Some water sees a water. It is cold.
fof(f1, axiom, (
? [A,B,C,D] : ((A=B) &
((property1(B,clean,pos)) &
((predicate2(C,wash,D,A)) &
((laundry(D)) &
(object(A,laundry,mass,na,na,na)))))))).

fof(f2, axiom, (
? [A,B,C,D] : ((A=B) &
((property1(B,cold,pos)) &
((predicate2(C,see,D,A)) &
((object(D,water,mass,na,na,na)) &
(water(A)))))))).
000875 A card who is tired sleeps.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000876 A card which is tired sleeps.
fof(f1, axiom, (
? [A,B,C] : ((predicate1(A,sleep,B)) &
((B=C) &
((property1(C,tired,pos)) &
(card(B))))))).
000877 A card that is tired sleeps.
fof(f1, axiom, (
? [A,B,C] : ((predicate1(A,sleep,B)) &
((B=C) &
((property1(C,tired,pos)) &
(card(B))))))).
000878 A man that is tired sleeps.
fof(f1, axiom, (
? [A,B,C] : ((predicate1(A,sleep,B)) &
((B=C) &
((property1(C,tired,pos)) &
(man(B))))))).
000879 A man which is tired sleeps.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000880 A man who is tired sleeps.
fof(f1, axiom, (
? [A,B,C] : ((predicate1(A,sleep,B)) &
((B=C) &
((property1(C,tired,pos)) &
(man(B))))))).
000881 A man who is tired sleeps
ERROR	DRS is empty	apply_converter/2	drs([],[])
000882 A man who is John sleeps.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,sleep,B)) &
((B='John') &
(man(B)))))).
000883 John who is a man sleeps.
fof(f1, axiom, (
? [A] : (('John'=A) &
(man(A))))).

fof(f2, axiom, (
? [A] : (predicate1(A,sleep,'John')))).
000884 2 men X and John wait.
fof(f1, axiom, (
? [A,B,C] : ((object(A,na,countable,na,eq,2)) &
((has_part(A,'John')) &
((has_part(A,B)) &
((predicate1(C,wait,A)) &
(object(B,man,countable,na,eq,2)))))))).
000885 John wait.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000886 2 men John and X wait.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000887 Christmases wait.
fof(f1, axiom, (
? [A] : (predicate1(A,wait,'Christmas')))).
000888 Some men Christmases wait.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000889 There is a man X. A man Y brings him his pencil and his own computer.
fof(f1, axiom, (
? [A,B,C,D,E,F] : ((has_part(A,B)) &
((has_part(A,C)) &
((relation(B,of,D)) &
((predicate3(E,bring,D,A,F)) &
((relation(C,of,F)) &
((pencil(C)) &
((man(F)) &
((man(D)) &
((object(A,na,countable,na,eq,2)) &
(computer(B))))))))))))).
000890 A man runs there.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000891 Is there a man X?
fof(f1, conjecture, (
? [A] : (man(A)))).
000892 A man X gives his own wife Y a big and red apple.
fof(f1, axiom, (
? [A,B,C,D] : ((wife(A)) &
((predicate3(B,give,C,D,A)) &
((property1(D,red,pos)) &
((property1(D,big,pos)) &
((apple(D)) &
((relation(A,of,C)) &
(man(C)))))))))).
000893 If John waits then the man X sleeps.
fof(f1, axiom, (
! [A] : ((predicate1(A,wait,'John'))
=> (? [B,C] : ((man(B)) &
(predicate1(C,sleep,B))))))).
000894 If John waits then a man X sleeps.
fof(f1, axiom, (
! [A] : ((predicate1(A,wait,'John'))
=> (? [B,C] : ((man(B)) &
(predicate1(C,sleep,B))))))).
000895 The man X walks. The woman X talks.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000896 If a man X waits then he sleeps.
fof(f1, axiom, (
! [A,B] : (((man(A)) &
(predicate1(B,wait,A)))
=> (? [C] : (predicate1(C,sleep,A)))))).
000897 A man does not like a man X.
fof(f1, axiom, (
? [A] : ((~(? [B,C] : ((man(B)) &
(predicate2(C,like,A,B))))) &
(man(A))))).
000898 A man X gives his own wife Y a unknownword.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000899 A man X gives an apple to a woman Y. Y accepts the apple and eats it. She is happy and he has no apples.
fof(f1, axiom, (
? [A,B,C,D,E,F,G] : ((! [H] : ((apple(H))
=> (~(? [I] : (predicate2(I,have,G,H)))))) &
((A=B) &
((property1(B,happy,pos)) &
((predicate2(C,eat,A,D)) &
((predicate2(E,accept,A,D)) &
((predicate3(F,give,G,D,A)) &
((woman(A)) &
((apple(D)) &
(man(G)))))))))))).
000900 John gives an apple to Mary. Mary accepts the apple and eats it. She is happy and he has no apples.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate2(A,eat,'Mary',B)) &
((predicate2(C,accept,'Mary',B)) &
((predicate3(D,give,'John',B,'Mary')) &
(apple(B))))))).

fof(f2, axiom, (
! [A] : ((apple(A))
=> (~(? [B] : (predicate2(B,have,'John',A))))))).

fof(f3, axiom, (
? [A] : (('Mary'=A) &
(property1(A,happy,pos))))).
000901 A man runs easily.
fof(f1, axiom, (
? [A,B] : ((modifier_adv(A,easily,pos)) &
((predicate1(A,run,B)) &
(man(B)))))).
000902 There is a man X. X who runs is happy.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000903 John which runs eats.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000904 There is a man X. X which runs is happy.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000905 John who run eats.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000906 There is a dog which a man hits.
fof(f1, axiom, (
? [A,B,C] : ((predicate2(A,hit,B,C)) &
((dog(C)) &
(man(B)))))).
000907 There is a dog X. X which a man hits barks.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000908 There is a dog X. X which sees a man barks.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000909 John's car are fast.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000910 John who is a clerk waits.
fof(f1, axiom, (
? [A] : (('John'=A) &
(clerk(A))))).

fof(f2, axiom, (
? [A] : (predicate1(A,wait,'John')))).
000911 John who is the clerk waits.
fof(f1, axiom, (
? [A] : (('John'=A) &
(clerk(A))))).

fof(f2, axiom, (
? [A] : (predicate1(A,wait,'John')))).
000912 There is a clerk X. X the card of who a customer steals is angry.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000913 There are at most 2 men X and Y and Z.
ERROR	DRS condition not supported: [|]	tptp/4	[has_part(_,A)-1,object(A,man,countable,na,leq,2)-1]
000914 There is John. A man brings him his pencil and brings him his own computer.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000915 A man waits in a bank with John.
fof(f1, axiom, (
? [A,B,C] : ((modifier_pp(A,in,B)) &
((modifier_pp(A,with,'John')) &
((predicate1(A,wait,C)) &
((man(C)) &
(bank(B)))))))).
000916 Every customer enters every card.
fof(f1, axiom, (
! [A] : ((customer(A))
=> (! [B] : ((card(B))
=> (? [C] : (predicate2(C,enter,A,B)))))))).
000917 Every customer enters every card or enters every code.
fof(f1, axiom, (
! [A] : ((customer(A))
=> ((! [B] : ((card(B))
=> (? [C] : (predicate2(C,enter,A,B)))))
| (! [D] : ((code(D))
=> (? [E] : (predicate2(E,enter,A,D))))))))).
000918 It is not the case that no man does not wait.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000919 A customer enters every card and enters every code.
fof(f1, axiom, (
? [A] : ((! [B] : ((code(B))
=> (? [C] : (predicate2(C,enter,A,B))))) &
((! [D] : ((card(D))
=> (? [E] : (predicate2(E,enter,A,D))))) &
(customer(A)))))).
000920 It is not the case that a man waits and a dog barks.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000921 It is not the case that there is a man and a dog barks.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000922 It is not the case that a man who waits or who eats runs and sleeps.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000923 It is not the case that a man who waits or who eats runs or sleeps.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000924 It is not the case that a man who waits or who eats runs or sleeps and barks.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000925 It is not the case that a man who waits or who eats runs or sleeps ,and barks.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000926 For every dog if it barks then it does not sleep.
fof(f1, axiom, (
! [A] : ((dog(A))
=> (! [B] : ((predicate1(B,bark,A))
=> (~(? [C] : (predicate1(C,sleep,A))))))))).
000927 There is a dog ,and there is a man or there is a woman ,and there is a cat.
fof(f1, axiom, (
? [A] : ((man(A))
| (? [B] : (woman(B)))))).

fof(f2, axiom, (
? [A] : (dog(A)))).

fof(f3, axiom, (
? [A] : (cat(A)))).
000928 It is not the case that there is a dog ,and there is a man or there is a woman ,and there is a cat.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000929 It is not the case that there is a dog. There is a man or there is a woman ,and it is not the case that there is a cat.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000930 It is not the case that there is a dog ,and there is a man or there is a woman ,and it is not the case that there is a cat.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000931 It is not the case that a man sleeps or waits.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000932 It is not the case that there is a man and the man sleeps or the man waits.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000933 It is not the case that there is a man ,and the man sleeps or the man waits.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000934 It is not the case that there is a dog and it is not the case that there is a cat.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000935 It is not the case that there is a dog. It is not the case that there is a cat.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000936 A dog does not bark or a cat does not sleep.
fof(f1, axiom, (
? [A] : (((dog(A)) &
(~(? [B] : (predicate1(B,bark,A)))))
| (? [C] : ((cat(C)) &
(~(? [D] : (predicate1(D,sleep,C))))))))).
000937 Somebody sees himself.
fof(f1, axiom, (
? [A,B] : ((predicate2(A,see,B,B)) &
($true)))).
000938 Somebody gives him him.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000939 Somebody gives him himself.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000940 There is somebody. Somebody gives him himself.
fof(f1, axiom, (
? [A,B,C] : ((predicate3(A,give,B,B,C)) &
(($true) &
($true))))).
000941 Somebody gives somebody himself/herself.
fof(f1, axiom, (
? [A,B,C] : ((predicate3(A,give,B,B,C)) &
(($true) &
($true))))).
000942 Somebody gives himself him.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000943 There is somebody. Somebody gives himself him.
fof(f1, axiom, (
? [A,B,C] : ((predicate3(A,give,B,C,B)) &
(($true) &
($true))))).
000944 Somebody gives himself himself.
fof(f1, axiom, (
? [A,B] : ((predicate3(A,give,B,B,B)) &
($true)))).
000945 Somebody sees his own dog.
fof(f1, axiom, (
? [A,B,C] : ((predicate2(A,see,B,C)) &
((relation(C,of,B)) &
((dog(C)) &
($true)))))).
000946 Somebody sees a dog of himself.
fof(f1, axiom, (
? [A,B,C] : ((predicate2(A,see,B,C)) &
((relation(C,of,B)) &
(($true) &
(dog(C))))))).
000947 There is somebody. A dog of him barks.
fof(f1, axiom, (
? [A,B,C] : ((predicate1(A,bark,B)) &
((relation(B,of,C)) &
(($true) &
(dog(B))))))).
000948 Somebody waits. He sees a dog of himself.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate2(A,see,B,C)) &
((relation(C,of,B)) &
((predicate1(D,wait,B)) &
(($true) &
(dog(C)))))))).
000949 Somebody waits. Somebody sees a dog of himself.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,wait,B)) &
($true)))).

fof(f2, axiom, (
? [A,B,C] : ((predicate2(A,see,B,C)) &
((relation(C,of,B)) &
(($true) &
(dog(C))))))).
000950 Somebody waits. Somebody sees a dog of him.
fof(f1, axiom, (
? [A,B,C,D,E] : ((predicate2(A,see,B,C)) &
((relation(C,of,D)) &
((predicate1(E,wait,D)) &
(($true) &
((dog(C)) &
($true)))))))).
000951 Somebody waits. He sees himself.
fof(f1, axiom, (
? [A,B,C] : ((predicate2(A,see,B,B)) &
((predicate1(C,wait,B)) &
($true))))).
000952 Somebody waits. Somebody sees him.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate2(A,see,B,C)) &
((predicate1(D,wait,C)) &
(($true) &
($true)))))).
000953 Somebody waits. Somebody sees himself.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,wait,B)) &
($true)))).

fof(f2, axiom, (
? [A,B] : ((predicate2(A,see,B,B)) &
($true)))).
000954 Somebody is interested-in himself.
fof(f1, axiom, (
? [A,B] : ((A=B) &
((property2(B,'interested-in',pos,A)) &
($true))))).
000955 Somebody is interested-in him.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000956 Somebody waits in himself.
fof(f1, axiom, (
? [A,B] : ((modifier_pp(A,in,B)) &
((predicate1(A,wait,B)) &
($true))))).
000957 Somebody waits in him.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000958 There is somebody. Somebody waits in him.
fof(f1, axiom, (
? [A,B,C] : ((modifier_pp(A,in,B)) &
((predicate1(A,wait,C)) &
(($true) &
($true)))))).
000959 Somebody runs. Somebody waits in him.
fof(f1, axiom, (
? [A,B,C,D] : ((modifier_pp(A,in,B)) &
((predicate1(A,wait,C)) &
(($true) &
((predicate1(D,run,B)) &
($true))))))).
000960 Somebody is big and small.
fof(f1, axiom, (
? [A,B] : ((A=B) &
((property1(B,small,pos)) &
((property1(B,big,pos)) &
($true)))))).
000961 Somebody is interested-in a dog and interested-in a cat.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000962 Somebody is himself.
fof(f1, axiom, (
? [A] : ((A=A) &
($true)))).
000963 A man is himself.
fof(f1, axiom, (
? [A] : ((A=A) &
(man(A))))).
000964 There is a dog. A man sees the dog of it.
fof(f1, axiom, (
? [A] : (dog(A)))).

fof(f2, axiom, (
? [A,B,C] : ((dog(A)) &
((relation(A,of,A)) &
((predicate2(B,see,C,A)) &
(man(C))))))).
000965 It is not the case that a man waits and that a dog barks.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000966 It is not the case that there is a man and that a dog barks.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000967 It is not the case that there is a dog ,and that there is a man or there is a woman ,and there is a cat.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000968 It is not the case that there is a dog ,and that there is a man or that there is a woman ,and there is a cat.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000969 It is not the case that there is a dog ,and that there is a man or that there is a woman ,and that there is a cat.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000970 It is not the case that there is a dog A. There is a man C or there is a woman E. It is not the case that there is a cat G.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000971 A man does not sleep or does not wait.
fof(f1, axiom, (
? [A] : (((~(? [B] : (predicate1(B,sleep,A))))
| (~(? [C] : (predicate1(C,wait,A))))) &
(man(A))))).
000972 It is not the case that there is a man ,and that the man sleeps or that the man waits.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000973 It is not the case that there is a dog and that it is not the case that there is a cat.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000974 If there is something that barks then it is a dog.
fof(f1, axiom, (
! [A,B] : ((($true) &
(predicate1(B,bark,A)))
=> (? [C] : ((dog(C)) &
(A=C)))))).
000975 A dog that a man sees in a park barks.
fof(f1, axiom, (
? [A,B,C,D,E] : ((predicate1(A,bark,B)) &
((modifier_pp(C,in,D)) &
((predicate2(C,see,E,B)) &
((dog(B)) &
((man(E)) &
(park(D))))))))).
000976 A dog that a man sees quickly barks.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate1(A,bark,B)) &
((modifier_adv(C,quickly,pos)) &
((predicate2(C,see,D,B)) &
((dog(B)) &
(man(D)))))))).
000977 It is not the case that a man runs. He walks.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000978 It is not the case that John runs. He walks.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000979 A man gives a dog a bone and gives a cat a cake.
fof(f1, axiom, (
? [A,B,C,D,E,F,G] : ((predicate3(A,give,B,C,D)) &
((cake(C)) &
((cat(D)) &
((predicate3(E,give,B,F,G)) &
((bone(F)) &
((dog(G)) &
(man(B)))))))))).
000980 A man gives a bone to a dog and gives a cake to a cat.
fof(f1, axiom, (
? [A,B,C,D,E,F,G] : ((predicate3(A,give,B,C,D)) &
((cat(D)) &
((cake(C)) &
((predicate3(E,give,B,F,G)) &
((dog(G)) &
((bone(F)) &
(man(B)))))))))).
000981 A man waits not.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000982 Somebody is himself/herself.
fof(f1, axiom, (
? [A] : ((A=A) &
($true)))).
000983 There is a long zip code ZC.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000984 There is an empty string " ".
ERROR	DRS is empty	apply_converter/2	drs([],[])
000985 There are 2 kg of apples. The apples are red.
fof(f1, axiom, (
? [A,B] : ((A=B) &
((property1(B,red,pos)) &
(object(A,apple,countable,kg,eq,2)))))).
000986 There are 2 kg of apples "Golden" of John.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000987 There is 1 kg of dirty laundry.
fof(f1, axiom, (
? [A] : ((property1(A,dirty,pos)) &
(laundry(A))))).
000988 There are more than 2 kg of dirty laundry.
fof(f1, axiom, (
? [A] : ((property1(A,dirty,pos)) &
(object(A,laundry,mass,kg,greater,2))))).
000989 There is a long zip code " 90210 ".
ERROR	DRS is empty	apply_converter/2	drs([],[])
000990 There is a card such that a clerk enters the card of every customer.
fof(f1, axiom, (
? [A,B,C] : ((predicate2(A,enter,B,C)) &
((card(C)) &
((! [D] : ((customer(D))
=> (relation(C,of,D)))) &
(clerk(B))))))).

fof(f2, axiom, (
? [A] : (card(A)))).
000991 There is a card. If there is a man then there is the card of the man.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000992 There is a card of every man.
fof(f1, axiom, (
? [A] : ((! [B] : ((man(B))
=> (relation(A,of,B)))) &
(card(A))))).
000993 A dog of every man waits.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,wait,B)) &
((! [C] : ((man(C))
=> (relation(B,of,C)))) &
(dog(B)))))).
000994 Every man's dog waits.
fof(f1, axiom, (
! [A,B] : (((man(A)) &
((relation(B,of,A)) &
(dog(B))))
=> (? [C] : (predicate1(C,wait,B)))))).
000995 For every book a database lists its title.
fof(f1, axiom, (
! [A] : ((book(A))
=> (? [B,C,D] : ((database(D)) &
((title(C)) &
((relation(C,of,A)) &
(predicate2(B,list,D,C))))))))).
000996 A database lists for every book its title.
ERROR	DRS is empty	apply_converter/2	drs([],[])
000997 For every book a database lists its title and lists its code.
fof(f1, axiom, (
! [A] : ((book(A))
=> (? [B,C,D,E,F] : ((database(B)) &
((relation(C,of,A)) &
((title(C)) &
((predicate2(D,list,B,C)) &
((relation(E,of,C)) &
((code(E)) &
(predicate2(F,list,B,E)))))))))))).
000998 For every book a database lists the title of the book and lists the code of the book.
fof(f1, axiom, (
! [A] : ((book(A))
=> (? [B,C,D,E,F] : ((database(C)) &
((code(E)) &
((title(B)) &
((relation(B,of,A)) &
((relation(E,of,A)) &
((predicate2(F,list,C,B)) &
(predicate2(D,list,C,E)))))))))))).
000999 There is a man such that he waits and the dog of who sleeps.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001000 There is no dog that bites every man.
fof(f1, axiom, (
~(? [A] : ((dog(A)) &
(! [B] : ((man(B))
=> (? [C] : (predicate2(C,bite,A,B))))))))).
001001 For every book the book has a title and the book has a code.
fof(f1, axiom, (
! [A] : ((book(A))
=> (? [B,C,D,E] : ((code(C)) &
((title(D)) &
((predicate2(B,have,A,D)) &
(predicate2(E,have,A,C))))))))).
001002 Not for every book the book has a title and the book has a code.
fof(f1, axiom, (
~(! [A] : ((book(A))
=> (? [B,C,D,E] : ((code(C)) &
((title(D)) &
((predicate2(B,have,A,D)) &
(predicate2(E,have,A,C)))))))))).
001003 It is not the case that for every book the book has a title and the book has a code.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001004 It is not the case that if there is a book then the book has a title and the book has a code.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001005 A ball is blue.
fof(f1, axiom, (
? [A,B] : ((A=B) &
((property1(B,blue,pos)) &
(ball(A)))))).
001006 There is a man. If there is the man then a dog barks.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001007 A man's every dog barks.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001008 There is a man such that every dog of the man barks.
fof(f1, axiom, (
? [A] : ((! [B] : (((dog(B)) &
(relation(B,of,A)))
=> (? [C] : (predicate1(C,bark,B))))) &
(man(A))))).
001009 Every dog of a man barks.
fof(f1, axiom, (
! [A,B] : (((man(A)) &
((dog(B)) &
(relation(B,of,A))))
=> (? [C] : (predicate1(C,bark,B)))))).
001010 For every man every dog of him barks.
fof(f1, axiom, (
! [A] : ((man(A))
=> (! [B] : (((dog(B)) &
(relation(B,of,A)))
=> (? [C] : (predicate1(C,bark,B)))))))).
001011 Every dog of every man barks.
fof(f1, axiom, (
! [A] : (((dog(A)) &
(! [B] : ((man(B))
=> (relation(A,of,B)))))
=> (? [C] : (predicate1(C,bark,A)))))).
001012 For every dog of every man the dog barks.
fof(f1, axiom, (
! [A] : (((dog(A)) &
(! [B] : ((man(B))
=> (relation(A,of,B)))))
=> (? [C] : (predicate1(C,bark,A)))))).
001013 There is a dog of every man.
fof(f1, axiom, (
? [A] : ((! [B] : ((man(B))
=> (relation(A,of,B)))) &
(dog(A))))).
001014 John is a friend of Mary.
fof(f1, axiom, (
? [A] : (('John'=A) &
((relation(A,of,'Mary')) &
(friend(A)))))).
001015 For every customer John assigns a personal code to the customer.
fof(f1, axiom, (
! [A] : ((customer(A))
=> (? [B,C] : ((code(B)) &
((property1(B,personal,pos)) &
(predicate3(C,assign,'John',B,A)))))))).
001016 John blahblah.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001017 A man waits only.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001018 A man v:waits_waits.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,waits_waits,B)) &
(man(B))))).
001019 A card of a man which is valid is green.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001020 Not each dog barks.
fof(f1, axiom, (
~(! [A] : ((dog(A))
=> (? [B] : (predicate1(B,bark,A))))))).
001021 Not all laundry waits.
fof(f1, axiom, (
~(! [A] : ((object(A,laundry,mass,na,na,na))
=> (? [B] : (predicate1(B,wait,A))))))).
001022 Not for each man a dog barks.
fof(f1, axiom, (
~(! [A] : ((man(A))
=> (? [B,C] : ((dog(B)) &
(predicate1(C,bark,B)))))))).
001023 Not for each of some men a dog barks.
fof(f1, axiom, (
~(? [A] : ((object(A,man,countable,na,geq,2)) &
(! [B] : ((has_part(A,B))
=> (? [C,D] : ((dog(C)) &
(predicate1(D,bark,C)))))))))).
001024 For all laundry a dog barks.
fof(f1, axiom, (
! [A] : ((object(A,laundry,mass,na,na,na))
=> (? [B,C] : ((dog(B)) &
(predicate1(C,bark,B))))))).
001025 Not for all laundry a dog barks.
fof(f1, axiom, (
~(! [A] : ((object(A,laundry,mass,na,na,na))
=> (? [B,C] : ((dog(B)) &
(predicate1(C,bark,B)))))))).
001026 A dog sees each of some men.
fof(f1, axiom, (
? [A,B] : ((! [C] : ((has_part(A,C))
=> (? [D] : (predicate2(D,see,B,C))))) &
((object(A,man,countable,na,geq,2)) &
(dog(B)))))).
001027 A man sees no dog.
fof(f1, axiom, (
? [A] : ((! [B] : ((dog(B))
=> (~(? [C] : (predicate2(C,see,A,B)))))) &
(man(A))))).
001028 A man sees not every dog.
fof(f1, axiom, (
? [A] : ((~(! [B] : ((dog(B))
=> (? [C] : (predicate2(C,see,A,B)))))) &
(man(A))))).
001029 There is a n:man who waits.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001030 A man waits in every bank.
fof(f1, axiom, (
? [A] : ((! [B] : ((bank(B))
=> (? [C] : ((predicate1(C,wait,A)) &
(modifier_pp(C,in,B)))))) &
(man(A))))).
001031 There is a dog that barks.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,bark,B)) &
(dog(B))))).
001032 A doctor waits. She is tired. He is happy.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001033 A doctor waits. He is happy.She is tired.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001034 who waits? what waits?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,who)
001035 A service is quick usually.
fof(f1, axiom, (
? [A,B] : ((modifier_adv(C,usually,pos)) &
((A=B) &
((property1(B,quick,pos)) &
(service(A))))))).
001036 There is a dog "".
ERROR	DRS is empty	apply_converter/2	drs([],[])
001037 Which code is there?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,which)
001038 A man sees himself who eats.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001039 A card of who is valid?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,who)
001040 A code of a card of who is valid?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,who)
001041 A card of somebody is valid. A card of who is valid?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,who)
001042 A screen of what blinks?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,what)
001043 A doctor sees her/his own dog.
fof(f1, axiom, (
? [A,B,C] : ((predicate2(A,see,B,C)) &
((dog(C)) &
((relation(C,of,B)) &
(doctor(B))))))).
001044 John is richer than Mary and smarter than Bill.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001045 John is interested-in Mary and fond-of Bill.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001046 A customer is manually.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001047 A customer is.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001048 There is a man who sees a dog that sees a cat.
fof(f1, axiom, (
? [A,B,C,D,E] : ((predicate2(A,see,B,C)) &
((predicate2(D,see,C,E)) &
((dog(C)) &
((cat(E)) &
(man(B)))))))).
001049 There is a man who sees a dog that sees a cat. The man who sees a dog that sees a cat waits.
fof(f1, axiom, (
? [A,B,C,D,E,F] : ((predicate1(A,wait,B)) &
((predicate2(C,see,B,D)) &
((predicate2(E,see,D,F)) &
((dog(D)) &
((cat(F)) &
(man(B))))))))).
001050 There is a man who sees every dog that sees a cat.
fof(f1, axiom, (
? [A] : ((! [B,C,D] : (((cat(B)) &
((dog(C)) &
(predicate2(D,see,C,B))))
=> (? [E] : (predicate2(E,see,A,C))))) &
(man(A))))).
001051 There is a man who sees every dog that sees a cat. The man who sees every dog that sees a cat waits.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,wait,B)) &
((! [C,D,E] : (((cat(C)) &
((dog(D)) &
(predicate2(E,see,D,C))))
=> (? [F] : (predicate2(F,see,B,D))))) &
(man(B)))))).
001052 There is a man who sees every dog. The man who sees every dog waits.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,wait,B)) &
((! [C] : ((dog(C))
=> (? [D] : (predicate2(D,see,B,C))))) &
(man(B)))))).
001053 There is a n:man that waits.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,wait,B)) &
(man(B))))).
001054 John is rich and richer than Mary.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001055 John is interested and interested-in Mary.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001056 There are 2 signs "Go!" and "Stop!".
ERROR	DRS is empty	apply_converter/2	drs([],[])
001057 There are 1000000000000000000000000000000 men.
fof(f1, axiom, (
? [A] : (object(A,man,countable,na,eq,1000000000000000000000000000000)))).
001058 A man waits in a bank which likes itself.
fof(f1, axiom, (
? [A,B,C,D] : ((modifier_pp(A,in,B)) &
((predicate1(A,wait,C)) &
((man(C)) &
((predicate2(D,like,B,B)) &
(bank(B)))))))).
001059 There is a card such that a clerk enters a card of every customer.
fof(f1, axiom, (
? [A,B,C] : ((predicate2(A,enter,B,C)) &
((! [D] : ((customer(D))
=> (relation(C,of,D)))) &
((card(C)) &
(clerk(B))))))).

fof(f2, axiom, (
? [A] : (card(A)))).
001060 A man waits or takes John's rook. If John moves his own queen then there is a dog.
fof(f1, axiom, (
? [A] : ((? [B] : ((predicate1(B,wait,A))
| (? [C,D] : ((rook(C)) &
((predicate2(D,take,A,C)) &
(relation(C,of,'John'))))))) &
(man(A))))).

fof(f2, axiom, (
! [A,B] : (((queen(A)) &
((relation(A,of,'John')) &
(predicate2(B,move,'John',A))))
=> (? [C] : (dog(C)))))).
001061 John takes a queen Mary.
fof(f1, axiom, (
? [A,B] : ((predicate3(A,take,'John','Mary',B)) &
(queen(B))))).
001062 If an element is a member of a tail of a list then the element is a member of the list.
fof(f1, axiom, (
! [A,B,C,D] : (((element(A)) &
((member(B)) &
((tail(C)) &
((list(D)) &
((relation(C,of,D)) &
((relation(B,of,C)) &
(A=B)))))))
=> (? [E] : ((member(E)) &
((relation(E,of,D)) &
(A=E))))))).
001063 Every dog barks or a cat sleeps.
fof(f1, axiom, (
(! [A] : ((dog(A))
=> (? [B] : (predicate1(B,bark,A)))))
| (? [C,D] : ((cat(C)) &
(predicate1(D,sleep,C)))))).
001064 if there is a dog A then the dog A barks, or a cat D sleeps .
fof(f1, axiom, (
! [A] : ((dog(A))
=> (? [B] : ((predicate1(B,bark,A))
| (? [C,D] : ((cat(C)) &
(predicate1(D,sleep,C))))))))).
001065 It is not the case that there is a man and that there is a dog or that there is a cat.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001066 It is not the case that there is a man and that there is a dog or there is a cat.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001067 It is not the case that there is a man ,and that there is a dog or there is a cat.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001068 It is not the case that there is a man ,and there is a dog or there is a cat.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001069 There is a man who sees no dog. The man who sees no dog waits.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,wait,B)) &
((! [C] : ((dog(C))
=> (~(? [D] : (predicate2(D,see,B,C)))))) &
(man(B)))))).
001070 There is a man who sees a dog or who sees a cat. The man who sees a dog or who sees a cat waits.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,wait,B)) &
((? [C,D] : (((dog(C)) &
(predicate2(D,see,B,C)))
| (? [E,F] : ((cat(E)) &
(predicate2(F,see,B,E)))))) &
(man(B)))))).
001071 John likes a dog and a cat.
fof(f1, axiom, (
? [A,B,C,D] : ((has_part(A,B)) &
((has_part(A,C)) &
((predicate2(D,like,'John',A)) &
((object(A,na,countable,na,eq,2)) &
((dog(C)) &
(cat(B))))))))).
001072 John likes a dog ,and a cat.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001073 There is no man who has a dog and who likes it.
fof(f1, axiom, (
~(? [A,B,C,D] : ((dog(A)) &
((man(B)) &
((predicate2(C,have,B,A)) &
(predicate2(D,like,B,A)))))))).
001074 There is no man and he walks.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001075 There is no man such that he walks.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001076 There is no man who walks.
fof(f1, axiom, (
~(? [A,B] : ((man(A)) &
(predicate1(B,walk,A)))))).
001077 Every man likes himself.
fof(f1, axiom, (
! [A] : ((man(A))
=> (? [B] : (predicate2(B,like,A,A)))))).
001078 There is a man who walks and who talks. The man who talks eats.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate1(A,eat,B)) &
((predicate1(C,talk,B)) &
((predicate1(D,walk,B)) &
(man(B))))))).
001079 There is a man who walks or who talks. The man who talks eats.
fof(f1, axiom, (
? [A] : ((? [B] : ((predicate1(B,walk,A))
| (? [C] : (predicate1(C,talk,A))))) &
(man(A))))).

fof(f2, axiom, (
? [A,B,C] : ((predicate1(A,eat,B)) &
((predicate1(C,talk,B)) &
(man(B)))))).
001080 There is a man who walks or who talks. The man who walks or who talks eats.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,eat,B)) &
((? [C] : ((predicate1(C,walk,B))
| (? [D] : (predicate1(D,talk,B))))) &
(man(B)))))).
001081 There is a man who walks and who talks. The man who walks and who talks eats.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate1(A,eat,B)) &
((predicate1(C,talk,B)) &
((predicate1(D,walk,B)) &
(man(B))))))).
001082 There is a man who walks and who talks. The man who talks and who walks eats.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate1(A,eat,B)) &
((predicate1(C,talk,B)) &
((predicate1(D,walk,B)) &
(man(B))))))).
001083 There is a man who walks or who talks. The man who talks or who walks eats.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,eat,B)) &
((? [C] : ((predicate1(C,walk,B))
| (? [D] : (predicate1(D,talk,B))))) &
(man(B)))))).
001084 John likes a dog ,and a cat and a rat and a mouse see a cheese.
fof(f1, axiom, (
? [A,B,C,D,E,F] : ((object(A,na,countable,na,eq,3)) &
((has_part(A,B)) &
((has_part(A,C)) &
((has_part(A,D)) &
((predicate2(E,see,A,F)) &
((cheese(F)) &
((cat(D)) &
((rat(C)) &
(mouse(B)))))))))))).

fof(f2, axiom, (
? [A,B] : ((predicate2(A,like,'John',B)) &
(dog(B))))).
001085 John likes a dog and a cat ,and a rat and a mouse see a cheese.
fof(f1, axiom, (
? [A,B,C,D,E] : ((object(A,na,countable,na,eq,2)) &
((has_part(A,B)) &
((has_part(A,C)) &
((predicate2(D,see,A,E)) &
((cheese(E)) &
((rat(C)) &
(mouse(B)))))))))).

fof(f2, axiom, (
? [A,B,C,D] : ((object(A,na,countable,na,eq,2)) &
((has_part(A,B)) &
((has_part(A,C)) &
((predicate2(D,like,'John',A)) &
((dog(C)) &
(cat(B))))))))).
001086 There is a man who waits silently and patiently. The man who waits silently eats.
fof(f1, axiom, (
? [A,B,C] : ((predicate1(A,eat,B)) &
((modifier_adv(C,silently,pos)) &
((modifier_adv(C,patiently,pos)) &
((predicate1(C,wait,B)) &
(man(B)))))))).
001087 There is a man who every dog sees. The man who every dog sees eats.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,eat,B)) &
((! [C] : ((dog(C))
=> (? [D] : (predicate2(D,see,C,B))))) &
(man(B)))))).
001088 There is a man who is rich and famous. The man who is rich eats.
fof(f1, axiom, (
? [A,B,C] : ((predicate1(A,eat,B)) &
((B=C) &
((property1(C,famous,pos)) &
((property1(C,rich,pos)) &
(man(B)))))))).
001089 There is a man who is rich and famous. The man who is famous and rich eats.
fof(f1, axiom, (
? [A,B,C] : ((predicate1(A,eat,B)) &
((B=C) &
((property1(C,famous,pos)) &
((property1(C,rich,pos)) &
(man(B)))))))).
001090 A man who waits walks and eats.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate1(A,eat,B)) &
((predicate1(C,walk,B)) &
((predicate1(D,wait,B)) &
(man(B))))))).
001091 A man who waits walks and eats and sleeps.
fof(f1, axiom, (
? [A,B,C,D,E] : ((predicate1(A,sleep,B)) &
((predicate1(C,eat,B)) &
((predicate1(D,walk,B)) &
((predicate1(E,wait,B)) &
(man(B)))))))).
001092 There is a man who walks or who talks or who sleeps. The man who talks or who walks or who sleeps eats.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,eat,B)) &
((? [C] : ((predicate1(C,walk,B))
| (? [D] : ((predicate1(D,talk,B))
| (? [E] : (predicate1(E,sleep,B))))))) &
(man(B)))))).
001093 There is a man who walks or who talks ,and who sleeps. The man who talks or who walks ,and who sleeps eats.
fof(f1, axiom, (
? [A,B,C] : ((predicate1(A,eat,B)) &
((predicate1(C,sleep,B)) &
((? [D] : ((predicate1(D,walk,B))
| (? [E] : (predicate1(E,talk,B))))) &
(man(B))))))).
001094 John serves a meal to a customer.
fof(f1, axiom, (
? [A,B,C] : ((predicate3(A,serve,'John',B,C)) &
((customer(C)) &
(meal(B)))))).
001095 John serves a customer a meal.
fof(f1, axiom, (
? [A,B,C] : ((predicate3(A,serve,'John',B,C)) &
((meal(B)) &
(customer(C)))))).
001096 There is a man. Every dog sees him and hears him.
fof(f1, axiom, (
? [A] : ((! [B] : ((dog(B))
=> (? [C,D] : ((predicate2(C,see,B,A)) &
(predicate2(D,hear,B,A)))))) &
(man(A))))).
001097 A man who sees a dog and who walks.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001098 There is a man who does not see every dog that he sees. The man who sees a dog and who does not see the dog waits.
fof(f1, axiom, (
? [A] : ((~(! [B,C] : (((dog(B)) &
(predicate2(C,see,A,B)))
=> (? [D] : (predicate2(D,see,A,B)))))) &
(man(A))))).

fof(f2, axiom, (
? [A,B,C,D] : ((man(A)) &
((dog(B)) &
((predicate2(C,see,A,B)) &
((~(? [E,F] : ((predicate2(F,see,A,E)) &
(dog(E))))) &
(predicate1(D,wait,A)))))))).
001099 There is a man who sees a dog and who the dog does not see.
fof(f1, axiom, (
? [A,B,C] : ((~(? [D] : (predicate2(D,see,C,B)))) &
((predicate2(A,see,B,C)) &
((man(B)) &
(dog(C))))))).
001100 The man looks-at the men, and they v:look-back-at him.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate2(A,'look-back-at',B,C)) &
((object(B,man,countable,na,geq,2)) &
((man(C)) &
(predicate2(D,'look-at',C,B))))))).
001101 It is not the case that John likes a dog ,and that a cat and a rat and a mouse see a cheese ,or that a man waits.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001102 There is a ball of a girl which is blue. There is a ball which is red. John sees the ball which is blue. Mary sees the girl's ball.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001103 Every airline buys 2 aircraft.
fof(f1, axiom, (
! [A] : ((airline(A))
=> (? [B,C] : ((object(B,aircraft,countable,na,eq,2)) &
(predicate2(C,buy,A,B))))))).
001104 Something is green.
fof(f1, axiom, (
? [A,B] : ((A=B) &
((property1(B,green,pos)) &
($true))))).
001105 There is a man. There is a dog. If there is he then there is it.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001106 A man sees a boy and every girl.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001107 A man sees every boy and a girl.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001108 A man sees everybody and a dog.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001109 A man sees a dog and everybody.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001110 A man sees his own dog and his own cat.
fof(f1, axiom, (
? [A,B,C,D,E] : ((has_part(A,B)) &
((has_part(A,C)) &
((relation(B,of,D)) &
((predicate2(E,see,D,A)) &
((relation(C,of,D)) &
((dog(C)) &
((man(D)) &
((object(A,na,countable,na,eq,2)) &
(cat(B)))))))))))).
001111 There is somebody such that he eats.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,eat,B)) &
($true)))).
001112 There is a man such that he eats.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,eat,B)) &
(man(B))))).
001113 There is everybody such that he eats.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001114 A man sees somebody and a dog.
fof(f1, axiom, (
? [A,B,C,D,E] : ((has_part(A,B)) &
((has_part(A,C)) &
((predicate2(D,see,E,A)) &
((man(E)) &
((object(A,na,countable,na,eq,2)) &
(($true) &
(dog(B)))))))))).
001115 A man sees a dog and the cat.
fof(f1, axiom, (
? [A,B,C,D,E] : ((has_part(A,B)) &
((has_part(A,C)) &
((predicate2(D,see,E,A)) &
((man(E)) &
((object(A,na,countable,na,eq,2)) &
((dog(C)) &
(cat(B)))))))))).
001116 A man sees a dog and somebody.
fof(f1, axiom, (
? [A,B,C,D,E] : ((has_part(A,B)) &
((has_part(A,C)) &
((predicate2(D,see,E,A)) &
((man(E)) &
((object(A,na,countable,na,eq,2)) &
((dog(C)) &
($true))))))))).
001117 There is a dog. There is a man who sees the dog.
fof(f1, axiom, (
? [A,B,C] : ((predicate2(A,see,B,C)) &
((dog(C)) &
(man(B)))))).
001118 A man dances.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,dance,B)) &
(man(B))))).
001119 There is a man or there is a dog that sees him or there is a cat that sees itself and him.
fof(f1, axiom, (
? [A] : ((man(A))
| (? [B,C] : (((dog(B)) &
(predicate2(C,see,B,A)))
| (? [D,E,F] : ((cat(D)) &
((predicate2(E,see,D,F)) &
((has_part(F,D)) &
((has_part(F,A)) &
(object(F,na,countable,na,eq,2)))))))))))).
001120 There is a man or there is a dog that sees him or there is a cat that sees it and him.
fof(f1, axiom, (
? [A] : ((man(A))
| (? [B,C] : (((dog(B)) &
(predicate2(C,see,B,A)))
| (? [D,E,F] : ((cat(D)) &
((has_part(F,B)) &
((predicate2(E,see,D,F)) &
((has_part(F,A)) &
(object(F,na,countable,na,eq,2)))))))))))).
001121 A man sees a dog and the dog.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001122 No man and a dog wait.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001123 A man and no dog wait.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001124 It is not the case that John runs. John walks.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001125 A customer enters a card. If it is not valid then SM rejects the card.
fof(f1, axiom, (
? [A,B,C] : (((~(? [D] : ((property1(D,valid,pos)) &
(C=D))))
=> (? [E] : (predicate2(E,reject,'SimpleMat',C)))) &
((predicate2(A,enter,B,C)) &
((customer(B)) &
(card(C))))))).
001126 Somebody is big and small and waits.
fof(f1, axiom, (
? [A,B,C] : ((predicate1(A,wait,B)) &
((B=C) &
((property1(C,small,pos)) &
((property1(C,big,pos)) &
($true))))))).
001127 Somebody is big and eats and waits.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate1(A,wait,B)) &
((predicate1(C,eat,B)) &
((B=D) &
((property1(D,big,pos)) &
($true))))))).
001128 Every man sees John. He waits.
fof(f1, axiom, (
! [A] : ((man(A))
=> (? [B] : (predicate2(B,see,A,'John')))))).

fof(f2, axiom, (
? [A] : (predicate1(A,wait,'John')))).
001129 John runs or he eats. He waits.
fof(f1, axiom, (
? [A] : ((predicate1(A,run,'John'))
| (? [B] : (predicate1(B,eat,'John')))))).

fof(f2, axiom, (
? [A] : (predicate1(A,wait,'John')))).
001130 Not every man sees John. John waits.
fof(f1, axiom, (
~(! [A] : ((man(A))
=> (? [B] : (predicate2(B,see,A,'John'))))))).

fof(f2, axiom, (
? [A] : (predicate1(A,wait,'John')))).
001131 Not every man sees John. He waits.
fof(f1, axiom, (
~(! [A] : ((man(A))
=> (? [B] : (predicate2(B,see,A,'John'))))))).

fof(f2, axiom, (
? [A] : (predicate1(A,wait,'John')))).
001132 It is not the case that John walks. He runs.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001133 5 rich men wait.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,wait,B)) &
((property1(B,rich,pos)) &
(object(B,man,countable,na,eq,5)))))).
001134 John walks. It is not the case that John runs.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001135 Each of 2 girls lifts herself.
fof(f1, axiom, (
? [A] : ((! [B] : ((has_part(A,B))
=> (? [C] : (predicate2(C,lift,B,B))))) &
(object(A,girl,countable,na,eq,2))))).
001136 Each of 2 girls lifts itself.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001137 John inserts his own card. Bill inserts his own card.
fof(f1, axiom, (
? [A,B] : ((predicate2(A,insert,'John',B)) &
((card(B)) &
(relation(B,of,'John')))))).

fof(f2, axiom, (
? [A,B] : ((predicate2(A,insert,'Bill',B)) &
((card(B)) &
(relation(B,of,'Bill')))))).
001138 If there is John then there is Mary.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001139 If there are a dog and a cat then a man waits.
fof(f1, axiom, (
! [A,B,C] : (((object(C,na,countable,na,eq,2)) &
((cat(B)) &
((dog(A)) &
((has_part(C,A)) &
(has_part(C,B))))))
=> (? [D,E] : ((man(D)) &
(predicate1(E,wait,D))))))).
001140 There is a man who he sees.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001141 John is taller than Mary.
fof(f1, axiom, (
? [A] : (('John'=A) &
(property2(A,tall,comp_than,'Mary'))))).
001142 A man has 2 kg of green apples.
fof(f1, axiom, (
? [A,B,C] : ((predicate2(A,have,B,C)) &
((property1(C,green,pos)) &
((object(C,apple,countable,kg,eq,2)) &
(man(B))))))).
001143 A man has 2 kg of dirty water.
fof(f1, axiom, (
? [A,B,C] : ((predicate2(A,have,B,C)) &
((property1(C,dirty,pos)) &
((object(C,water,mass,kg,eq,2)) &
(man(B))))))).
001144 It is not the case that there are 2 kg of dirty laundry.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001145 There are more than 2 kg of laundry.
fof(f1, axiom, (
? [A] : (object(A,laundry,mass,kg,greater,2)))).
001146 Less than 2 women wait.
ERROR	DRS condition not supported: [|]	tptp/4	[predicate(_,wait,A)-1,object(A,woman,countable,na,less,2)-1]
001147 Each of some men sees every dog.
fof(f1, axiom, (
? [A] : ((! [B] : ((has_part(A,B))
=> (! [C] : ((dog(C))
=> (? [D] : (predicate2(D,see,B,C))))))) &
(object(A,man,countable,na,geq,2))))).
001148 For each of some men he likes every dog.
fof(f1, axiom, (
? [A] : ((! [B] : ((has_part(A,B))
=> (! [C] : ((dog(C))
=> (? [D] : (predicate2(D,like,B,C))))))) &
(object(A,man,countable,na,geq,2))))).
001149 For each of some men the man likes every dog.
fof(f1, axiom, (
? [A] : ((! [B] : ((has_part(A,B))
=> (? [C] : ((! [D] : ((dog(D))
=> (? [E] : (predicate2(E,like,C,D))))) &
(man(C)))))) &
(object(A,man,countable,na,geq,2))))).
001150 Each of 2 girls lifts herself and sees a dog.
fof(f1, axiom, (
? [A] : ((! [B] : ((has_part(A,B))
=> (? [C,D,E] : ((dog(C)) &
((predicate2(D,lift,B,B)) &
(predicate2(E,see,B,C))))))) &
(object(A,girl,countable,na,eq,2))))).
001151 It is not the case that there are 1 men.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001152 It is not the case that there is a man or there is a dog.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001153 It is not the case that there is a man or that there is a dog.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001154 There is a man "A" who runs. There is a man "A" who walks. The man "A" who runs is happy.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001155 A man "A" waits. A man "A" sleeps.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001156 There is a man. His dog eats. There is a woman. Her dog drinks.
fof(f1, axiom, (
? [A,B,C] : ((predicate1(A,eat,B)) &
((dog(B)) &
((relation(B,of,C)) &
(man(C))))))).

fof(f2, axiom, (
? [A,B,C] : ((predicate1(A,drink,B)) &
((dog(B)) &
((relation(B,of,C)) &
(woman(C))))))).
001157 The man whose dog eats waits.
fof(f1, axiom, (
? [A,B,C,D] : ((relation(A,of,B)) &
((predicate1(C,eat,A)) &
((dog(A)) &
((predicate1(D,wait,B)) &
(man(B)))))))).
001158 There is a man whose dog waits.
fof(f1, axiom, (
? [A,B,C] : ((predicate1(A,wait,B)) &
((relation(B,of,C)) &
((man(C)) &
(dog(B))))))).
001159 A girl sees every man whose dog waits.
fof(f1, axiom, (
? [A] : ((! [B,C,D] : (((dog(C)) &
((man(D)) &
((relation(C,of,D)) &
(predicate1(B,wait,C)))))
=> (? [E] : (predicate2(E,see,A,D))))) &
(girl(A))))).
001160 A dog of who waits?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,who)
001161 Whose dog waits?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,what)
001162 A girl whose mouse smiles sees a dog.
fof(f1, axiom, (
? [A,B,C,D,E] : ((predicate2(A,see,B,C)) &
((predicate1(D,smile,E)) &
((relation(E,of,B)) &
((girl(B)) &
((mouse(E)) &
(dog(C))))))))).
001163 A girl whose cat whose mouse smiles eats sees a dog.
fof(f1, axiom, (
? [A,B,C,D,E,F,G] : ((predicate2(A,see,B,C)) &
((relation(D,of,E)) &
((predicate1(F,smile,D)) &
((mouse(D)) &
((predicate1(G,eat,E)) &
((relation(E,of,B)) &
((girl(B)) &
((cat(E)) &
(dog(C)))))))))))).
001164 A girl whose cat a mouse of who smiles eats waits.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001165 A man waits in every bank in every morning.
fof(f1, axiom, (
? [A] : ((! [B] : ((bank(B))
=> (! [C] : ((morning(C))
=> (? [D] : ((predicate1(D,wait,A)) &
((modifier_pp(D,in,C)) &
(modifier_pp(D,in,B))))))))) &
(man(A))))).
001166 Every man waits in every bank in every morning.
fof(f1, axiom, (
! [A] : ((man(A))
=> (! [B] : ((bank(B))
=> (! [C] : ((morning(C))
=> (? [D] : ((predicate1(D,wait,A)) &
((modifier_pp(D,in,C)) &
(modifier_pp(D,in,B)))))))))))).
001167 Each of some men a dog of who barks waits.
fof(f1, axiom, (
? [A,B,C] : ((! [D] : ((has_part(C,D))
=> (? [E] : (predicate1(E,wait,D))))) &
((predicate1(A,bark,B)) &
((relation(B,of,C)) &
((dog(B)) &
(object(C,man,countable,na,geq,2)))))))).
001168 Each of some men whose dog barks waits.
fof(f1, axiom, (
? [A,B,C] : ((! [D] : ((has_part(C,D))
=> (? [E] : (predicate1(E,wait,D))))) &
((predicate1(A,bark,B)) &
((relation(B,of,C)) &
((dog(B)) &
(object(C,man,countable,na,geq,2)))))))).
001169 There are some men each of who waits.
fof(f1, axiom, (
? [A] : ((! [B] : ((has_part(A,B))
=> (? [C] : (predicate1(C,wait,B))))) &
(object(A,man,countable,na,geq,2))))).
001170 There are some men who wait.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,wait,B)) &
(object(B,man,countable,na,geq,2))))).
001171 There are some men a dog of who barks.
fof(f1, axiom, (
? [A,B,C] : ((predicate1(A,bark,B)) &
((relation(B,of,C)) &
((dog(B)) &
(object(C,man,countable,na,geq,2))))))).
001172 There are some men whose dog barks.
fof(f1, axiom, (
? [A,B,C] : ((predicate1(A,bark,B)) &
((relation(B,of,C)) &
((dog(B)) &
(object(C,man,countable,na,geq,2))))))).
001173 There are some men each of whose dog barks.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001174 There are some men each of a dog of who barks.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001175 There are some men a dog of each of who barks.
fof(f1, axiom, (
? [A,B,C] : ((predicate1(A,bark,B)) &
((! [D] : ((has_part(C,D))
=> (relation(B,of,D)))) &
((dog(B)) &
(object(C,man,countable,na,geq,2))))))).
001176 A man's dog barks. He is happy.
fof(f1, axiom, (
? [A,B,C,D] : ((A=B) &
((property1(B,happy,pos)) &
((predicate1(C,bark,D)) &
((dog(D)) &
((relation(D,of,A)) &
(man(A))))))))).
001177 'A man waits. It is happy.'
ERROR	DRS is empty	apply_converter/2	drs([],[])
001178 A man waits. It is happy.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001179 p:Kaarel's dog barks.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,bark,B)) &
((dog(B)) &
(relation(B,of,'Kaarel')))))).
001180 There are 3 men. Each of them wait.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001181 There are 3 men. Each of the men wait.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001182 Each of 3 men sees each of 2 dogs.
fof(f1, axiom, (
? [A] : ((object(A,man,countable,na,eq,3)) &
(! [B] : ((has_part(A,B))
=> (? [C] : ((! [D] : ((has_part(C,D))
=> (? [E] : (predicate2(E,see,B,D))))) &
(object(C,dog,countable,na,eq,2))))))))).
001183 Everybody who is a person and who is a female is a woman.
fof(f1, axiom, (
! [A,B,C] : ((($true) &
((female(A)) &
((person(B)) &
((C=B) &
(C=A)))))
=> (? [D] : ((woman(D)) &
(C=D)))))).
001184 Each of some girls lifts her own table.
fof(f1, axiom, (
? [A] : ((! [B] : ((has_part(A,B))
=> (? [C,D] : ((table(C)) &
((relation(C,of,B)) &
(predicate2(D,lift,B,C))))))) &
(object(A,girl,countable,na,geq,2))))).
001185 Everybody who likes Mary she loves.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001186 Every man likes more than 2 dogs and likes less than 4 dogs.
ERROR	DRS condition not supported: [|]	tptp/4	[predicate(_,like,_,A)-1,object(A,dog,countable,na,less,4)-1]
001187 If there is a man then he is not a woman or is not a dog.
fof(f1, axiom, (
! [A] : ((man(A))
=> ((~(? [B] : ((woman(B)) &
(A=B))))
| (~(? [C] : ((dog(C)) &
(A=C)))))))).
001188 If there is no man then he waits.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001189 At least 1 man waits.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,wait,B)) &
(object(B,man,countable,na,geq,1))))).
001190 At most 1 man waits.
ERROR	DRS condition not supported: [|]	tptp/4	[predicate(_,wait,A)-1,object(A,man,countable,na,leq,1)-1]
001191 More than 1 man waits.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,wait,B)) &
(object(B,man,countable,na,greater,1))))).
001192 Less than 1 man waits.
ERROR	DRS condition not supported: [|]	tptp/4	[predicate(_,wait,A)-1,object(A,man,countable,na,less,1)-1]
001193 There are 3 kg of apples. Each of the apples is red.
fof(f1, axiom, (
? [A] : ((! [B] : ((has_part(A,B))
=> (? [C] : ((property1(C,red,pos)) &
(B=C))))) &
(object(A,apple,countable,kg,eq,3))))).
001194 John likes Mary's sister who is not John.
fof(f1, axiom, (
? [A,B] : ((predicate2(A,like,'John',B)) &
((~(B='John')) &
((sister(B)) &
(relation(B,of,'Mary'))))))).
001195 There is Mary's sister. Mary is richer than her own sister.
fof(f1, axiom, (
? [A] : ((sister(A)) &
(relation(A,of,'Mary'))))).

fof(f2, axiom, (
? [A,B] : (('Mary'=A) &
((property2(A,rich,comp_than,B)) &
((sister(B)) &
(relation(B,of,'Mary'))))))).
001196 10 kg of laundry is on the table.
fof(f1, axiom, (
? [A,B,C] : ((table(A)) &
((modifier_pp(B,on,A)) &
((predicate1(B,be,C)) &
(object(C,laundry,mass,kg,eq,10))))))).
001197 10 kg of laundry are on the table.
fof(f1, axiom, (
? [A,B,C] : ((table(A)) &
((modifier_pp(B,on,A)) &
((predicate1(B,be,C)) &
(object(C,laundry,mass,kg,eq,10))))))).
001198 Every man who feeds a dog waits. Every man feeds a dog and waits.
fof(f1, axiom, (
! [A,B,C] : (((man(A)) &
((dog(B)) &
(predicate2(C,feed,A,B))))
=> (? [D] : (predicate1(D,wait,A)))))).

fof(f2, axiom, (
! [A] : ((man(A))
=> (? [B,C,D] : ((dog(B)) &
((predicate2(C,feed,A,B)) &
(predicate1(D,wait,A)))))))).
001199 Every man does not feed a dog and wait.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001200 Everybody sees at most 1 things.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001201 Everybody sees 1 things.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001202 A man is not no dog.
fof(f1, axiom, (
? [A] : ((~(! [B] : ((dog(B))
=> (~(A=B))))) &
(man(A))))).
001203 Everybody sees at least 1 man.
fof(f1, axiom, (
! [A] : (($true)
=> (? [B,C] : ((object(B,man,countable,na,geq,1)) &
(predicate2(C,see,A,B))))))).
001204 A man comes in a day A1. A boy reads in the day A2 that follows A1. The book is red in the day that follows A2.
fof(f1, axiom, (
? [A,B,C,D,E,F,G,H,I,J,K] : ((day(A)) &
((predicate2(B,follow,A,C)) &
((book(D)) &
((modifier_pp(L,in,A)) &
((D=E) &
((property1(E,red,pos)) &
((day(C)) &
((predicate2(F,follow,C,G)) &
((modifier_pp(H,in,C)) &
((predicate1(H,read,I)) &
((boy(I)) &
((modifier_pp(J,in,G)) &
((predicate1(J,come,K)) &
((man(K)) &
(day(G)))))))))))))))))).
001205 John's 2 kg of apples wait.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001206 2 kg of apples of John wait.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,wait,B)) &
((relation(B,of,'John')) &
(object(B,apple,countable,kg,eq,2)))))).
001207 If there is a carnivore then everybody that it eats is an animal.
fof(f1, axiom, (
! [A] : ((carnivore(A))
=> (! [B,C] : ((($true) &
(predicate2(B,eat,A,C)))
=> (? [D] : ((animal(D)) &
(C=D)))))))).
001208 If there is a carnivore then everything that it eats is a meat.
fof(f1, axiom, (
! [A] : ((carnivore(A))
=> (! [B,C] : (((predicate2(B,eat,A,C)) &
($true))
=> (? [D] : ((meat(D)) &
(C=D)))))))).
001209 If there is a thing that does not eat something that is not a meat then the thing is a carnivore.
fof(f1, axiom, (
! [A] : (((thing(A)) &
(~(? [B,C] : (($true) &
((predicate2(C,eat,A,B)) &
(~(? [D] : ((meat(D)) &
(B=D)))))))))
=> (? [E] : ((carnivore(E)) &
(A=E)))))).
001210 Everything is a cat and everything is a dog.
fof(f1, axiom, (
! [A] : (($true)
=> (? [B] : ((dog(B)) &
(A=B)))))).

fof(f2, axiom, (
! [A] : (($true)
=> (? [B] : ((cat(B)) &
(A=B)))))).
001211 There is a cat and everything is a dog.
fof(f1, axiom, (
! [A] : (($true)
=> (? [B] : ((dog(B)) &
(A=B)))))).

fof(f2, axiom, (
? [A] : (cat(A)))).
001212 If there is a thing and everything that it eats is a meat then it is a carnivore.
fof(f1, axiom, (
! [A] : (((thing(A)) &
(! [B,C] : (((predicate2(B,eat,A,C)) &
($true))
=> (? [D] : ((meat(D)) &
(C=D))))))
=> (? [E] : ((carnivore(E)) &
(A=E)))))).
001213 2 men wait.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,wait,B)) &
(object(B,man,countable,na,eq,2))))).
001214 There are less than 2 kg of milk. There are less than 2 men.
ERROR	DRS condition not supported: [|]	tptp/4	[object(_,milk,mass,kg,less,2)-1]
001215 There are 1 kg of water and 2 kg of apples.
fof(f1, axiom, (
? [A,B,C] : ((object(A,na,countable,na,eq,2)) &
((has_part(A,B)) &
((object(B,apple,countable,kg,eq,2)) &
((has_part(A,C)) &
(water(C)))))))).
001216 There is a man A who sees A. There is a man who sees John. John watches the man who sees him. John watches the man who sees A.
fof(f1, axiom, (
? [A,B,C] : ((predicate2(A,watch,'John',B)) &
((predicate2(C,see,B,B)) &
(man(B)))))).

fof(f2, axiom, (
? [A,B,C] : ((predicate2(A,watch,'John',B)) &
((predicate2(C,see,B,'John')) &
(man(B)))))).
001217 There is a man who owns a dog. There is a man who owns a cat. John sees the man who owns the dog.
fof(f1, axiom, (
? [A,B,C,D] : ((man(A)) &
((dog(B)) &
((predicate2(C,own,A,B)) &
(predicate2(D,see,'John',A))))))).

fof(f2, axiom, (
? [A,B,C] : ((man(A)) &
((cat(B)) &
(predicate2(C,own,A,B)))))).
001218 Everybody sees John and Mary.
fof(f1, axiom, (
! [A] : (($true)
=> (? [B,C] : ((object(C,na,countable,na,eq,2)) &
((predicate2(B,see,A,C)) &
((has_part(C,'John')) &
(has_part(C,'Mary'))))))))).
001219 For all clean laundry a dog barks.
fof(f1, axiom, (
! [A] : (((object(A,laundry,mass,na,na,na)) &
(property1(A,clean,pos)))
=> (? [B,C] : ((dog(B)) &
(predicate1(C,bark,B))))))).
001220 John enters every card which is his card.
fof(f1, axiom, (
! [A,B] : (((card(A)) &
((relation(B,of,'John')) &
((card(B)) &
(A=B))))
=> (? [C] : (predicate2(C,enter,'John',A)))))).
001221 John enters every card which carries his code.
fof(f1, axiom, (
! [A,B,C] : (((card(A)) &
((relation(B,of,'John')) &
((code(B)) &
(predicate2(C,carry,A,B)))))
=> (? [D] : (predicate2(D,enter,'John',A)))))).
001222 John enters every card which carries its code.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001223 John enters every card which carries its own code.
fof(f1, axiom, (
! [A,B,C] : (((card(A)) &
((relation(C,of,A)) &
((predicate2(B,carry,A,C)) &
(code(C)))))
=> (? [D] : (predicate2(D,enter,'John',A)))))).
001224 John enters every card which carries his own code.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001225 John enters every card which is its card.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001226 John enters every card which is its own card.
fof(f1, axiom, (
! [A,B] : (((card(A)) &
((relation(B,of,A)) &
((card(B)) &
(A=B))))
=> (? [C] : (predicate2(C,enter,'John',A)))))).
001227 John vaguely sees a big dog that barks in the garden of its own brother.
fof(f1, axiom, (
? [A,B,C,D,E] : ((dog(A)) &
((property1(A,big,pos)) &
((predicate1(B,bark,A)) &
((modifier_pp(B,in,C)) &
((relation(C,of,D)) &
((brother(D)) &
((relation(D,of,A)) &
((predicate2(E,see,'John',A)) &
((modifier_adv(E,vaguely,pos)) &
(garden(C))))))))))))).
001228 There is a carnivore "<".
ERROR	DRS is empty	apply_converter/2	drs([],[])
001229 There is a carnivore "&".
ERROR	DRS is empty	apply_converter/2	drs([],[])
001230 If there is a man such that he waits then he is happy.
fof(f1, axiom, (
! [A,B] : (((man(A)) &
(predicate1(B,wait,A)))
=> (? [C] : ((property1(C,happy,pos)) &
(A=C)))))).
001231 If there is an animal such that everything that the animal eats is a meat then the animal is a carnivore.
fof(f1, axiom, (
! [A] : (((animal(A)) &
(! [B,C] : (((predicate2(B,eat,A,C)) &
($true))
=> (? [D] : ((meat(D)) &
(C=D))))))
=> (? [E] : ((carnivore(E)) &
(A=E)))))).
001232 There is a cat such that everything is a dog.
fof(f1, axiom, (
! [A] : (($true)
=> (? [B] : ((dog(B)) &
(A=B)))))).

fof(f2, axiom, (
? [A] : (cat(A)))).
001233 John feeds his own dogs.
fof(f1, axiom, (
? [A,B] : ((object(A,dog,countable,na,geq,2)) &
((predicate2(B,feed,'John',A)) &
(relation(A,of,'John')))))).
001234 There is a bank. A code is not in the bank.
fof(f1, axiom, (
? [A,B] : ((~(? [C] : ((predicate1(C,be,A)) &
(modifier_pp(C,in,B))))) &
((code(A)) &
(bank(B)))))).
001235 If there is a man then a dog of the man waits.
fof(f1, axiom, (
! [A] : ((man(A))
=> (? [B,C] : ((dog(B)) &
((relation(B,of,A)) &
(predicate1(C,wait,B)))))))).
001236 There is a girl's ball which is blue.
fof(f1, axiom, (
? [A,B,C] : ((A=B) &
((property1(B,blue,pos)) &
((ball(A)) &
((relation(A,of,C)) &
(girl(C)))))))).
001237 John sees a girl's ball which is blue.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate2(A,see,'John',B)) &
((B=C) &
((property1(C,blue,pos)) &
((ball(B)) &
((relation(B,of,D)) &
(girl(D))))))))).
001238 There is a ball of a girl. Mary sees the girl's ball.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate2(A,see,'Mary',B)) &
((ball(B)) &
((relation(B,of,C)) &
((relation(D,of,C)) &
((girl(C)) &
(ball(D))))))))).
001239 There is a man who sees John and Mary. The man who sees John and Mary waits.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate1(A,wait,B)) &
((object(C,na,countable,na,eq,2)) &
((has_part(C,'Mary')) &
((has_part(C,'John')) &
((predicate2(D,see,B,C)) &
(man(B))))))))).
001240 There is a man who sees John and Mary. The man who sees Mary and John waits.
fof(f1, axiom, (
? [A,B,C,D] : ((man(A)) &
((predicate2(B,see,A,C)) &
((has_part(C,'John')) &
((has_part(C,'Mary')) &
((object(C,na,countable,na,eq,2)) &
(predicate1(D,wait,A))))))))).
001241 There is a man who sees John and Mary. The man who sees Mary and Bill waits.
fof(f1, axiom, (
? [A,B,C] : ((object(A,na,countable,na,eq,2)) &
((man(B)) &
((predicate2(C,see,B,A)) &
((has_part(A,'Mary')) &
(has_part(A,'John')))))))).

fof(f2, axiom, (
? [A,B,C,D] : ((object(A,na,countable,na,eq,2)) &
((man(B)) &
((predicate2(C,see,B,A)) &
((predicate1(D,wait,B)) &
((has_part(A,'Bill')) &
(has_part(A,'Mary'))))))))).
001243 There is a company that John awaits a delivery from.
fof(f1, axiom, (
? [A,B,C] : ((modifier_pp(A,from,B)) &
((predicate2(A,await,'John',C)) &
((delivery(C)) &
(company(B))))))).
001244 There is a company from which John awaits a delivery.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001245 John's dog barks. John's dog barks.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,bark,B)) &
((dog(B)) &
(relation(B,of,'John')))))).

fof(f2, axiom, (
? [A,B] : ((predicate1(A,bark,B)) &
((dog(B)) &
(relation(B,of,'John')))))).
001246 It is possible that a man waits.
ERROR	DRS condition not supported: can	tptp/4	can(drs([A,B],[object(A,man,countable,na,eq,1)-1/6,predicate(B,wait,A)-1/7]))
001247 It is necessary that a man waits.
ERROR	DRS condition not supported: must	tptp/4	must(drs([A,B],[object(A,man,countable,na,eq,1)-1/6,predicate(B,wait,A)-1/7]))
001248 It is possible that a man waits and that a dog barks.
ERROR	DRS condition not supported: can	tptp/4	can(drs([A,B,C,D],[object(A,man,countable,na,eq,1)-1/6,predicate(B,wait,A)-1/7,object(C,dog,countable,na,eq,1)-1/11,predicate(D,bark,C)-1/12]))
001249 It is necessary that a man waits and that a dog barks.
ERROR	DRS condition not supported: must	tptp/4	must(drs([A,B,C,D],[object(A,man,countable,na,eq,1)-1/6,predicate(B,wait,A)-1/7,object(C,dog,countable,na,eq,1)-1/11,predicate(D,bark,C)-1/12]))
001250 It is necessary that a man waits and a dog barks.
ERROR	DRS condition not supported: must	tptp/4	must(drs([A,B],[object(A,man,countable,na,eq,1)-1/6,predicate(B,wait,A)-1/7]))
001251 It is possible that a man waits and a dog barks.
ERROR	DRS condition not supported: can	tptp/4	can(drs([A,B],[object(A,man,countable,na,eq,1)-1/6,predicate(B,wait,A)-1/7]))
001252 If a man eats then necessarily he does not sleep.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001253 A man "A" waits. The man sleeps.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001254 A man "A" waits. The man "A" sleeps.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001255 There are 3 men. Each of them waits.
fof(f1, axiom, (
? [A] : ((object(A,man,countable,na,eq,3)) &
(! [B] : ((has_part(A,B))
=> (? [C] : (predicate1(C,wait,B)))))))).
001256 There are 3 men. Each of the men waits.
fof(f1, axiom, (
? [A] : ((object(A,man,countable,na,eq,3)) &
(! [B] : ((has_part(A,B))
=> (? [C] : (predicate1(C,wait,B)))))))).
001257 There are a man's dog and cat.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001258 There is a man. There is the man's dog.
fof(f1, axiom, (
? [A,B] : ((relation(A,of,B)) &
((dog(A)) &
(man(B)))))).
001259 There is Mary's sister.
fof(f1, axiom, (
? [A] : ((relation(A,of,'Mary')) &
(sister(A))))).
001260 There are the man and the dog.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001261 There are a man and the dog.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001262 There is John or there is Mary.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001263 It is necessary that there is John.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001264 There is a man. There is a card of him.
fof(f1, axiom, (
? [A,B] : ((relation(A,of,B)) &
((card(A)) &
(man(B)))))).
001265 A customer and a clerk's contract is green.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001266 A contract of a customer and a clerk is green.
fof(f1, axiom, (
? [A,B,C,D,E] : ((A=B) &
((property1(B,green,pos)) &
((object(C,na,countable,na,eq,2)) &
((has_part(C,D)) &
((has_part(C,E)) &
((relation(A,of,C)) &
((contract(A)) &
((customer(E)) &
(clerk(D)))))))))))).
001267 A contract of a customer and a clerk are green.
fof(f1, axiom, (
? [A,B,C,D,E] : ((object(A,na,countable,na,eq,2)) &
((has_part(A,B)) &
((has_part(A,C)) &
((A=D) &
((property1(D,green,pos)) &
((relation(C,of,E)) &
((customer(E)) &
((contract(C)) &
(clerk(B)))))))))))).
001268 Some contracts of a customer and a clerk are green.
fof(f1, axiom, (
? [A,B,C,D,E] : ((A=B) &
((property1(B,green,pos)) &
((object(C,na,countable,na,eq,2)) &
((has_part(C,D)) &
((clerk(D)) &
((relation(A,of,C)) &
((has_part(C,E)) &
((customer(E)) &
(object(A,contract,countable,na,geq,2)))))))))))).
001269 Is there the card?
ERROR	DRS is empty	apply_converter/2	drs([],[])
001270 There is a man. There is a man. There is the man's dog.
fof(f1, axiom, (
? [A] : (man(A)))).

fof(f2, axiom, (
? [A,B] : ((relation(A,of,B)) &
((dog(A)) &
(man(B)))))).
001271 There are a man's dogs.
fof(f1, axiom, (
? [A,B] : ((object(A,dog,countable,na,geq,2)) &
((relation(A,of,B)) &
(man(B)))))).
001272 John and Mary's dog barks.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001273 There are the man and a dog.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001274 There is John's dog. The dog barks.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,bark,B)) &
((relation(B,of,'John')) &
(dog(B)))))).
001275 There is a man. There is his dog that barks.
fof(f1, axiom, (
? [A,B,C] : ((dog(A)) &
((predicate1(B,bark,A)) &
((relation(A,of,C)) &
(man(C))))))).
001276 There is the man and the man's dog.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001277 There is a man and the man's dog.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001278 There are a man and the man's dog.
fof(f1, axiom, (
? [A,B,C] : ((object(A,na,countable,na,eq,2)) &
((has_part(A,B)) &
((has_part(A,C)) &
((dog(B)) &
((relation(B,of,C)) &
(man(C))))))))).
001279 A man can wait.
ERROR	DRS condition not supported: can	tptp/4	can(drs([A],[predicate(A,wait,_)-1/4]))
001280 A man must wait.
ERROR	DRS condition not supported: must	tptp/4	must(drs([A],[predicate(A,wait,_)-1/4]))
001281 Can a man wait?
ERROR	DRS condition not supported: can	tptp/4	can(drs([A],[predicate(A,wait,_)-1/4]))
001282 Must a man wait?
ERROR	DRS condition not supported: must	tptp/4	must(drs([A],[predicate(A,wait,_)-1/4]))
001283 Everybody can see something.
ERROR	DRS condition not supported: can	tptp/4	can(drs([A,B],[object(A,something,dom,na,na,na)-1/6,predicate(B,see,_,A)-1/4]))
001284 If there is somebody then it is possible that he/she sees something.
ERROR	DRS condition not supported: can	tptp/4	can(drs([A,B],[object(A,something,dom,na,na,na)-1/16,predicate(B,see,_,A)-1/14]))
001285 It is possible that a man can wait.
ERROR	DRS condition not supported: can	tptp/4	can(drs([A],[object(A,man,countable,na,eq,1)-1/6,can(drs([B],[predicate(B,wait,A)-1/8]))]))
001286 Some laundry can wait.
ERROR	DRS condition not supported: can	tptp/4	can(drs([A],[predicate(A,wait,_)-1/4]))
001287 Some men can wait.
ERROR	DRS condition not supported: can	tptp/4	can(drs([A],[predicate(A,wait,_)-1/4]))
001288 Some men can see themselves.
ERROR	DRS condition not supported: can	tptp/4	can(drs([A],[predicate(A,see,B,B)-1/4]))
001289 A man can see a dog in a park.
ERROR	DRS condition not supported: can	tptp/4	can(drs([A,B,C],[object(A,dog,countable,na,eq,1)-1/6,object(B,park,countable,na,eq,1)-1/9,predicate(C,see,_,A)-1/4,modifier_pp(C,in,B)-1/7]))
001290 A man can see a dog that barks.
ERROR	DRS condition not supported: can	tptp/4	can(drs([A,B,C],[object(A,dog,countable,na,eq,1)-1/6,predicate(B,bark,A)-1/8,predicate(C,see,_,A)-1/4]))
001291 A man can see a dog that barks in a park.
ERROR	DRS condition not supported: can	tptp/4	can(drs([A,B,C,D],[object(A,dog,countable,na,eq,1)-1/6,object(B,park,countable,na,eq,1)-1/11,predicate(C,bark,A)-1/8,modifier_pp(C,in,B)-1/9,predicate(D,see,_,A)-1/4]))
001292 John hates a man who can see him.
ERROR	DRS condition not supported: can	tptp/4	can(drs([A],[predicate(A,see,_,named(John))-1/7]))
001293 John hates a man who John can see.
ERROR	DRS condition not supported: can	tptp/4	can(drs([A],[predicate(A,see,named(John),_)-1/8]))
001294 John sees exactly 2 men.
ERROR	DRS condition not supported: [|]	tptp/4	[predicate(_,see,named(John),A)-1,object(A,man,countable,na,exactly,2)-1]
001295 It is impossible that a man waits.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001296 It is not possible that a man waits.
ERROR	DRS condition not supported: can	tptp/4	can(drs([A,B],[object(A,man,countable,na,eq,1)-1/7,predicate(B,wait,A)-1/8]))
001297 Possibly a man waits.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001298 For every thing which knows something it knows it.
fof(f1, axiom, (
! [A,B,C] : (((thing(A)) &
(($true) &
(predicate2(C,know,A,B))))
=> (? [D] : (predicate2(D,know,B,A)))))).
001299 For everything which knows something it knows it.
fof(f1, axiom, (
! [A,B,C] : ((($true) &
(($true) &
(predicate2(C,know,A,B))))
=> (? [D] : (predicate2(D,know,B,A)))))).
001300 Somebody X waits.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,wait,B)) &
($true)))).
001301 Somebody of John waits.
fof(f1, axiom, (
? [A,B] : ((relation(A,of,'John')) &
((predicate1(B,wait,A)) &
($true))))).
001302 Every dog that sees a cat that sees a rat X sees X.
fof(f1, axiom, (
! [A,B,C,D,E] : (((dog(A)) &
((cat(B)) &
((rat(C)) &
((predicate2(D,see,B,C)) &
(predicate2(E,see,A,B))))))
=> (? [F] : (predicate2(F,see,A,C)))))).
001303 Every dog that sees a cat that sees a rat sees the rat.
fof(f1, axiom, (
! [A,B,C,D,E] : (((dog(A)) &
((cat(B)) &
((rat(C)) &
((predicate2(D,see,B,C)) &
(predicate2(E,see,A,B))))))
=> (? [F] : (predicate2(F,see,A,C)))))).
001304 Every dog that sees a cat that sees a rat sees it.
fof(f1, axiom, (
! [A,B,C,D,E] : (((dog(A)) &
((cat(B)) &
((rat(C)) &
((predicate2(D,see,B,C)) &
(predicate2(E,see,A,B))))))
=> (? [F] : (predicate2(F,see,A,C)))))).
001305 Every dog that sees a cat that sees something sees it.
fof(f1, axiom, (
! [A,B,C,D,E] : (((dog(A)) &
((cat(B)) &
(($true) &
((predicate2(D,see,B,C)) &
(predicate2(E,see,A,B))))))
=> (? [F] : (predicate2(F,see,A,C)))))).
001306 Every dog that sees a cat that sees a rat sees itself.
fof(f1, axiom, (
! [A,B,C,D,E] : (((dog(A)) &
((cat(B)) &
((rat(C)) &
((predicate2(D,see,B,C)) &
(predicate2(E,see,A,B))))))
=> (? [F] : (predicate2(F,see,A,A)))))).
001307 If there is somebody A and A loves somebody B then A likes B.
fof(f1, axiom, (
! [A,B,C] : ((($true) &
(($true) &
(predicate2(C,love,A,B))))
=> (? [D] : (predicate2(D,like,A,B)))))).
001308 There is something X.
fof(f1, axiom, (
? [A] : ($true))).
001309 Everybody X waits.
fof(f1, axiom, (
! [A] : (($true)
=> (? [B] : (predicate1(B,wait,A)))))).
001310 Everything X waits.
fof(f1, axiom, (
! [A] : (($true)
=> (? [B] : (predicate1(B,wait,A)))))).
001311 Nobody X waits.
fof(f1, axiom, (
! [A] : (($true)
=> (~(? [B] : (predicate1(B,wait,A))))))).
001312 Nothing X waits.
fof(f1, axiom, (
! [A] : (($true)
=> (~(? [B] : (predicate1(B,wait,A))))))).
001313 Everybody of John waits.
fof(f1, axiom, (
! [A] : (((relation(A,of,'John')) &
($true))
=> (? [B] : (predicate1(B,wait,A)))))).
001314 Everything of John waits.
fof(f1, axiom, (
! [A] : (((relation(A,of,'John')) &
($true))
=> (? [B] : (predicate1(B,wait,A)))))).
001315 Nobody of John waits.
fof(f1, axiom, (
! [A] : (((relation(A,of,'John')) &
($true))
=> (~(? [B] : (predicate1(B,wait,A))))))).
001316 Nothing of John waits.
fof(f1, axiom, (
! [A] : (((relation(A,of,'John')) &
($true))
=> (~(? [B] : (predicate1(B,wait,A))))))).
001317 Everybody X of John waits.
fof(f1, axiom, (
! [A] : (((relation(A,of,'John')) &
($true))
=> (? [B] : (predicate1(B,wait,A)))))).
001318 Everybody X sees X.
fof(f1, axiom, (
! [A] : (($true)
=> (? [B] : (predicate2(B,see,A,A)))))).
001319 Nobody X sees X.
fof(f1, axiom, (
! [A] : (($true)
=> (~(? [B] : (predicate2(B,see,A,A))))))).
001320 If there is somebody A then A sees A.
fof(f1, axiom, (
! [A] : (($true)
=> (? [B] : (predicate2(B,see,A,A)))))).
001321 There is a dog that nobody likes.
fof(f1, axiom, (
? [A] : ((! [B] : (($true)
=> (~(? [C] : (predicate2(C,like,B,A)))))) &
(dog(A))))).
001322 John owns something X of Mary which is expensive.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001323 Everything X of John which is valid contains a description of X.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001324 Nobody X of the group who is a manager has a customer who knows X.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001325 A customer of a man who is rich waits.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate1(A,wait,B)) &
((relation(B,of,C)) &
((C=D) &
((property1(D,rich,pos)) &
((man(C)) &
(customer(B))))))))).
001326 A customer of John who is rich waits.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,wait,B)) &
((relation(B,of,'John')) &
(customer(B)))))).

fof(f2, axiom, (
? [A] : (('John'=A) &
(property1(A,rich,pos))))).
001327 There is a man that sees a dog that sees a cat.
fof(f1, axiom, (
? [A,B,C,D,E] : ((predicate2(A,see,B,C)) &
((predicate2(D,see,C,E)) &
((cat(E)) &
((dog(C)) &
(man(B)))))))).
001328 There is a man that sees a dog that a cat sees.
fof(f1, axiom, (
? [A,B,C,D,E] : ((predicate2(A,see,B,C)) &
((predicate2(D,see,E,C)) &
((cat(E)) &
((dog(C)) &
(man(B)))))))).
001329 There is a man that sees a dog and that sees a cat.
fof(f1, axiom, (
? [A,B,C,D,E] : ((predicate2(A,see,B,C)) &
((cat(C)) &
((predicate2(D,see,B,E)) &
((dog(E)) &
(man(B)))))))).
001330 There is a man that sees a dog and that a cat sees.
fof(f1, axiom, (
? [A,B,C,D,E] : ((predicate2(A,see,B,C)) &
((cat(B)) &
((predicate2(D,see,C,E)) &
((dog(E)) &
(man(C)))))))).
001331 There is a man that sees a cat and that a cat sees.
fof(f1, axiom, (
? [A,B,C,D,E] : ((predicate2(A,see,B,C)) &
((cat(B)) &
((predicate2(D,see,C,E)) &
((cat(E)) &
(man(C)))))))).
001332 There is a man that sees a cat and that the cat sees.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate2(A,see,B,C)) &
((predicate2(D,see,C,B)) &
((cat(B)) &
(man(C))))))).
001333 Everybody who somebody is taller than waits.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001334 No man who a woman sees waits.
fof(f1, axiom, (
! [A,B,C] : (((man(A)) &
((woman(B)) &
(predicate2(C,see,B,A))))
=> (~(? [D] : (predicate1(D,wait,A))))))).
001335 No man a woman sees.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001336 No man a woman is.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001337 Every goal that a referee counts is a point.
fof(f1, axiom, (
! [A,B,C] : (((goal(A)) &
((referee(B)) &
(predicate2(C,count,B,A))))
=> (? [D] : ((point(D)) &
(A=D)))))).
001338 Everybody who lives-at a place that he/she works-at is a home-worker.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001339 Everybody sees John who waits.
fof(f1, axiom, (
! [A] : (($true)
=> (? [B,C] : ((predicate2(B,see,A,'John')) &
(predicate1(C,wait,'John'))))))).
001340 Every man sees John who hears the man.
fof(f1, axiom, (
! [A] : ((man(A))
=> (? [B,C] : ((predicate2(B,see,A,'John')) &
(predicate2(C,hear,'John',A))))))).
001341 If somebody lives-at a place and he/she works-at the place then he/she is a home-worker.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001342 If somebody lives-at a place and works-at the place then he/she is a home-worker.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001343 There is a man who sees some women.
fof(f1, axiom, (
? [A,B,C] : ((predicate2(A,see,B,C)) &
((object(C,woman,countable,na,geq,2)) &
(man(B)))))).
001344 There is a man who some women see.
fof(f1, axiom, (
? [A,B,C] : ((predicate2(A,see,B,C)) &
((object(B,woman,countable,na,geq,2)) &
(man(C)))))).
001345 Every goal is something that at most 1 persons score.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001346 Everybody who lives-at a place that he/she works-at is a n:home-worker.
fof(f1, axiom, (
! [A,B,C,D] : (((place(A)) &
((predicate2(B,'work-at',D,A)) &
((predicate2(C,'live-at',D,A)) &
($true))))
=> (? [E] : (('home-worker'(E)) &
(D=E)))))).
001347 If somebody lives-at a place and he/she works-at the place then he/she is a n:home-worker.
fof(f1, axiom, (
! [A,B,C,D] : ((($true) &
((place(B)) &
((predicate2(C,'live-at',A,B)) &
(predicate2(D,'work-at',A,B)))))
=> (? [E] : (('home-worker'(E)) &
(A=E)))))).
001348 If somebody lives-at a place and works-at the place then he/she is a n:home-worker.
fof(f1, axiom, (
! [A,B,C,D] : ((($true) &
((place(B)) &
((predicate2(C,'live-at',A,B)) &
(predicate2(D,'work-at',A,B)))))
=> (? [E] : (('home-worker'(E)) &
(A=E)))))).
001349 If a thing X likes a thing Y and Y likes a thing Z then X likes Z.
fof(f1, axiom, (
! [A,B,C,D,E] : (((thing(A)) &
((thing(B)) &
((predicate2(C,like,A,B)) &
((thing(D)) &
(predicate2(E,like,B,D))))))
=> (? [F] : (predicate2(F,like,A,D)))))).
001350 If something X likes something Y and Y likes something Z then X likes Z.
fof(f1, axiom, (
! [A,B,C,D,E] : ((($true) &
(($true) &
((predicate2(C,like,A,B)) &
(($true) &
(predicate2(E,like,B,D))))))
=> (? [F] : (predicate2(F,like,A,D)))))).
001351 Everything that v:affiliatedWith something that v:affiliatedWith something v:affiliatedWith it.
fof(f1, axiom, (
! [A,B,C,D,E] : ((($true) &
((predicate2(B,affiliatedWith,E,A)) &
(($true) &
((predicate2(D,affiliatedWith,A,C)) &
($true)))))
=> (? [F] : (predicate2(F,affiliatedWith,E,C)))))).
001352 There is nobody.
fof(f1, axiom, (
~(? [A] : ($true)))).
001353 Every man whose age is an integer is a manager.
fof(f1, axiom, (
! [A,B,C] : (((man(A)) &
((age(B)) &
((relation(B,of,A)) &
((integer(C)) &
(B=C)))))
=> (? [D] : ((manager(D)) &
(A=D)))))).
001354 Every man's age is an integer.
fof(f1, axiom, (
! [A,B] : (((man(A)) &
((relation(B,of,A)) &
(age(B))))
=> (? [C] : ((integer(C)) &
(B=C)))))).
001355 Everybody whose dog barks waits.
fof(f1, axiom, (
! [A,B,C] : (((relation(B,of,C)) &
((predicate1(A,bark,B)) &
((dog(B)) &
($true))))
=> (? [D] : (predicate1(D,wait,C)))))).
001356 Every man's dog is an animal.
fof(f1, axiom, (
! [A,B] : (((man(A)) &
((relation(B,of,A)) &
(dog(B))))
=> (? [C] : ((animal(C)) &
(B=C)))))).
001357 Who who a dog sees waits?
ERROR	DRS is empty	apply_converter/2	drs([],[])
001358 It is not necessary that John waits.
ERROR	DRS condition not supported: must	tptp/4	must(drs([A],[predicate(A,wait,named(John))-1/7]))
001359 It is unnecessary that John waits.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001360 John knows that Mary waits.
ERROR	DRS condition not supported: :	tptp/4	_:drs([A],[predicate(A,wait,named(Mary))-1])
001361 John knows that Mary does not wait.
ERROR	DRS condition not supported: :	tptp/4	_:drs([],[-drs([A],[predicate(A,wait,named(Mary))-1])])
001362 John knows something.
fof(f1, axiom, (
? [A,B] : ((predicate2(A,know,'John',B)) &
($true)))).
001363 John knows that Mary sees him.
ERROR	DRS condition not supported: :	tptp/4	_:drs([A],[predicate(A,see,named(Mary),named(John))-1])
001364 John wisely knows that Mary waits.
ERROR	DRS condition not supported: :	tptp/4	_:drs([A],[predicate(A,wait,named(Mary))-1/6])
001365 John knows wisely that Mary waits.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001366 There is a man that waits and that likes a dog.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate2(A,like,B,C)) &
((dog(C)) &
((predicate1(D,wait,B)) &
(man(B))))))).
001367 John's rich brother waits.
fof(f1, axiom, (
? [A,B] : ((relation(A,of,'John')) &
((brother(A)) &
((property1(A,rich,pos)) &
(predicate1(B,wait,A))))))).
001368 John does not know that Mary sleeps.
ERROR	DRS condition not supported: :	tptp/4	_:drs([A],[predicate(A,sleep,named(Mary))-1])
001369 John sees that a dog barks. It is happy.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001370 Does John see that a dog barks?
ERROR	DRS condition not supported: :	tptp/4	_:drs([A,B],[object(A,dog,countable,na,eq,1)-1/6,predicate(B,bark,A)-1/7])
001371 Can John run?
ERROR	DRS condition not supported: can	tptp/4	can(drs([A],[predicate(A,run,named(John))-1/3]))
001372 Must John run?
ERROR	DRS condition not supported: must	tptp/4	must(drs([A],[predicate(A,run,named(John))-1/3]))
001373 Has to John run?
ERROR	DRS is empty	apply_converter/2	drs([],[])
001374 A man has to wait.
ERROR	DRS condition not supported: must	tptp/4	must(drs([A],[predicate(A,wait,_)-1/5]))
001375 Some men have to wait.
ERROR	DRS condition not supported: must	tptp/4	must(drs([A],[predicate(A,wait,_)-1/5]))
001376 Some men has to wait.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001377 A man have to wait.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001378 A man does not quickly wait.
fof(f1, axiom, (
? [A] : ((~(? [B] : ((predicate1(B,wait,A)) &
(modifier_adv(B,quickly,pos))))) &
(man(A))))).
001379 A man must quickly wait.
ERROR	DRS condition not supported: must	tptp/4	must(drs([A],[modifier_adv(A,quickly,pos)-1/4,predicate(A,wait,_)-1/5]))
001380 A man can't wait.
ERROR	DRS condition not supported: can	tptp/4	can(drs([A],[predicate(A,wait,_)-1/5]))
001381 A man can not wait.
ERROR	DRS condition not supported: can	tptp/4	can(drs([A],[predicate(A,wait,_)-1/5]))
001382 A man cannot wait.
ERROR	DRS condition not supported: can	tptp/4	can(drs([A],[predicate(A,wait,_)-1/5]))
001383 Some men can't wait.
ERROR	DRS condition not supported: can	tptp/4	can(drs([A],[predicate(A,wait,_)-1/5]))
001384 A man does not have to wait.
ERROR	DRS condition not supported: must	tptp/4	must(drs([A],[predicate(A,wait,_)-1/7]))
001385 Some men does not have to wait.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001386 Some men do not have to wait.
ERROR	DRS condition not supported: must	tptp/4	must(drs([A],[predicate(A,wait,_)-1/7]))
001387 John knows that Mary sleeps quickly quickly.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001388 John knows that Mary sleeps and he knows that Bill waits.
ERROR	DRS condition not supported: :	tptp/4	_:drs([A],[predicate(A,wait,named(Bill))-1])
001389 John wants that he flies.
ERROR	DRS condition not supported: :	tptp/4	_:drs([A],[predicate(A,fly,named(John))-1])
001390 John knows quickly that Mary sleeps.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001391 John knows quickly that Mary sleeps quickly.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001392 John quickly knows that Mary sleeps quickly.
ERROR	DRS condition not supported: :	tptp/4	_:drs([A],[predicate(A,sleep,named(Mary))-1/6,modifier_adv(A,quickly,pos)-1/7])
001393 John knows that Mary sleeps quickly.
ERROR	DRS condition not supported: :	tptp/4	_:drs([A],[predicate(A,sleep,named(Mary))-1,modifier_adv(A,quickly,pos)-1])
001394 John tells Mary that he wants to fly.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001395 John belives that Mary has a book.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001396 Every customer believes that John does not wait.
ERROR	DRS condition not supported: :	tptp/4	_:drs([],[-drs([A],[predicate(A,wait,named(John))-1])])
001397 Every customer believes that John waits.
ERROR	DRS condition not supported: :	tptp/4	_:drs([A],[predicate(A,wait,named(John))-1])
001398 It is possible that every customer waits.
ERROR	DRS condition not supported: can	tptp/4	can(drs([],[drs([A],[object(A,customer,countable,na,eq,1)-1/6])=>drs([B],[predicate(B,wait,A)-1/7])]))
001399 Every customer can wait.
ERROR	DRS condition not supported: can	tptp/4	can(drs([A],[predicate(A,wait,_)-1/4]))
001400 Necessarily John waits.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001401 It is necessary that John waits.
ERROR	DRS condition not supported: must	tptp/4	must(drs([A],[predicate(A,wait,named(John))-1/6]))
001402 Possibly John waits.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001403 It is impossible that John waits.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001404 It is not possible that John waits.
ERROR	DRS condition not supported: can	tptp/4	can(drs([A],[predicate(A,wait,named(John))-1/7]))
001405 It is possible that John waits.
ERROR	DRS condition not supported: can	tptp/4	can(drs([A],[predicate(A,wait,named(John))-1/6]))
001406 John does not have to wait.
ERROR	DRS condition not supported: must	tptp/4	must(drs([A],[predicate(A,wait,named(John))-1/6]))
001407 John has to wait.
ERROR	DRS condition not supported: must	tptp/4	must(drs([A],[predicate(A,wait,named(John))-1/4]))
001408 John must not wait.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001409 John must wait.
ERROR	DRS condition not supported: must	tptp/4	must(drs([A],[predicate(A,wait,named(John))-1/3]))
001410 John can't wait.
ERROR	DRS condition not supported: can	tptp/4	can(drs([A],[predicate(A,wait,named(John))-1/4]))
001411 John cannot wait.
ERROR	DRS condition not supported: can	tptp/4	can(drs([A],[predicate(A,wait,named(John))-1/4]))
001412 John can wait.
ERROR	DRS condition not supported: can	tptp/4	can(drs([A],[predicate(A,wait,named(John))-1/3]))
001413 John says that there is a card.
ERROR	DRS condition not supported: :	tptp/4	_:drs([A],[object(A,card,countable,na,eq,1)-1])
001414 John believes that there is a card.
ERROR	DRS condition not supported: :	tptp/4	_:drs([A],[object(A,card,countable,na,eq,1)-1])
001415 John believes that Mary sleeps.
ERROR	DRS condition not supported: :	tptp/4	_:drs([A],[predicate(A,sleep,named(Mary))-1])
001416 It is not provable that John waits.
ERROR	DRS condition not supported: ~	tptp/4	~drs([A],[predicate(A,wait,named(John))-1])
001417 It is not provable that John waits and Mary sleeps.
ERROR	DRS condition not supported: ~	tptp/4	~drs([A],[predicate(A,wait,named(John))-1])
001418 If a customer does not transmit some money and it is not provable that he does not transmit the money then the bank assumes that he transmits the money.
ERROR	DRS condition not supported: ~	tptp/4	~drs([],[-drs([A,B],[predicate(A,transmit,_,B)-1,object(B,money,countable,na,eq,1)-1])])
001419 Which dog of which man sleeps?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,which)
001420 John does not quickly run.
fof(f1, axiom, (
~(? [A] : ((predicate1(A,run,'John')) &
(modifier_adv(A,quickly,pos)))))).
001421 A man does not is seen by a dog.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001422 A man seen by a dog.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001423 A book is written by a man.
fof(f1, axiom, (
? [A,B,C] : ((predicate2(A,write,B,C)) &
((man(B)) &
(book(C)))))).
001424 Some books are written by a man.
fof(f1, axiom, (
? [A,B,C] : ((predicate2(A,write,B,C)) &
((man(B)) &
(object(C,book,countable,na,geq,2)))))).
001425 A book is not written by a man.
fof(f1, axiom, (
? [A] : ((~(? [B,C] : ((man(B)) &
(predicate2(C,write,B,A))))) &
(book(A))))).
001426 Some books are not written by a man.
fof(f1, axiom, (
? [A] : ((~(? [B,C] : ((man(B)) &
(predicate2(C,write,B,A))))) &
(object(A,book,countable,na,geq,2))))).
001427 A book written by a man.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001428 A book is quickly written by a man.
fof(f1, axiom, (
? [A,B,C] : ((modifier_adv(A,quickly,pos)) &
((predicate2(A,write,B,C)) &
((man(B)) &
(book(C))))))).
001429 A book is not quickly written by a man.
fof(f1, axiom, (
? [A] : ((~(? [B,C] : ((man(B)) &
((predicate2(C,write,B,A)) &
(modifier_adv(C,quickly,pos)))))) &
(book(A))))).
001430 Some books are quickly written by a man.
fof(f1, axiom, (
? [A,B,C] : ((modifier_adv(A,quickly,pos)) &
((predicate2(A,write,B,C)) &
((man(B)) &
(object(C,book,countable,na,geq,2))))))).
001431 Some books are not quickly written by a man.
fof(f1, axiom, (
? [A] : ((~(? [B,C] : ((man(B)) &
((predicate2(C,write,B,A)) &
(modifier_adv(C,quickly,pos)))))) &
(object(A,book,countable,na,geq,2))))).
001432 A book written by a man quickly.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001433 A best car wins.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,win,B)) &
((property1(B,good,sup)) &
(car(B)))))).
001434 Does a book written by a man?
ERROR	DRS is empty	apply_converter/2	drs([],[])
001435 John is permitted that a dog barks.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001436 What is written by a man?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,what)
001437 Is a book written by a man?
fof(f1, conjecture, (
? [A,B,C] : ((book(A)) &
((man(B)) &
(predicate2(C,write,B,A)))))).
001438 Is a car blue?
fof(f1, conjecture, (
? [A,B] : ((car(A)) &
((property1(B,blue,pos)) &
(A=B))))).
001439 There is John who Mary is seen by.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001440 Everything that is written by somebody is a book or is a paper.
fof(f1, axiom, (
! [A,B,C] : ((($true) &
((predicate2(B,write,A,C)) &
($true)))
=> (? [D] : (((book(D)) &
(C=D))
| (? [E] : ((paper(E)) &
(C=E)))))))).
001441 John is liked by himself.
fof(f1, axiom, (
? [A] : (predicate2(A,like,'John','John')))).
001442 John is liked by him.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001443 Which card is seen by John?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,which)
001444 Is a code is entered by a customer?
ERROR	DRS is empty	apply_converter/2	drs([],[])
001445 does a code is entered by a customer?
ERROR	DRS is empty	apply_converter/2	drs([],[])
001446 Where does a customer enter a card?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,where)
001447 Where is a card entered by a customer?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,where)
001448 Who does not wait?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,who)
001449 It is not possible that John flies.
ERROR	DRS condition not supported: can	tptp/4	can(drs([A],[predicate(A,fly,named(John))-1/7]))
001450 It is possible that John flies.
ERROR	DRS condition not supported: can	tptp/4	can(drs([A],[predicate(A,fly,named(John))-1/6]))
001451 John can not fly.
ERROR	DRS condition not supported: can	tptp/4	can(drs([A],[predicate(A,fly,named(John))-1/4]))
001452 John can't fly.
ERROR	DRS condition not supported: can	tptp/4	can(drs([A],[predicate(A,fly,named(John))-1/4]))
001453 John cannot fly.
ERROR	DRS condition not supported: can	tptp/4	can(drs([A],[predicate(A,fly,named(John))-1/4]))
001454 John can fly.
ERROR	DRS condition not supported: can	tptp/4	can(drs([A],[predicate(A,fly,named(John))-1/3]))
001455 John believes that he can fly.
ERROR	DRS condition not supported: :	tptp/4	_:drs([],[can(drs([A],[predicate(A,fly,named(John))-1/6]))])
001456 John believes that he must fly.
ERROR	DRS condition not supported: :	tptp/4	_:drs([],[must(drs([A],[predicate(A,fly,named(John))-1/6]))])
001457 John must fly.
ERROR	DRS condition not supported: must	tptp/4	must(drs([A],[predicate(A,fly,named(John))-1/3]))
001458 John has to fly.
ERROR	DRS condition not supported: must	tptp/4	must(drs([A],[predicate(A,fly,named(John))-1/4]))
001459 John does not have to fly.
ERROR	DRS condition not supported: must	tptp/4	must(drs([A],[predicate(A,fly,named(John))-1/6]))
001460 It is necessary that John flies.
ERROR	DRS condition not supported: must	tptp/4	must(drs([A],[predicate(A,fly,named(John))-1/6]))
001461 It is not necessary that John flies.
ERROR	DRS condition not supported: must	tptp/4	must(drs([A],[predicate(A,fly,named(John))-1/7]))
001462 It is unnecessary that John flies.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001463 It is impossible that John flies.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001464 It is not provable that John flies.
ERROR	DRS condition not supported: ~	tptp/4	~drs([A],[predicate(A,fly,named(John))-1])
001465 It is not the case that it is not provable that John flies.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001466 John sees Mary. Mary is seen by John.
fof(f1, axiom, (
? [A] : (predicate2(A,see,'John','Mary')))).

fof(f2, axiom, (
? [A] : (predicate2(A,see,'John','Mary')))).
001467 John does not have to be seen by Mary.
ERROR	DRS condition not supported: must	tptp/4	must(drs([A],[predicate(A,see,named(Mary),named(John))-1/7]))
001468 John has to be seen by Mary.
ERROR	DRS condition not supported: must	tptp/4	must(drs([A],[predicate(A,see,named(Mary),named(John))-1/5]))
001469 John must be seen by Mary.
ERROR	DRS condition not supported: must	tptp/4	must(drs([A],[predicate(A,see,named(Mary),named(John))-1/4]))
001470 John can be seen by Mary.
ERROR	DRS condition not supported: can	tptp/4	can(drs([A],[predicate(A,see,named(Mary),named(John))-1/4]))
001471 John cannot be seen by Mary.
ERROR	DRS condition not supported: can	tptp/4	can(drs([A],[predicate(A,see,named(Mary),named(John))-1/5]))
001472 John can not be seen by Mary.
ERROR	DRS condition not supported: can	tptp/4	can(drs([A],[predicate(A,see,named(Mary),named(John))-1/5]))
001473 John can't be seen by Mary.
ERROR	DRS condition not supported: can	tptp/4	can(drs([A],[predicate(A,see,named(Mary),named(John))-1/5]))
001474 Nobody believes that he does not have to be seen by everybody.
ERROR	DRS condition not supported: :	tptp/4	_:drs([],[-drs([],[must(drs([],[drs([A],[object(A,somebody,countable,na,eq,1)-1/14])=>drs([B],[predicate(B,see,A,_)-1/11])]))])])
001475 Nobody believes that he has to be seen by everybody.
ERROR	DRS condition not supported: :	tptp/4	_:drs([],[must(drs([],[drs([A],[object(A,somebody,countable,na,eq,1)-1/12])=>drs([B],[predicate(B,see,A,_)-1/9])]))])
001476 Nobody believes that he must be seen by everybody.
ERROR	DRS condition not supported: :	tptp/4	_:drs([],[must(drs([],[drs([A],[object(A,somebody,countable,na,eq,1)-1/11])=>drs([B],[predicate(B,see,A,_)-1/8])]))])
001477 Nobody believes that he can be seen by everybody.
ERROR	DRS condition not supported: :	tptp/4	_:drs([],[can(drs([],[drs([A],[object(A,somebody,countable,na,eq,1)-1/11])=>drs([B],[predicate(B,see,A,_)-1/8])]))])
001478 John does wait. John waits.
fof(f1, axiom, (
? [A] : (predicate1(A,wait,'John')))).

fof(f2, axiom, (
? [A] : (predicate1(A,wait,'John')))).
001479 It is possible that a card is valid.
ERROR	DRS condition not supported: can	tptp/4	can(drs([A,B,C],[object(A,card,countable,na,eq,1)-1/6,property(B,valid,pos)-1/8,predicate(C,be,A,B)-1/7]))
001480 There is a dog. It of a man waits.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001481 Everything a dog of which barks waits.
fof(f1, axiom, (
! [A,B,C] : (((dog(A)) &
((relation(A,of,C)) &
((predicate1(B,bark,A)) &
($true))))
=> (? [D] : (predicate1(D,wait,C)))))).
001482 It is not the case that everybody waits.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001483 It is not provable that John waits and that Mary sleeps.
ERROR	DRS condition not supported: ~	tptp/4	~drs([A,B],[predicate(A,wait,named(John))-1,predicate(B,sleep,named(Mary))-1])
001484 It is not provable that John waits or that Mary sleeps.
ERROR	DRS condition not supported: ~	tptp/4	~drs([],[drs([A],[predicate(A,wait,named(John))-1])v drs([B],[predicate(B,sleep,named(Mary))-1])])
001485 It is necessary that John waits or that Mary sleeps.
ERROR	DRS condition not supported: must	tptp/4	must(drs([],[drs([A],[predicate(A,wait,named(John))-1/6])v drs([B],[predicate(B,sleep,named(Mary))-1/10])]))
001486 It is necessary that John waits and that Mary sleeps.
ERROR	DRS condition not supported: must	tptp/4	must(drs([A,B],[predicate(A,wait,named(John))-1/6,predicate(B,sleep,named(Mary))-1/10]))
001487 It is not necessary that John waits and that Mary sleeps.
ERROR	DRS condition not supported: must	tptp/4	must(drs([A,B],[predicate(A,wait,named(John))-1/7,predicate(B,sleep,named(Mary))-1/11]))
001488 It is not the case that it is necessary that John waits and that Mary sleeps.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001489 It is possible that John waits and that Mary sleeps.
ERROR	DRS condition not supported: can	tptp/4	can(drs([A,B],[predicate(A,wait,named(John))-1/6,predicate(B,sleep,named(Mary))-1/10]))
001490 It is possible that John waits and Mary sleeps.
ERROR	DRS condition not supported: can	tptp/4	can(drs([A],[predicate(A,wait,named(John))-1/6]))
001491 It is not possible that John waits and Mary sleeps.
ERROR	DRS condition not supported: can	tptp/4	can(drs([A],[predicate(A,wait,named(John))-1/7]))
001492 A man knows that a dog barks and that a cat eats a cake.
ERROR	DRS condition not supported: :	tptp/4	_:drs([A,B,C,D,E],[object(A,dog,countable,na,eq,1)-1,predicate(B,bark,A)-1,object(C,cat,countable,na,eq,1)-1,object(D,cake,countable,na,eq,1)-1,predicate(E,eat,C,D)-1])
001493 A man knows that a dog barks and a cat eats a cake.
ERROR	DRS condition not supported: :	tptp/4	_:drs([A,B],[object(A,dog,countable,na,eq,1)-1,predicate(B,bark,A)-1])
001494 Not for every man a dog barks.
fof(f1, axiom, (
~(! [A] : ((man(A))
=> (? [B,C] : ((dog(B)) &
(predicate1(C,bark,B)))))))).
001495 Not for every man that a dog barks.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001496 Not somebody waits.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001497 Not every man waits.
fof(f1, axiom, (
~(! [A] : ((man(A))
=> (? [B] : (predicate1(B,wait,A))))))).
001498 A man does not know that a dog barks and that a cat eats a cake.
ERROR	DRS condition not supported: :	tptp/4	_:drs([A,B,C,D,E],[object(A,dog,countable,na,eq,1)-1,predicate(B,bark,A)-1,object(C,cat,countable,na,eq,1)-1,object(D,cake,countable,na,eq,1)-1,predicate(E,eat,C,D)-1])
001499 John believes that Mary sleeps and he waits.
ERROR	DRS condition not supported: :	tptp/4	_:drs([A],[predicate(A,sleep,named(Mary))-1])
001500 John believes that Mary sleeps and waits.
ERROR	DRS condition not supported: :	tptp/4	_:drs([A,B],[predicate(A,sleep,named(Mary))-1,predicate(B,wait,named(Mary))-1])
001501 A man does not know that a dog barks and a cat eats a cake.
ERROR	DRS condition not supported: :	tptp/4	_:drs([A,B],[object(A,dog,countable,na,eq,1)-1,predicate(B,bark,A)-1])
001502 A man can be rich.
ERROR	DRS condition not supported: can	tptp/4	can(drs([A,B],[property(A,rich,pos)-1/5,predicate(B,be,_,A)-1/3]))
001503 A man must be rich.
ERROR	DRS condition not supported: must	tptp/4	must(drs([A,B],[property(A,rich,pos)-1/5,predicate(B,be,_,A)-1/3]))
001504 A man can't be rich.
ERROR	DRS condition not supported: can	tptp/4	can(drs([A,B],[property(A,rich,pos)-1/6,predicate(B,be,_,A)-1/3]))
001505 A man does not have to be rich.
ERROR	DRS condition not supported: must	tptp/4	must(drs([A,B],[property(A,rich,pos)-1/8,predicate(B,be,_,A)-1/3]))
001506 Some men does not have to be rich.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001507 Some men do not have to be rich.
ERROR	DRS condition not supported: must	tptp/4	must(drs([A,B],[property(A,rich,pos)-1/8,predicate(B,be,_,A)-1/3]))
001508 Something "Go!" waits.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001509 Some sand "Go!" waits.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001510 If somebody X is a person and X is a female then X is a woman.
fof(f1, axiom, (
! [A,B,C] : ((($true) &
((person(B)) &
((A=B) &
((female(C)) &
(A=C)))))
=> (? [D] : ((woman(D)) &
(A=D)))))).
001511 Somebody and something wait.
fof(f1, axiom, (
? [A,B,C,D] : ((object(A,na,countable,na,eq,2)) &
((has_part(A,B)) &
((has_part(A,C)) &
((predicate1(D,wait,A)) &
(($true) &
($true)))))))).
001512 Everybody "Go!" of John waits.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001513 A man is a dog and a cat.
fof(f1, axiom, (
? [A,B,C,D] : ((object(A,na,countable,na,eq,2)) &
((has_part(A,B)) &
((cat(B)) &
((C=A) &
((has_part(A,D)) &
((dog(D)) &
(man(C)))))))))).
001514 A man can give a woman an apple.
ERROR	DRS condition not supported: can	tptp/4	can(drs([A,B,C],[object(A,woman,countable,na,eq,1)-1/6,object(B,apple,countable,na,eq,1)-1/8,predicate(C,give,_,B,A)-1/4]))
001515 A man can't give a woman an apple.
ERROR	DRS condition not supported: can	tptp/4	can(drs([A,B,C],[object(A,woman,countable,na,eq,1)-1/7,object(B,apple,countable,na,eq,1)-1/9,predicate(C,give,_,B,A)-1/5]))
001516 There is a man who can eat. The man who can eat drinks.
ERROR	DRS condition not supported: can	tptp/4	can(drs([A],[predicate(A,eat,_)-1/7]))
001517 There is a man who does not have to eat. The man who does not have to eat drinks.
ERROR	DRS condition not supported: must	tptp/4	must(drs([A],[predicate(A,eat,_)-1/10]))
001518 There is a man who knows that a dog barks. The man who knows that a dog barks waits.
ERROR	DRS condition not supported: :	tptp/4	_:drs([A,B],[object(A,dog,countable,na,eq,1)-1,predicate(B,bark,A)-1])
001519 Does a man enter no card manually?
fof(f1, conjecture, (
? [A] : ((man(A)) &
(! [B] : ((card(B))
=> (~(? [C] : ((predicate2(C,enter,A,B)) &
(modifier_adv(C,manually,pos)))))))))).
001520 Does a man enter every card manually?
fof(f1, conjecture, (
? [A] : ((man(A)) &
(! [B] : ((card(B))
=> (? [C] : ((predicate2(C,enter,A,B)) &
(modifier_adv(C,manually,pos))))))))).
001521 Where does a man enter no card?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,where)
001522 Where does a man enter every card?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,where)
001523 A man runs manually and quickly manually and quickly.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001524 A man runs fast.
fof(f1, axiom, (
? [A,B] : ((modifier_adv(A,fast,pos)) &
((predicate1(A,run,B)) &
(man(B)))))).
001525 A man runs in a park.
fof(f1, axiom, (
? [A,B,C] : ((modifier_pp(A,in,B)) &
((predicate1(A,run,C)) &
((man(C)) &
(park(B))))))).
001526 A man runs fast and quickly.
fof(f1, axiom, (
? [A,B] : ((modifier_adv(A,fast,pos)) &
((modifier_adv(A,quickly,pos)) &
((predicate1(A,run,B)) &
(man(B))))))).
001527 A man runs in a park in a morning.
fof(f1, axiom, (
? [A,B,C,D] : ((modifier_pp(A,in,B)) &
((modifier_pp(A,in,C)) &
((predicate1(A,run,D)) &
((man(D)) &
((morning(C)) &
(park(B))))))))).
001528 A man runs fast in a park.
fof(f1, axiom, (
? [A,B,C] : ((modifier_adv(A,fast,pos)) &
((modifier_pp(A,in,B)) &
((predicate1(A,run,C)) &
((man(C)) &
(park(B)))))))).
001529 A man runs fast and quickly and manually.
fof(f1, axiom, (
? [A,B] : ((modifier_adv(A,fast,pos)) &
((modifier_adv(A,quickly,pos)) &
((modifier_adv(A,manually,pos)) &
((predicate1(A,run,B)) &
(man(B)))))))).
001530 A man runs in a park in a morning in a hurry.
fof(f1, axiom, (
? [A,B,C,D,E] : ((modifier_pp(A,in,B)) &
((modifier_pp(A,in,C)) &
((modifier_pp(A,in,D)) &
((predicate1(A,run,E)) &
((man(E)) &
((hurry(D)) &
((morning(C)) &
(park(B))))))))))).
001531 A man runs fast in a morning in a hurry.
fof(f1, axiom, (
? [A,B,C,D] : ((modifier_adv(A,fast,pos)) &
((modifier_pp(A,in,B)) &
((modifier_pp(A,in,C)) &
((predicate1(A,run,D)) &
((man(D)) &
((hurry(C)) &
(morning(B)))))))))).
001532 A man runs in a park fast in a hurry.
fof(f1, axiom, (
? [A,B,C,D] : ((modifier_pp(A,in,B)) &
((modifier_adv(A,fast,pos)) &
((modifier_pp(A,in,C)) &
((predicate1(A,run,D)) &
((man(D)) &
((hurry(C)) &
(park(B)))))))))).
001533 A man runs in a park in a morning fast.
fof(f1, axiom, (
? [A,B,C,D] : ((modifier_pp(A,in,B)) &
((modifier_pp(A,in,C)) &
((modifier_adv(A,fast,pos)) &
((predicate1(A,run,D)) &
((man(D)) &
((morning(C)) &
(park(B)))))))))).
001534 A man runs fast and quickly in a park.
fof(f1, axiom, (
? [A,B,C] : ((modifier_adv(A,fast,pos)) &
((modifier_adv(A,quickly,pos)) &
((modifier_pp(A,in,B)) &
((predicate1(A,run,C)) &
((man(C)) &
(park(B))))))))).
001535 A man runs fast in a park manually.
fof(f1, axiom, (
? [A,B,C] : ((modifier_adv(A,fast,pos)) &
((modifier_pp(A,in,B)) &
((modifier_adv(A,manually,pos)) &
((predicate1(A,run,C)) &
((man(C)) &
(park(B))))))))).
001536 A man runs in a park fast and manually.
fof(f1, axiom, (
? [A,B,C] : ((modifier_adv(A,manually,pos)) &
((modifier_adv(A,fast,pos)) &
((modifier_pp(A,in,B)) &
((predicate1(A,run,C)) &
((man(C)) &
(park(B))))))))).
001537 There is a card of John that is correct.
fof(f1, axiom, (
? [A] : (('John'=A) &
(property1(A,correct,pos))))).

fof(f2, axiom, (
? [A] : ((relation(A,of,'John')) &
(card(A))))).
001538 There is a case of some beer. It is not the case.
fof(f1, axiom, (
? [A,B] : ((~(B=A)) &
((relation(A,of,B)) &
((object(B,beer,mass,na,na,na)) &
(case(A))))))).
001539 It is false that a man waits.
fof(f1, axiom, (
~(? [A,B] : ((man(A)) &
(predicate1(B,wait,A)))))).
001540 It is not true that a man waits.
fof(f1, axiom, (
~(? [A,B] : ((man(A)) &
(predicate1(B,wait,A)))))).
001541 Every man that is not liked by a woman that owns a dog sees a cat.
fof(f1, axiom, (
! [A] : (((man(A)) &
(~(? [B,C,D,E] : ((woman(B)) &
((dog(C)) &
((predicate2(D,own,B,C)) &
(predicate2(E,like,B,A))))))))
=> (? [F,G] : ((cat(F)) &
(predicate2(G,see,A,F))))))).
001542 It is possible that it is false that a dog sees a cat.
ERROR	DRS condition not supported: can	tptp/4	can(drs([],[-drs([A,B,C],[object(A,dog,countable,na,eq,1)-1/10,object(B,cat,countable,na,eq,1)-1/13,predicate(C,see,A,B)-1/11])]))
001543 Every man who must hate a dog can own a cat.
ERROR	DRS condition not supported: must	tptp/4	must(drs([A,B],[object(A,dog,countable,na,eq,1)-1/7,predicate(B,hate,_,A)-1/5]))
001544 If a man must own a dog then the man can own an animal.
ERROR	DRS condition not supported: must	tptp/4	must(drs([A,B],[object(A,dog,countable,na,eq,1)-1/7,predicate(B,own,_,A)-1/5]))
001545 It is false _that_ a man waits.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001546 John knows _that_ Mary sleeps.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001547 John knows proposition P _that_ Mary sleeps.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001548 John knows proposition P _that_ Mary sleeps. P holds.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001549 John knows Proposition P _that_ Mary sleeps.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001550 How does a man sell a visa card?
ERROR	DRS is empty	apply_converter/2	drs([],[])
001551 John knows Proposition P quickly that Mary sleeps.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001552 John knows Proposition P that Mary sleeps.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001553 John wisely knows Proposition P in the morning that Mary sleeps. P holds in the evening.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001554 John sees in the morning _that_ Mary sleeps.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001555 John sees in the morning that Mary sleeps.
fof(f1, axiom, (
? [A,B,C] : ((morning(A)) &
((predicate2(B,sleep,'Mary',A)) &
((modifier_pp(C,in,A)) &
(predicate1(C,see,'John'))))))).
001556 John wisely knows Proposition P in the park _that_ Mary sleeps.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001557 John knows in the park that Mary sleeps.
fof(f1, axiom, (
? [A,B,C] : ((park(A)) &
((predicate2(B,sleep,'Mary',A)) &
((modifier_pp(C,in,A)) &
(predicate1(C,know,'John'))))))).
001558 John wisely knows Proposition P in the park that Mary sleeps.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001559 John is a customer of someone who is important.
fof(f1, axiom, (
? [A,B,C] : (('John'=A) &
((B=C) &
((property1(C,important,pos)) &
((relation(A,of,B)) &
(($true) &
(customer(A))))))))).
001560 Someone is a brother of a man X and X waits.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate1(A,wait,B)) &
((C=D) &
((relation(D,of,B)) &
((man(B)) &
((brother(D)) &
($true)))))))).
001561 A dog is more active than a cat.
fof(f1, axiom, (
? [A,B,C] : ((A=B) &
((property2(B,active,comp_than,C)) &
((cat(C)) &
(dog(A))))))).
001562 A man is more interested-in a cat.
fof(f1, axiom, (
? [A,B,C] : ((A=B) &
((property2(B,'interested-in',comp,C)) &
((cat(C)) &
(man(A))))))).
001563 A man is more interested-in a cat than a dog.
fof(f1, axiom, (
? [A,B,C,D] : ((A=B) &
((property3(B,'interested-in',C,comp_than,subj,D)) &
((dog(D)) &
((cat(C)) &
(man(A)))))))).
001564 A man is more interested-in a cat than in a dog.
fof(f1, axiom, (
? [A,B,C,D] : ((A=B) &
((property3(B,'interested-in',C,comp_than,obj,D)) &
((dog(D)) &
((cat(C)) &
(man(A)))))))).
001565 A car runs more speedily than a bike.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001566 A car runs more speedily.
fof(f1, axiom, (
? [A,B] : ((modifier_adv(A,speedily,comp)) &
((predicate1(A,run,B)) &
(car(B)))))).
001567 A dog is more good than a cat.
fof(f1, axiom, (
? [A,B,C] : ((A=B) &
((property2(B,good,comp_than,C)) &
((cat(C)) &
(dog(A))))))).
001568 A dog is better than a cat.
fof(f1, axiom, (
? [A,B,C] : ((A=B) &
((property2(B,good,comp_than,C)) &
((cat(C)) &
(dog(A))))))).
001569 John is more clever than Bill.
fof(f1, axiom, (
? [A] : (('John'=A) &
(property2(A,clever,comp_than,'Bill'))))).
001570 John is cleverer than Bill.
fof(f1, axiom, (
? [A] : (('John'=A) &
(property2(A,clever,comp_than,'Bill'))))).
001571 It is false.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001572 There is proposition P that a dog barks.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001573 There is P _that_ a dog barks.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001574 There is Proposition P _that_ a dog barks. A man knows P.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001575 Every man who loves a woman who loves the man owns a car.
fof(f1, axiom, (
! [A,B,C,D] : (((man(A)) &
((woman(B)) &
((predicate2(C,love,B,A)) &
(predicate2(D,love,A,B)))))
=> (? [E,F] : ((car(E)) &
(predicate2(F,own,A,E))))))).
001576 Everybody who is not an animal is not a dog.
fof(f1, axiom, (
! [A] : (((~(? [B] : ((animal(B)) &
(A=B)))) &
($true))
=> (~(? [C] : ((dog(C)) &
(A=C))))))).
001577 Everything that is not a cat can be a dog.
ERROR	DRS condition not supported: can	tptp/4	can(drs([A,B],[object(A,dog,countable,na,eq,1)-1/11,predicate(B,be,_,A)-1/8]))
001578 Every man who is not liked by a woman who owns a dog sees a cat.
fof(f1, axiom, (
! [A] : (((man(A)) &
(~(? [B,C,D,E] : ((woman(B)) &
((dog(C)) &
((predicate2(D,own,B,C)) &
(predicate2(E,like,B,A))))))))
=> (? [F,G] : ((cat(F)) &
(predicate2(G,see,A,F))))))).
001579 There is a man X. It is false that there is X.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001580 There is a man X. It is false that there is the man.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001581 There is a man X. It is false that there is a man.
fof(f1, axiom, (
? [A] : (man(A)))).

fof(f2, axiom, (
~(? [A] : (man(A))))).
001582 There is a man X. It is false that there is the man X.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001583 A cat is feared by every mouse.
fof(f1, axiom, (
? [A] : ((! [B] : ((mouse(B))
=> (? [C] : (predicate2(C,fear,B,A))))) &
(cat(A))))).
001584 Every man is not no dog.
fof(f1, axiom, (
! [A] : ((man(A))
=> (~(! [B] : ((dog(B))
=> (~(A=B)))))))).
001585 If there is a man then it is false that he owns a dog that does not bark.
fof(f1, axiom, (
! [A] : ((man(A))
=> (~(? [B,C] : ((dog(B)) &
((~(? [D] : (predicate1(D,bark,B)))) &
(predicate2(C,own,A,B))))))))).
001586 Everybody does not know a dog that likes a cat.
fof(f1, axiom, (
! [A] : (($true)
=> (~(? [B,C,D,E] : ((dog(B)) &
((cat(C)) &
((predicate2(D,like,B,C)) &
(predicate2(E,know,A,B)))))))))).
001587 Everybody who waits does not know a dog that likes a cat.
fof(f1, axiom, (
! [A,B] : (((predicate1(A,wait,B)) &
($true))
=> (~(? [C,D,E,F] : ((dog(C)) &
((cat(D)) &
((predicate2(E,like,C,D)) &
(predicate2(F,know,B,C)))))))))).
001588 Everybody does not know a dog that is liked by a cat.
fof(f1, axiom, (
! [A] : (($true)
=> (~(? [B,C,D,E] : ((dog(B)) &
((cat(C)) &
((predicate2(D,like,C,B)) &
(predicate2(E,know,A,B)))))))))).
001589 Everybody who somebody likes owns a dog.
fof(f1, axiom, (
! [A,B,C] : ((($true) &
((predicate2(B,like,A,C)) &
($true)))
=> (? [D,E] : ((dog(D)) &
(predicate2(E,own,C,D))))))).
001590 Everything that somebody likes is owned by somebody else.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001591 John's age is 30.
fof(f1, axiom, (
? [A] : ((A=30) &
((age(A)) &
(relation(A,of,'John')))))).
001592 A code is 1234.
fof(f1, axiom, (
? [A] : ((A=1234) &
(code(A))))).
001593 A text is "abcdef".
fof(f1, axiom, (
? [A] : ((A=string(abcdef)) &
(text(A))))).
001594 1234 is a code.
fof(f1, axiom, (
? [A] : ((1234=A) &
(code(A))))).
001595 Everybody A sees A who waits.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001596 Everybody whose age is 31 is a grown-up.
fof(f1, axiom, (
! [A,B] : (((age(A)) &
((relation(A,of,B)) &
((A=31) &
($true))))
=> (? [C] : (('grown-up'(C)) &
(B=C)))))).
001597 Everybody whose age is 20 can drink some wine in Paris.
ERROR	DRS condition not supported: can	tptp/4	can(drs([A,B],[object(A,wine,mass,na,na,na)-1/10,predicate(B,drink,_,A)-1/8,modifier_pp(B,in,named(Paris))-1/11]))
001598 If there is a man then a dog barks and bites the man.
fof(f1, axiom, (
! [A] : ((man(A))
=> (? [B,C,D] : ((dog(B)) &
((predicate1(C,bark,B)) &
(predicate2(D,bite,B,A)))))))).
001599 If there is a man then a dog that hates a cat barks and bites the man.
fof(f1, axiom, (
! [A] : ((man(A))
=> (? [B,C,D,E,F] : ((dog(B)) &
((cat(C)) &
((predicate2(D,hate,B,C)) &
((predicate1(E,bark,B)) &
(predicate2(F,bite,B,A)))))))))).
001600 Every man that sleeps can be bitten by a dog that is known by a cat that drinks a milk and that is hated by the dog .
ERROR	DRS condition not supported: can	tptp/4	can(drs([A,B,C,D,E,F,G],[object(A,dog,countable,na,eq,1)-1/10,object(B,cat,countable,na,eq,1)-1/16,object(C,milk,countable,na,eq,1)-1/20,predicate(D,drink,B,C)-1/18,predicate(E,hate,A,B)-1/24,predicate(F,know,B,A)-1/13,predicate(G,bite,A,_)-1/7]))
001601 The book is given by Mary.
fof(f1, axiom, (
? [A,B] : ((book(A)) &
(predicate2(B,give,'Mary',A))))).
001602 The book is given John by Mary.
fof(f1, axiom, (
? [A,B] : ((book(A)) &
(predicate3(B,give,'Mary','John',A))))).
001603 The book is given by Mary to John.
fof(f1, axiom, (
? [A,B] : ((book(A)) &
((modifier_pp(B,to,'John')) &
(predicate2(B,give,'Mary',A)))))).
001604 Every man can be bitten by a dog that hates a cat that likes the man.
ERROR	DRS condition not supported: can	tptp/4	can(drs([A,B,C,D,E],[object(A,dog,countable,na,eq,1)-1/8,object(B,cat,countable,na,eq,1)-1/12,predicate(C,like,B,F)-1/14,predicate(D,hate,A,B)-1/10,predicate(E,bite,A,F)-1/5]))
001605 Every man who waits is not bitten by a dog that hates a cat that likes the man.
fof(f1, axiom, (
! [A,B] : (((man(A)) &
(predicate1(B,wait,A)))
=> (~(? [C,D,E,F,G] : ((dog(C)) &
((cat(D)) &
((predicate2(E,like,D,A)) &
((predicate2(F,hate,C,D)) &
(predicate2(G,bite,C,A))))))))))).
001606 If there are 2 men then they wait.
fof(f1, axiom, (
! [A] : ((object(A,man,countable,na,eq,2))
=> (? [B] : (predicate1(B,wait,A)))))).
001607 It is true that a dog barks.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,bark,B)) &
(dog(B))))).
001608 It is not false that a dog barks.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,bark,B)) &
(dog(B))))).
001609 All water runs.
fof(f1, axiom, (
! [A] : ((object(A,water,mass,na,na,na))
=> (? [B] : (predicate1(B,run,A)))))).
001610 All sand needs some water.
fof(f1, axiom, (
! [A] : ((object(A,sand,mass,na,na,na))
=> (? [B,C] : ((object(B,water,mass,na,na,na)) &
(predicate2(C,need,A,B))))))).
001611 For no man a dog barks.
fof(f1, axiom, (
! [A] : ((man(A))
=> (~(? [B,C] : ((dog(B)) &
(predicate1(C,bark,B)))))))).
001612 No man is liked by a dog.
fof(f1, axiom, (
! [A] : ((man(A))
=> (~(? [B,C] : ((dog(B)) &
(predicate2(C,like,B,A)))))))).
001613 Every man who waits is seen by himself.
fof(f1, axiom, (
! [A,B] : (((man(A)) &
(predicate1(B,wait,A)))
=> (? [C] : (predicate2(C,see,A,A)))))).
001614 Every man likes himself and feeds a cat that sees the man.
fof(f1, axiom, (
! [A] : ((man(A))
=> (? [B,C,D,E] : ((predicate2(B,like,A,A)) &
((cat(C)) &
((predicate2(D,see,C,A)) &
(predicate2(E,feed,A,C))))))))).
001615 Every man feeds a cat that sees the man and likes a dog.
fof(f1, axiom, (
! [A] : ((man(A))
=> (? [B,C,D,E,F] : ((cat(B)) &
((predicate2(C,see,B,A)) &
((predicate2(D,feed,A,B)) &
((dog(E)) &
(predicate2(F,like,A,E)))))))))).
001616 Every man feeds a cat that sees the man and likes himself.
fof(f1, axiom, (
! [A] : ((man(A))
=> (? [B,C,D,E] : ((cat(B)) &
((predicate2(C,see,B,A)) &
((predicate2(D,feed,A,B)) &
(predicate2(E,like,A,A))))))))).
001617 Every man feeds a cat that sees the man and likes the man.
fof(f1, axiom, (
! [A] : ((man(A))
=> (? [B,C,D,E] : ((cat(B)) &
((predicate2(C,see,B,A)) &
((predicate2(D,feed,A,B)) &
(predicate2(E,like,A,A))))))))).
001618 Every man X sees the man that waits.
fof(f1, axiom, (
! [A] : ((man(A))
=> (? [B,C,D] : ((predicate2(B,see,A,C)) &
((predicate1(D,wait,C)) &
(man(C)))))))).
001619 Every man X sees the man X that waits.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001620 Every man X sees X that waits.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001621 If there is a man then the man sees a dog and the dog sees a cat and the cat sees the dog and the dog sees a rat and the rat sees a mouse.
fof(f1, axiom, (
! [A] : ((man(A))
=> (? [B,C,D,E,F,G,H,I,J] : ((dog(B)) &
((predicate2(C,see,A,B)) &
((cat(D)) &
((predicate2(E,see,B,D)) &
((predicate2(F,see,D,B)) &
((rat(G)) &
((predicate2(H,see,B,G)) &
((mouse(I)) &
(predicate2(J,see,G,I)))))))))))))).
001622 Every man sees a dog X that sees a cat that sees X that sees a rat that sees a mouse.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001623 If there is a man then the man sees a rat that sees a mouse and a cat sees the man.
fof(f1, axiom, (
! [A] : ((man(A))
=> (? [B,C,D,E,F,G] : ((rat(B)) &
((mouse(C)) &
((predicate2(D,see,B,C)) &
((predicate2(E,see,A,B)) &
((cat(F)) &
(predicate2(G,see,F,A))))))))))).
001624 Every man sees a cat that sees the man and sees a rat that sees a mouse.
fof(f1, axiom, (
! [A] : ((man(A))
=> (? [B,C,D,E,F,G,H] : ((cat(B)) &
((predicate2(C,see,B,A)) &
((predicate2(D,see,A,B)) &
((rat(E)) &
((mouse(F)) &
((predicate2(G,see,E,F)) &
(predicate2(H,see,A,E)))))))))))).
001625 Nobody knows nothing.
fof(f1, axiom, (
! [A] : (($true)
=> (~(! [B] : (($true)
=> (~(? [C] : (predicate2(C,know,A,B)))))))))).
001626 If there is a man then there is a dog and there is a cat.
fof(f1, axiom, (
! [A] : ((man(A))
=> (? [B,C] : ((dog(B)) &
(cat(C))))))).
001627 If there is a dog then the dog barks and it is false that there is a cat.
fof(f1, axiom, (
! [A] : ((dog(A))
=> (? [B] : ((predicate1(B,bark,A)) &
(~(? [C] : (cat(C))))))))).
001628 Every man likes a dog and hates a cat.
fof(f1, axiom, (
! [A] : ((man(A))
=> (? [B,C,D,E] : ((dog(B)) &
((predicate2(C,like,A,B)) &
((cat(D)) &
(predicate2(E,hate,A,D))))))))).
001629 Every man likes a dog or hates a cat.
fof(f1, axiom, (
! [A] : ((man(A))
=> (? [B,C] : (((dog(B)) &
(predicate2(C,like,A,B)))
| (? [D,E] : ((cat(D)) &
(predicate2(E,hate,A,D))))))))).
001630 Every man does not like a dog or hates a cat.
fof(f1, axiom, (
! [A] : ((man(A))
=> ((~(? [B,C] : ((dog(B)) &
(predicate2(C,like,A,B)))))
| (? [D,E] : ((cat(D)) &
(predicate2(E,hate,A,D)))))))).
001631 Every man likes a dog or does not hate a cat.
fof(f1, axiom, (
! [A] : ((man(A))
=> (? [B,C] : (((dog(B)) &
(predicate2(C,like,A,B)))
| (~(? [D,E] : ((cat(D)) &
(predicate2(E,hate,A,D)))))))))).
001632 Every man does not like a dog or does not hate a cat.
fof(f1, axiom, (
! [A] : ((man(A))
=> ((~(? [B,C] : ((dog(B)) &
(predicate2(C,like,A,B)))))
| (~(? [D,E] : ((cat(D)) &
(predicate2(E,hate,A,D))))))))).
001633 Every man does not like a dog or hate a cat.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001634 There is a man who waits. The man who also sleeps.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001635 Every man who does not like a dog or who hates a cat waits.
fof(f1, axiom, (
! [A] : (((man(A)) &
((~(? [B,C] : ((dog(B)) &
(predicate2(C,like,A,B)))))
| (? [D,E] : ((cat(D)) &
(predicate2(E,hate,A,D))))))
=> (? [F] : (predicate1(F,wait,A)))))).
001636 Every man who eats or who drinks waits.
fof(f1, axiom, (
! [A] : (((man(A)) &
(? [B] : ((predicate1(B,eat,A))
| (? [C] : (predicate1(C,drink,A))))))
=> (? [D] : (predicate1(D,wait,A)))))).
001637 Every man eats or drinks.
fof(f1, axiom, (
! [A] : ((man(A))
=> (? [B] : ((predicate1(B,eat,A))
| (? [C] : (predicate1(C,drink,A)))))))).
001638 Every man does not eat or drinks.
fof(f1, axiom, (
! [A] : ((man(A))
=> ((~(? [B] : (predicate1(B,eat,A))))
| (? [C] : (predicate1(C,drink,A))))))).
001639 Every man eats or does not drink.
fof(f1, axiom, (
! [A] : ((man(A))
=> (? [B] : ((predicate1(B,eat,A))
| (~(? [C] : (predicate1(C,drink,A))))))))).
001640 Every man who eats or who does not drink waits.
fof(f1, axiom, (
! [A] : (((man(A)) &
(? [B] : ((predicate1(B,eat,A))
| (~(? [C] : (predicate1(C,drink,A)))))))
=> (? [D] : (predicate1(D,wait,A)))))).
001641 Every man who does not eat or who drinks waits.
fof(f1, axiom, (
! [A] : (((man(A)) &
((~(? [B] : (predicate1(B,eat,A))))
| (? [C] : (predicate1(C,drink,A)))))
=> (? [D] : (predicate1(D,wait,A)))))).
001642 No man eats or drinks.
fof(f1, axiom, (
! [A] : ((man(A))
=> (~(? [B] : ((predicate1(B,eat,A))
| (? [C] : (predicate1(C,drink,A))))))))).
001643 A man It waits. A woman The sleeps. A child IF walks.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001644 Every man works and eats or sleeps.
fof(f1, axiom, (
! [A] : ((man(A))
=> (? [B,C] : (((predicate1(B,work,A)) &
(predicate1(C,eat,A)))
| (? [D] : (predicate1(D,sleep,A)))))))).
001645 Every man works, and eats or sleeps.
fof(f1, axiom, (
! [A] : ((man(A))
=> (? [B] : ((predicate1(B,work,A)) &
(? [C] : ((predicate1(C,eat,A))
| (? [D] : (predicate1(D,sleep,A)))))))))).
001646 Every man knows a cat that eats or that sleeps.
fof(f1, axiom, (
! [A] : ((man(A))
=> (? [B,C] : ((cat(B)) &
((? [D] : ((predicate1(D,eat,B))
| (? [E] : (predicate1(E,sleep,B))))) &
(predicate2(C,know,A,B)))))))).
001647 2 men X and Y program a n:parser Z the sentences of which nobody understands.
fof(f1, axiom, (
? [A,B,C,D,E,F] : ((object(A,na,countable,na,eq,2)) &
((has_part(A,B)) &
((object(C,sentence,countable,na,geq,2)) &
((relation(C,of,D)) &
((predicate2(E,program,A,D)) &
((parser(D)) &
((has_part(A,F)) &
((object(F,man,countable,na,eq,2)) &
((! [G] : (($true)
=> (~(? [H] : (predicate2(H,understand,G,C)))))) &
($true)))))))))))).
001648 Some men X and Y program a n:parser Z the sentences of which nobody understands.
fof(f1, axiom, (
? [A,B,C,D,E,F] : ((object(A,na,countable,na,eq,2)) &
((has_part(A,B)) &
((object(C,sentence,countable,na,geq,2)) &
((relation(C,of,D)) &
((predicate2(E,program,A,D)) &
((parser(D)) &
((has_part(A,F)) &
((object(F,man,countable,na,geq,2)) &
((! [G] : (($true)
=> (~(? [H] : (predicate2(H,understand,G,C)))))) &
($true)))))))))))).
001649 Every man works or eats or sleeps.
fof(f1, axiom, (
! [A] : ((man(A))
=> (? [B] : ((predicate1(B,work,A))
| (? [C] : ((predicate1(C,eat,A))
| (? [D] : (predicate1(D,sleep,A)))))))))).
001650 Every man works or eats, or sleeps.
fof(f1, axiom, (
! [A] : ((man(A))
=> ((? [B] : ((predicate1(B,work,A))
| (? [C] : (predicate1(C,eat,A)))))
| (? [D] : (predicate1(D,sleep,A))))))).
001651 Every dog X hates a cat that X hates.
fof(f1, axiom, (
! [A] : ((dog(A))
=> (? [B,C,D] : ((cat(B)) &
((predicate2(C,hate,A,B)) &
(predicate2(D,hate,A,B)))))))).
001652 Mary waits. John gives a book to her.
fof(f1, axiom, (
? [A] : (predicate1(A,wait,'Mary')))).

fof(f2, axiom, (
? [A,B] : ((predicate3(A,give,'John',B,'Mary')) &
(book(B))))).
001653 Mary waits. John gives a book to she.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001654 A book is given to Mary by John.
fof(f1, axiom, (
? [A,B] : ((predicate3(A,give,'John',B,'Mary')) &
(book(B))))).
001655 Mary waits. A book is given to her by John.
fof(f1, axiom, (
? [A] : (predicate1(A,wait,'Mary')))).

fof(f2, axiom, (
? [A,B] : ((predicate3(A,give,'John',B,'Mary')) &
(book(B))))).
001656 Mary waits. John waits. A book is given to her by him.
fof(f1, axiom, (
? [A] : (predicate1(A,wait,'Mary')))).

fof(f2, axiom, (
? [A] : (predicate1(A,wait,'John')))).

fof(f3, axiom, (
? [A,B] : ((predicate3(A,give,'John',B,'Mary')) &
(book(B))))).
001657 Mary waits. John waits. What is given to her by him?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,what)
001658 Mary is sent a book by John.
fof(f1, axiom, (
? [A,B] : ((predicate3(A,send,'John',B,'Mary')) &
(book(B))))).
001659 There is a book. Mary is sent it by John.
fof(f1, axiom, (
? [A,B] : ((predicate3(A,send,'John',B,'Mary')) &
(book(B))))).
001660 There is a book. Mary is sent to it by John.
fof(f1, axiom, (
? [A,B] : ((predicate3(A,send,'John','Mary',B)) &
(book(B))))).
001661 Some men are sent a book by John.
fof(f1, axiom, (
? [A,B,C] : ((predicate3(A,send,'John',B,C)) &
((book(B)) &
(object(C,man,countable,na,geq,2)))))).
001662 A book is sent to some men by John.
fof(f1, axiom, (
? [A,B,C] : ((predicate3(A,send,'John',B,C)) &
((object(C,man,countable,na,geq,2)) &
(book(B)))))).
001663 Some books are sent to Mary by John.
fof(f1, axiom, (
? [A,B] : ((predicate3(A,send,'John',B,'Mary')) &
(object(B,book,countable,na,geq,2))))).
001664 Somebody is given something by somebody.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate3(A,give,B,C,D)) &
(($true) &
(($true) &
($true)))))).
001665 Somebody A gives A A.
fof(f1, axiom, (
? [A,B] : ((predicate3(A,give,B,B,B)) &
($true)))).
001666 If an age of somebody X is 31 then X is a grown-up.
fof(f1, axiom, (
! [A,B] : (((age(A)) &
(($true) &
((relation(A,of,B)) &
(A=31))))
=> (? [C] : (('grown-up'(C)) &
(B=C)))))).
001667 A temperature is 0.
fof(f1, axiom, (
? [A] : ((A=0) &
(temperature(A))))).
001668 A temperature is -30.
fof(f1, axiom, (
? [A] : ((A= -30) &
(temperature(A))))).
001669 John has a zip-code which is 12343.
fof(f1, axiom, (
? [A,B] : ((predicate2(A,have,'John',B)) &
((B=12343) &
('zip-code'(B)))))).
001670 John sleeps as-soon-as-possible.
fof(f1, axiom, (
? [A] : ((modifier_adv(A,'as-soon-as-possible',pos)) &
(predicate1(A,sleep,'John'))))).
001671 It is false that John's age is 30.
fof(f1, axiom, (
~(? [A] : ((relation(A,of,'John')) &
((age(A)) &
(A=30)))))).
001672 John's age is not 30.
fof(f1, axiom, (
? [A] : ((~(A=30)) &
((age(A)) &
(relation(A,of,'John')))))).
001673 There is a long zip-code ZC.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001674 There is a long zip-code " 90210 ".
ERROR	DRS is empty	apply_converter/2	drs([],[])
001675 A persona-non-grata enters a zip-code.
fof(f1, axiom, (
? [A,B,C] : ((predicate2(A,enter,B,C)) &
(('zip-code'(C)) &
('persona-non-grata'(B)))))).
001676 The customer enters a card and a numeric personal-code. If it is not valid then SM rejects the card.
fof(f1, axiom, (
? [A,B,C,D,E] : (((~(? [F] : ((property1(F,valid,pos)) &
(C=F))))
=> (? [G] : (predicate2(G,reject,'SimpleMat',D)))) &
((customer(A)) &
((object(B,na,countable,na,eq,2)) &
((has_part(B,C)) &
((has_part(B,D)) &
((predicate2(E,enter,A,B)) &
((card(D)) &
((property1(C,numeric,pos)) &
('personal-code'(C)))))))))))).
001677 The customer enters a card and a numeric personal-code.
fof(f1, axiom, (
? [A,B,C,D,E] : ((customer(A)) &
((object(B,na,countable,na,eq,2)) &
((has_part(B,C)) &
((has_part(B,D)) &
((predicate2(E,enter,A,B)) &
((card(D)) &
((property1(C,numeric,pos)) &
('personal-code'(C))))))))))).
001678 How does a man sell a visa-card?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,how)
001679 Who is there?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,who)
001680 How is there?
ERROR	DRS is empty	apply_converter/2	drs([],[])
001681 It is false that there are John and Mary.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001682 A woman waits. A man is interested-in her.
fof(f1, axiom, (
? [A,B,C,D] : ((A=B) &
((property2(B,'interested-in',pos,C)) &
((predicate1(D,wait,C)) &
((woman(C)) &
(man(A)))))))).
001683 A woman waits. A man is interested-in she.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001684 A woman waits. A man is interested-in the woman.
fof(f1, axiom, (
? [A,B,C,D] : ((A=B) &
((property2(B,'interested-in',pos,C)) &
((predicate1(D,wait,C)) &
((woman(C)) &
(man(A)))))))).
001685 A man is interested-in a woman who waits.
fof(f1, axiom, (
? [A,B,C,D] : ((A=B) &
((property2(B,'interested-in',pos,C)) &
((predicate1(D,wait,C)) &
((woman(C)) &
(man(A)))))))).
001686 A customer is rich and interested-in no money.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001687 A customer is rich and interested-in every money.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001688 Who is John fond-of?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,who)
001689 There is X.
fof(f1, axiom, (
? [A] : ($true))).
001690 Augusts wait.
fof(f1, axiom, (
? [A] : (predicate1(A,wait,'August')))).
001691 John waits. A man brings him his pencil and brings him his own computer.
fof(f1, axiom, (
? [A] : (predicate1(A,wait,'John')))).

fof(f2, axiom, (
? [A,B,C,D,E] : ((man(A)) &
((relation(B,of,'John')) &
((pencil(B)) &
((predicate3(C,bring,A,B,'John')) &
((relation(D,of,A)) &
((computer(D)) &
(predicate3(E,bring,A,D,'John')))))))))).
001692 It is false that there is John.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001693 It is true that there is John.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001694 There is a man X. It is not the case that there is X.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001695 There is a man. There is the man.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001696 There is a man. There are the man and a woman.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001697 There is a man. There are a woman and the man.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001698 There is a man. There is a woman. There are the man and the woman.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001699 There is every man.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001700 There are a woman and every man.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001701 There is a man. John sees Mary and a dog and the man.
fof(f1, axiom, (
? [A,B,C,D] : ((object(A,na,countable,na,eq,3)) &
((has_part(A,B)) &
((has_part(A,C)) &
((has_part(A,'Mary')) &
((predicate2(D,see,'John',A)) &
((dog(C)) &
(man(B)))))))))).
001702 Every boy and a girl see a man.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001703 Who who eats drinks?
ERROR	DRS is empty	apply_converter/2	drs([],[])
001704 What is written by who?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,what)
001705 A man whose age is 31 waits.
fof(f1, axiom, (
? [A,B,C] : ((predicate1(A,wait,B)) &
((C=31) &
((relation(C,of,B)) &
((age(C)) &
(man(B)))))))).
001706 John whose age is 31 waits.
fof(f1, axiom, (
? [A] : ((A=31) &
((relation(A,of,'John')) &
(age(A)))))).

fof(f2, axiom, (
? [A] : (predicate1(A,wait,'John')))).
001707 A man whose age is 31 likes a cat.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate2(A,like,B,C)) &
((cat(C)) &
((D=31) &
((relation(D,of,B)) &
((age(D)) &
(man(B))))))))).
001708 A man whose age is 31 likes Mary.
fof(f1, axiom, (
? [A,B,C] : ((predicate2(A,like,B,'Mary')) &
((C=31) &
((relation(C,of,B)) &
((age(C)) &
(man(B)))))))).
001709 Every dog which barks or which eats does not see a man.
fof(f1, axiom, (
! [A] : (((dog(A)) &
(? [B] : ((predicate1(B,bark,A))
| (? [C] : (predicate1(C,eat,A))))))
=> (~(? [D,E] : ((man(D)) &
(predicate2(E,see,A,D)))))))).
001710 John's
ERROR	DRS is empty	apply_converter/2	drs([],[])
001711 If there is somebody Y and somebody X does not love Y then X hates Y.
fof(f1, axiom, (
! [A,B] : ((($true) &
(($true) &
(~(? [C] : (predicate2(C,love,B,A))))))
=> (? [D] : (predicate2(D,hate,B,A)))))).
001712 A man who sees who waits.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001713 A man who sees a dog and who waits.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001714 A man who sees who waits?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,who)
001715 At least 1 men wait.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001716 There is a man X. It is false that the man X waits.
fof(f1, axiom, (
? [A] : ((~(? [B] : (predicate1(B,wait,A)))) &
(man(A))))).
001717 At most 1 men wait.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001718 At least 0 man waits.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001719 At least 0 men wait.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,wait,B)) &
(object(B,man,countable,na,geq,0))))).
001720 -3 men wait.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001721 At least -3 men wait.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001722 At most 0 men wait.
ERROR	DRS condition not supported: [|]	tptp/4	[predicate(_,wait,A)-1/5,object(A,man,countable,na,leq,0)-1/4]
001723 At least 1 man wait.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001724 At least 1 men waits.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001725 Every man an age of who is 31 likes a cat.
fof(f1, axiom, (
! [A,B] : (((man(A)) &
((age(B)) &
((relation(B,of,A)) &
(B=31))))
=> (? [C,D] : ((cat(C)) &
(predicate2(D,like,A,C))))))).
001726 Less than 0 men wait.
ERROR	DRS condition not supported: [|]	tptp/4	[predicate(_,wait,A)-1/5,object(A,man,countable,na,less,0)-1/4]
001727 A man's dog barks. The man's dog barks.
fof(f1, axiom, (
? [A,B,C,D,E] : ((predicate1(A,bark,B)) &
((dog(B)) &
((relation(B,of,C)) &
((predicate1(D,bark,E)) &
((dog(E)) &
((relation(E,of,C)) &
(man(C)))))))))).
001728 Which dog of which cat barks?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,which)
001729 There is the dog of John.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001730 There is nobody who sees something.
fof(f1, axiom, (
~(? [A,B,C] : (($true) &
((predicate2(B,see,C,A)) &
($true)))))).
001731 There is somebody who sees nothing.
fof(f1, axiom, (
? [A] : ((! [B] : (($true)
=> (~(? [C] : (predicate2(C,see,A,B)))))) &
($true)))).
001732 There is nobody who sees nothing.
fof(f1, axiom, (
~(? [A] : ((! [B] : (($true)
=> (~(? [C] : (predicate2(C,see,A,B)))))) &
($true))))).
001733 If there is a man then he waits and there is a woman.
fof(f1, axiom, (
! [A] : ((man(A))
=> (? [B,C] : ((predicate1(B,wait,A)) &
(woman(C))))))).
001734 If there is a man then he waits and a woman owns a cat.
fof(f1, axiom, (
! [A] : ((man(A))
=> (? [B,C,D,E] : ((predicate1(B,wait,A)) &
((woman(C)) &
((cat(D)) &
(predicate2(E,own,C,D))))))))).
001735 There is a man. Every man sees the man.
fof(f1, axiom, (
? [A] : (man(A)))).

fof(f2, axiom, (
! [A] : ((man(A))
=> (? [B] : (predicate2(B,see,A,A)))))).
001736 There is a dog. Every man likes the dog. Every woman hates the dog.
fof(f1, axiom, (
? [A] : ((! [B] : ((woman(B))
=> (? [C] : (predicate2(C,hate,B,A))))) &
((! [D] : ((man(D))
=> (? [E] : (predicate2(E,like,D,A))))) &
(dog(A)))))).
001737 There is a dog. Every man likes the dog. There is a dog. Every woman hates the dog.
fof(f1, axiom, (
? [A] : ((! [B] : ((man(B))
=> (? [C] : (predicate2(C,like,B,A))))) &
(dog(A))))).

fof(f2, axiom, (
? [A] : ((! [B] : ((woman(B))
=> (? [C] : (predicate2(C,hate,B,A))))) &
(dog(A))))).
001738 There is a man X. Every man sees X.
fof(f1, axiom, (
? [A] : ((! [B] : ((man(B))
=> (? [C] : (predicate2(C,see,B,A))))) &
(man(A))))).
001739 Every man who loves a woman who loves the man smiles.
fof(f1, axiom, (
! [A,B,C,D] : (((man(A)) &
((woman(B)) &
((predicate2(C,love,B,A)) &
(predicate2(D,love,A,B)))))
=> (? [E] : (predicate1(E,smile,A)))))).
001740 There is a man X. If X eats then X drinks.
fof(f1, axiom, (
? [A] : ((! [B] : ((predicate1(B,eat,A))
=> (? [C] : (predicate1(C,drink,A))))) &
(man(A))))).
001741 If there is a man then it is false that it is possible that he sees a cat.
ERROR	DRS condition not supported: can	tptp/4	can(drs([A,B],[object(A,cat,countable,na,eq,1)-1/18,predicate(B,see,_,A)-1/16]))
001742 There is proposition P that Mary sleeps. It is true that P.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001743 There is proposition P that Mary sleeps. It is false that P.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001744 There is proposition P that Mary sleeps. It is possible that P.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001745 There is proposition P that Mary sleeps. It is not provable that P.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001746 There is proposition P that Mary sleeps. John believes that P.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001747 There is proposition P that Mary sleeps. P is true.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001748 There is proposition P that Mary sleeps. There is proposition Q that Mary waits. It is true that P. It is true that R.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001749 There is proposition P that there is a man. There is proposition Q that it is false that P. A woman believes that Q.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001750 There is proposition P that Mary sleeps. There is proposition Q that John believes that P. Mary assumes that Q.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001751 There is a husband. She sleeps.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001752 John's card is correct.
fof(f1, axiom, (
? [A,B] : ((A=B) &
((property1(B,correct,pos)) &
((card(A)) &
(relation(A,of,'John'))))))).
001753 Mary is sent some books by John.
fof(f1, axiom, (
? [A,B] : ((predicate3(A,send,'John',B,'Mary')) &
(object(B,book,countable,na,geq,2))))).
001754 There is Bill.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001755 There is Proposition P that Mary sleeps. It is true that P.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001756 What does John live in?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,what)
001757 From what does John come?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,what)
001758 There is proposition P that there is proposition Q that a dog barks. It is false that P.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001759 There is proposition P that a dog barks and that a cat eats. It is true that P.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001760 There is proposition P that a dog barks. John knows that P.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001761 There is proposition P that a dog barks and that John knows that P.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001762 There is proposition P that a dog barks and John knows that P.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001763 P :: A dog barks. It is false that P.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001764 Q :: A cat sleeps. P :: A dog barks and it is false that Q. John believes that P.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001765 P :: Every man waits. It is true that P.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001766 P :: Every man waits. It is true that P and that P.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001767 X :: A man waits. It is true that X. It is false that X.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001768 A: A dog barks. B: Every cat knows that A. C: Every dog knows that it is true that B. It is true that C.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001769 Are there no men?
ERROR	DRS is empty	apply_converter/2	drs([],[])
001770 P: A dog barks. It is false that P.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001771 Proposition Q: A cat sleeps. Proposition P: A dog barks and it is false that Q. John believes that P.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001772 Proposition P: Every man waits. It is true that P.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001773 Fact F: A man waits.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001774 A man's dog barks. It waits.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate1(A,wait,B)) &
((predicate1(C,bark,B)) &
((dog(B)) &
((relation(B,of,D)) &
(man(D)))))))).
001775 A man's dog barks. The man waits.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate1(A,wait,B)) &
((predicate1(C,bark,D)) &
((dog(D)) &
((relation(D,of,B)) &
(man(B)))))))).
001776 A ball of a girl is blue. John sees the ball of the girl. Mary sees a ball of the girl.
fof(f1, axiom, (
? [A,B,C,D,E,F] : ((predicate2(A,see,'Mary',B)) &
((relation(B,of,C)) &
((ball(B)) &
((predicate2(D,see,'John',E)) &
((E=F) &
((property1(F,blue,pos)) &
((relation(E,of,C)) &
((girl(C)) &
(ball(E)))))))))))).
001777 John beats a mother of a brother of a wife of John.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate2(A,beat,'John',B)) &
((relation(B,of,C)) &
((relation(C,of,D)) &
((relation(D,of,'John')) &
((wife(D)) &
((brother(C)) &
(mother(B)))))))))).
001778 Fact P: Mary sleeps. It is false that P.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001779 Fact P: Mary sleeps.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001780 Proposition P: Mary sleeps.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001781 Proposition P: Mary sleeps. It is possible that P.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001782 Fact P: Mary sleeps. It is true that P.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001783 Fact P: Mary sleeps. It is not provable that P.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001784 A man's dog barks. The dog of the man is happy.
fof(f1, axiom, (
? [A,B,C,D] : ((man(A)) &
((dog(B)) &
((B=C) &
((property1(C,happy,pos)) &
((predicate1(D,bark,B)) &
(relation(B,of,A))))))))).
001785 The man's dog barks. The dog of the man is happy.
fof(f1, axiom, (
? [A,B,C,D] : ((A=B) &
((property1(B,happy,pos)) &
((man(C)) &
((predicate1(D,bark,A)) &
((dog(A)) &
(relation(A,of,C))))))))).
001786 There is a boy. A man of his group waits.
fof(f1, axiom, (
? [A] : (boy(A)))).

fof(f2, axiom, (
? [A,B,C] : ((predicate1(A,wait,B)) &
((relation(B,of,C)) &
((group(C)) &
((relation(C,of,B)) &
(man(B)))))))).
001787 A man of his group waits.
fof(f1, axiom, (
? [A,B,C] : ((predicate1(A,wait,B)) &
((relation(B,of,C)) &
((group(C)) &
((relation(C,of,B)) &
(man(B)))))))).
001788 Fact P: Mary sleeps. Fact P: Mary waits. It is false that P.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001789 Every mother of someone is a parent of him/her.
fof(f1, axiom, (
! [A,B] : (((mother(A)) &
(($true) &
(relation(A,of,B))))
=> (? [C] : ((parent(C)) &
((relation(C,of,C)) &
(A=C))))))).
001790 5 men's dog barks. The dog eats.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate1(A,eat,B)) &
((predicate1(C,bark,B)) &
((dog(B)) &
((relation(B,of,D)) &
(object(D,man,countable,na,eq,5)))))))).
001791 5 men's dog barks. The men eat.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate1(A,eat,B)) &
((predicate1(C,bark,D)) &
((dog(D)) &
((relation(D,of,B)) &
(object(B,man,countable,na,eq,5)))))))).
001792 5 men's dog barks. The dog of the men eats.
fof(f1, axiom, (
? [A,B,C,D] : ((object(A,man,countable,na,eq,5)) &
((dog(B)) &
((predicate1(C,eat,B)) &
((predicate1(D,bark,B)) &
(relation(B,of,A)))))))).
001793 There is a man. There is his card.
fof(f1, axiom, (
? [A,B] : ((card(A)) &
((relation(A,of,B)) &
(man(B)))))).
001794 There is 5 men's dog.
fof(f1, axiom, (
? [A,B] : ((dog(A)) &
((relation(A,of,B)) &
(object(B,man,countable,na,eq,5)))))).
001795 There is a dog of 5 men.
fof(f1, axiom, (
? [A,B] : ((relation(A,of,B)) &
((object(B,man,countable,na,eq,5)) &
(dog(A)))))).
001796 Proposition P: If a man waits then the man sleeps. It is false that P.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001797 John's dog waits.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,wait,B)) &
((dog(B)) &
(relation(B,of,'John')))))).
001798 There is a man. His dog waits.
fof(f1, axiom, (
? [A,B,C] : ((predicate1(A,wait,B)) &
((dog(B)) &
((relation(B,of,C)) &
(man(C))))))).
001799 Proposition P: A man waits. It is true that P.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001800 If John does not eat and it is not the case that somebody feeds him then John is hungry.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001801 If a person X likes the wine then John likes X. Mary likes all wine.
fof(f1, axiom, (
! [A,B,C] : (((person(A)) &
((predicate2(B,like,A,C)) &
(wine(C))))
=> (? [D] : (predicate2(D,like,'John',A)))))).

fof(f2, axiom, (
! [A] : ((object(A,wine,mass,na,na,na))
=> (? [B] : (predicate2(B,like,'Mary',A)))))).
001802 If a person buys an object from a merchant and keeps it then the person owns the object. If a merchant sells an object to a person then the person buys the object from the merchant. John sells the book "XML Bible" to Mary. Mary keeps the book.
fof(f1, axiom, (
! [A,B,C,D,E] : (((person(A)) &
((merchant(B)) &
((object(C)) &
((predicate2(D,buy,A,C)) &
((modifier_pp(D,from,B)) &
(predicate2(E,keep,A,C)))))))
=> (? [F] : (predicate2(F,own,A,C)))))).

fof(f2, axiom, (
! [A,B,C,D] : (((merchant(A)) &
((person(B)) &
((object(C)) &
((predicate2(D,sell,A,C)) &
(modifier_pp(D,to,B))))))
=> (? [E] : ((predicate2(E,buy,B,C)) &
(modifier_pp(E,from,A))))))).

fof(f3, axiom, (
? [A,B,C] : ((predicate2(A,keep,'Mary',B)) &
((modifier_pp(C,to,'Mary')) &
((book(B)) &
(predicate3(C,sell,'John',string('XML Bible'),B))))))).
001803 If there is a man then the man sees a dog that sees a cat that sees a rat and the dog sees a horse.
fof(f1, axiom, (
! [A] : ((man(A))
=> (? [B,C,D,E,F,G,H,I] : ((dog(B)) &
((cat(C)) &
((rat(D)) &
((predicate2(E,see,C,D)) &
((predicate2(F,see,B,C)) &
((predicate2(G,see,A,B)) &
((horse(H)) &
(predicate2(I,see,B,H))))))))))))).
001804 If there is a man then the man sees a dog that sees a cat that sees a rat and the dog sees a horse that sees a cow.
fof(f1, axiom, (
! [A] : ((man(A))
=> (? [B,C,D,E,F,G,H,I,J,K] : ((dog(B)) &
((cat(C)) &
((rat(D)) &
((predicate2(E,see,C,D)) &
((predicate2(F,see,B,C)) &
((predicate2(G,see,A,B)) &
((horse(H)) &
((cow(I)) &
((predicate2(J,see,H,I)) &
(predicate2(K,see,B,H))))))))))))))).
001805 There is a park in which a dog barks.
fof(f1, axiom, (
? [A,B,C] : ((modifier_pp(A,in,B)) &
((predicate1(A,bark,C)) &
((dog(C)) &
(park(B))))))).
001806 Mary doesn't like some men who aren't rich.
fof(f1, axiom, (
~(? [A,B] : ((object(A,man,countable,na,geq,2)) &
((~(? [C] : ((property1(C,rich,pos)) &
(A=C)))) &
(predicate2(B,like,'Mary',A))))))).
001807 Everybody doesn't like a dog that doesn't bark.
fof(f1, axiom, (
! [A] : (($true)
=> (~(? [B,C] : ((dog(B)) &
((~(? [D] : (predicate1(D,bark,B)))) &
(predicate2(C,like,A,B))))))))).
001808 The furniture is good.
fof(f1, axiom, (
? [A,B] : ((object(A,furniture,mass,na,na,na)) &
((A=B) &
(property1(B,good,pos)))))).
001809 A cat isn't hated by a dog.
fof(f1, axiom, (
? [A] : ((~(? [B,C] : ((dog(B)) &
(predicate2(C,hate,B,A))))) &
(cat(A))))).
001810 If there is a man then it is false that the man likes a cat and that the man hates a dog.
fof(f1, axiom, (
! [A] : ((man(A))
=> (~(? [B,C,D,E] : ((cat(B)) &
((predicate2(C,like,A,B)) &
((dog(D)) &
(predicate2(E,hate,A,D)))))))))).
001811 If there is a man then the man sees a cow and it is false that the man likes a cat and that the man hates a dog.
fof(f1, axiom, (
! [A] : ((man(A))
=> (? [B,C] : ((cow(B)) &
((predicate2(C,see,A,B)) &
(~(? [D,E,F,G] : ((cat(D)) &
((predicate2(E,like,A,D)) &
((dog(F)) &
(predicate2(G,hate,A,F))))))))))))).
001812 Proposition X: A man waits. It is true that X. It is false that X.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001813 A man is v:sseen by a dog.
fof(f1, axiom, (
? [A,B,C] : ((predicate2(A,sseen,B,C)) &
((dog(B)) &
(man(C)))))).
001814 A man is v:sseen.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001815 Every man can eat and drink.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001816 Some men do wait.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,wait,B)) &
(object(B,man,countable,na,geq,2))))).
001817 A man does seen by a dog.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001818 P: Every man waits. It is true that P and that P.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001819 Proposition P: A dog likes everybody. It is true that P.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001820 A dog of a man and a woman barks.
fof(f1, axiom, (
? [A,B,C,D,E] : ((predicate1(A,bark,B)) &
((object(C,na,countable,na,eq,2)) &
((has_part(C,D)) &
((has_part(C,E)) &
((relation(B,of,C)) &
((dog(B)) &
((man(E)) &
(woman(D))))))))))).
001821 John's n:home-page is an n:URI "http://www.example.org/John".
ERROR	DRS is empty	apply_converter/2	drs([],[])
001822 Mary is v:given an apple by John.
fof(f1, axiom, (
? [A,B] : ((predicate3(A,given,'John',B,'Mary')) &
(apple(B))))).
001823 An apple is v:given to John by Mary.
fof(f1, axiom, (
? [A,B] : ((predicate3(A,given,'Mary',B,'John')) &
(apple(B))))).
001824 John and Mary's dogs bark.
fof(f1, axiom, (
? [A,B,C] : ((object(A,na,countable,na,eq,2)) &
((has_part(A,B)) &
((has_part(A,'John')) &
((predicate1(C,bark,A)) &
((object(B,dog,countable,na,geq,2)) &
(relation(B,of,'Mary'))))))))).
001825 Some dogs of Mary and John bark.
fof(f1, axiom, (
? [A,B,C] : ((predicate1(A,bark,B)) &
((object(C,na,countable,na,eq,2)) &
((has_part(C,'John')) &
((relation(B,of,C)) &
((has_part(C,'Mary')) &
(object(B,dog,countable,na,geq,2))))))))).
001826 John and some dogs of Mary bark.
fof(f1, axiom, (
? [A,B,C] : ((object(A,na,countable,na,eq,2)) &
((has_part(A,B)) &
((has_part(A,'John')) &
((predicate1(C,bark,A)) &
((relation(B,of,'Mary')) &
(object(B,dog,countable,na,geq,2))))))))).
001827 There are John and Mary. His and her dog barks.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001828 There are John and Mary. His and her dogs bark.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001829 There are John and Mary. He and her dogs bark.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001830 A customer and a clerk's contract is valid.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001831 A customer and a clerk's contracts are valid.
fof(f1, axiom, (
? [A,B,C,D,E] : ((object(A,na,countable,na,eq,2)) &
((has_part(A,B)) &
((has_part(A,C)) &
((A=D) &
((property1(D,valid,pos)) &
((customer(C)) &
((object(B,contract,countable,na,geq,2)) &
((relation(B,of,E)) &
(clerk(E)))))))))))).
001832 John and Mary's contracts are valid.
fof(f1, axiom, (
? [A,B,C] : ((object(A,na,countable,na,eq,2)) &
((has_part(A,B)) &
((has_part(A,'John')) &
((A=C) &
((property1(C,valid,pos)) &
((object(B,contract,countable,na,geq,2)) &
(relation(B,of,'Mary')))))))))).
001833 5 men and a woman's card works.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001834 5 men's card works.
fof(f1, axiom, (
? [A,B,C] : ((predicate1(A,work,B)) &
((card(B)) &
((relation(B,of,C)) &
(object(C,man,countable,na,eq,5))))))).
001835 There is a man. The man's dog's card works.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001836 There is a man. His dog's card works.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001837 Proposition A: A dog barks. Proposition B: Every cat knows that A. Proposition C: Every dog knows that it is true that B. It is true that C.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001838 Proposition P: A dog barks. It is false that P.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001839 Proposition P: Every man waits. It is true that P and that P.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001840 Proposition P: A dog sees everybody that waits. It is true that P.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001841 Proposition P: A dog sees nobody that waits. It is true that P.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001842 A dog sees nobody.
fof(f1, axiom, (
? [A] : ((! [B] : (($true)
=> (~(? [C] : (predicate2(C,see,A,B)))))) &
(dog(A))))).
001843 Nobody that waits waits.
fof(f1, axiom, (
! [A,B] : (((predicate1(A,wait,B)) &
($true))
=> (~(? [C] : (predicate1(C,wait,B))))))).
001844 A dog sees nobody that waits.
fof(f1, axiom, (
? [A] : ((! [B,C] : (((predicate1(B,wait,C)) &
($true))
=> (~(? [D] : (predicate2(D,see,A,C)))))) &
(dog(A))))).
001845 Proposition P: There is a man. Proposition Q: He waits. It is true that P and that Q.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001846 Proposition P: Mary sleeps. It is true that P.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001847 Proposition P: Mary sleeps. It is false that P.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001848 Proposition P: Mary sleeps. It is not provable that P.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001849 Proposition P: Mary sleeps. John believes that P.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001850 5 clerks' card is valid.
fof(f1, axiom, (
? [A,B,C] : ((A=B) &
((property1(B,valid,pos)) &
((card(A)) &
((relation(A,of,C)) &
(object(C,clerk,countable,na,eq,5)))))))).
001851 5 men are seen by everybody.
fof(f1, axiom, (
? [A] : ((! [B] : (($true)
=> (? [C] : (predicate2(C,see,B,A))))) &
(object(A,man,countable,na,eq,5))))).
001852 Some men's dog barks.
fof(f1, axiom, (
? [A,B,C] : ((predicate1(A,bark,B)) &
((dog(B)) &
((relation(B,of,C)) &
(object(C,man,countable,na,geq,2))))))).
001853 No man's dog barks.
fof(f1, axiom, (
! [A,B] : (((man(A)) &
((relation(B,of,A)) &
(dog(B))))
=> (~(? [C] : (predicate1(C,bark,B))))))).
001854 There are some men. Their dog barks.
fof(f1, axiom, (
? [A,B,C] : ((dog(A)) &
((predicate1(B,bark,A)) &
((relation(A,of,C)) &
(object(C,man,countable,na,geq,2))))))).
001855 There are a man's dog and a cat.
fof(f1, axiom, (
? [A,B,C,D] : ((object(A,na,countable,na,eq,2)) &
((has_part(A,B)) &
((has_part(A,C)) &
((dog(C)) &
((relation(C,of,D)) &
((man(D)) &
(cat(B)))))))))).
001856 A rich man's dog barks.
fof(f1, axiom, (
? [A,B,C] : ((predicate1(A,bark,B)) &
((dog(B)) &
((relation(B,of,C)) &
((property1(C,rich,pos)) &
(man(C)))))))).
001857 A rich man X's dog barks.
fof(f1, axiom, (
? [A,B,C] : ((predicate1(A,bark,B)) &
((dog(B)) &
((relation(B,of,C)) &
((property1(C,rich,pos)) &
(man(C)))))))).
001858 A rich man X's dog barks. X waits.
fof(f1, axiom, (
? [A,B,C,D] : ((man(A)) &
((dog(B)) &
((property1(A,rich,pos)) &
((predicate1(C,wait,A)) &
((predicate1(D,bark,B)) &
(relation(B,of,A))))))))).
001859 A man "X"'s dog barks.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001860 A man "X"'s dog barks. The man "X" waits.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001861 2 men X and Y's dog barks.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001862 Everything that affiliatedWith something that affiliatedWith something affiliatedWith it.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001863 Everybody sees 3 things that wait.
fof(f1, axiom, (
! [A] : (($true)
=> (? [B,C,D] : ((object(B,thing,countable,na,eq,3)) &
((predicate1(C,wait,B)) &
(predicate2(D,see,A,B)))))))).
001864 Everybody sees 3 things that are some dogs.
fof(f1, axiom, (
! [A] : (($true)
=> (? [B,C,D] : ((object(B,thing,countable,na,eq,3)) &
((object(C,dog,countable,na,geq,2)) &
((B=C) &
(predicate2(D,see,A,B))))))))).
001865 Everybody sees 3 things that are some dogs or that are some cats.
fof(f1, axiom, (
! [A] : (($true)
=> (? [B,C] : ((object(B,thing,countable,na,eq,3)) &
((? [D] : (((object(D,dog,countable,na,geq,2)) &
(B=D))
| (? [E] : ((object(E,cat,countable,na,geq,2)) &
(B=E))))) &
(predicate2(C,see,A,B)))))))).
001866 Everybody sees 3 men who wait.
fof(f1, axiom, (
! [A] : (($true)
=> (? [B,C,D] : ((object(B,man,countable,na,eq,3)) &
((predicate1(C,wait,B)) &
(predicate2(D,see,A,B)))))))).
001867 No cards are valid.
fof(f1, axiom, (
! [A] : ((card(A))
=> (~(? [B] : ((property1(B,valid,pos)) &
(A=B))))))).
001868 John who has a card enters it.
fof(f1, axiom, (
? [A,B,C] : ((predicate2(A,have,'John',B)) &
((card(B)) &
(predicate2(C,enter,'John',B)))))).
001869 There is a man. John does not like the man.
fof(f1, axiom, (
? [A] : ((~(? [B] : (predicate2(B,like,'John',A)))) &
(man(A))))).
001870 A man owns a dog. A man owns a cat. John sees the man who owns a dog.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate2(A,see,'John',B)) &
((predicate2(C,own,B,D)) &
((dog(D)) &
(man(B))))))).

fof(f2, axiom, (
? [A,B,C] : ((predicate2(A,own,B,C)) &
((cat(C)) &
(man(B)))))).
001871 Every goat likes some grass and likes some water and doesn't like something that is not some grass and that is not some water.
fof(f1, axiom, (
! [A] : ((goat(A))
=> (? [B,C,D,E] : ((object(B,grass,mass,na,na,na)) &
((predicate2(C,like,A,B)) &
((object(D,water,mass,na,na,na)) &
((predicate2(E,like,A,D)) &
(~(? [F,G] : (($true) &
((predicate2(G,like,A,F)) &
((~(? [H] : ((object(H,grass,mass,na,na,na)) &
(F=H)))) &
(~(? [I] : ((object(I,water,mass,na,na,na)) &
(F=I))))))))))))))))).
001872 Every pet is a dog or is a cat ,and is not something that is a dog and that is a cat.
fof(f1, axiom, (
! [A] : ((pet(A))
=> ((? [B] : (((dog(B)) &
(A=B))
| (? [C] : ((cat(C)) &
(A=C))))) &
(~(? [D,E,F] : (($true) &
((A=D) &
((dog(E)) &
((D=E) &
((cat(F)) &
(D=F)))))))))))).
001873 If there is a pet X then X is a dog or X is a cat ,and it is false that X is a dog and that X is a cat.
fof(f1, axiom, (
! [A] : ((pet(A))
=> ((? [B] : (((dog(B)) &
(A=B))
| (? [C] : ((cat(C)) &
(A=C))))) &
(~(? [D,E] : ((dog(D)) &
((A=D) &
((cat(E)) &
(A=E)))))))))).
001874 Every pet is a dog or is a cat ,and is a cow.
fof(f1, axiom, (
! [A] : ((pet(A))
=> (? [B] : ((? [C] : (((dog(C)) &
(A=C))
| (? [D] : ((cat(D)) &
(A=D))))) &
((cow(B)) &
(A=B))))))).
001875 Every pet is a dog or is a cat ,and is not a cow.
fof(f1, axiom, (
! [A] : ((pet(A))
=> ((? [B] : (((dog(B)) &
(A=B))
| (? [C] : ((cat(C)) &
(A=C))))) &
(~(? [D] : ((cow(D)) &
(A=D)))))))).
001876 Every pet is not a cow ,and is a dog or is a cat.
fof(f1, axiom, (
! [A] : ((pet(A))
=> ((~(? [B] : ((cow(B)) &
(A=B)))) &
(? [C] : (((dog(C)) &
(A=C))
| (? [D] : ((cat(D)) &
(A=D))))))))).
001877 Every man works or eats and sleeps.
fof(f1, axiom, (
! [A] : ((man(A))
=> (? [B] : ((predicate1(B,work,A))
| (? [C,D] : ((predicate1(C,eat,A)) &
(predicate1(D,sleep,A))))))))).
001878 Every man works or eats ,and sleeps or drinks.
fof(f1, axiom, (
! [A] : ((man(A))
=> ((? [B] : ((predicate1(B,work,A))
| (? [C] : (predicate1(C,eat,A))))) &
(? [D] : ((predicate1(D,sleep,A))
| (? [E] : (predicate1(E,drink,A))))))))).
001879 Every man sees a dog that barks or works.
fof(f1, axiom, (
! [A] : ((man(A))
=> (? [B,C,D] : (((dog(B)) &
((predicate1(C,bark,B)) &
(predicate2(D,see,A,B))))
| (? [E] : (predicate1(E,work,A)))))))).
001880 Every man works or sees a dog that barks.
fof(f1, axiom, (
! [A] : ((man(A))
=> (? [B] : ((predicate1(B,work,A))
| (? [C,D,E] : ((dog(C)) &
((predicate1(D,bark,C)) &
(predicate2(E,see,A,C)))))))))).
001881 Some men are at least 2 men.
fof(f1, axiom, (
? [A,B] : ((A=B) &
((object(B,man,countable,na,geq,2)) &
(object(A,man,countable,na,geq,2)))))).
001882 Proposition A: A man X has a card. Proposition B: The man X has a code. It is true that A and it is true that B.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001883 If a message is from someone from which John awaits a delivery then the message is important.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001884 There is a dog of John. There is a dog of Mary. The dog of John barks.
fof(f1, axiom, (
? [A,B] : ((dog(A)) &
((predicate1(B,bark,A)) &
(relation(A,of,'John')))))).

fof(f2, axiom, (
? [A] : ((dog(A)) &
(relation(A,of,'Mary'))))).
001885 Every man sees a dog that barks or sees himself.
fof(f1, axiom, (
! [A] : ((man(A))
=> (? [B,C,D] : (((dog(B)) &
((predicate1(C,bark,B)) &
(predicate2(D,see,A,B))))
| (? [E] : (predicate2(E,see,A,A)))))))).
001886 Every man sees a dog that barks or sees itself.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001887 Every man hears a dog that does not bark and sees a cat that does not sleep.
fof(f1, axiom, (
! [A] : ((man(A))
=> (? [B,C,D,E] : ((dog(B)) &
((~(? [F] : (predicate1(F,bark,B)))) &
((predicate2(C,hear,A,B)) &
((cat(D)) &
((~(? [G] : (predicate1(G,sleep,D)))) &
(predicate2(E,see,A,D))))))))))).
001888 If there is a man then he sees a cat X and it is false that X sees a mouse and that X sees a rat.
fof(f1, axiom, (
! [A] : ((man(A))
=> (? [B,C] : ((cat(B)) &
((predicate2(C,see,A,B)) &
(~(? [D,E,F,G] : ((mouse(D)) &
((predicate2(E,see,B,D)) &
((rat(F)) &
(predicate2(G,see,B,F))))))))))))).
001889 If there is a man then he sees a cat X and it is possible that X sees a mouse and that X sees a rat.
ERROR	DRS condition not supported: can	tptp/4	can(drs([A,B,C,D],[object(A,mouse,countable,na,eq,1)-1/20,predicate(B,see,E,A)-1/18,object(C,rat,countable,na,eq,1)-1/26,predicate(D,see,E,C)-1/24]))
001890 If there is a man then he sees a cat X and it is necessary that X sees a mouse and that X sees a rat.
ERROR	DRS condition not supported: must	tptp/4	must(drs([A,B,C,D],[object(A,mouse,countable,na,eq,1)-1/20,predicate(B,see,E,A)-1/18,object(C,rat,countable,na,eq,1)-1/26,predicate(D,see,E,C)-1/24]))
001891 If there is a man then he sees a cat X and it is false that X eats and that X waits.
fof(f1, axiom, (
! [A] : ((man(A))
=> (? [B,C] : ((cat(B)) &
((predicate2(C,see,A,B)) &
(~(? [D,E] : ((predicate1(D,eat,B)) &
(predicate1(E,wait,B))))))))))).
001892 If there is a man then he sees a cat X and it is possible that X eats and that X waits.
ERROR	DRS condition not supported: can	tptp/4	can(drs([A,B],[predicate(A,eat,C)-1/18,predicate(B,wait,C)-1/22]))
001893 If there is a man then he sees a cat X and it is necessary that X eats and that X waits.
ERROR	DRS condition not supported: must	tptp/4	must(drs([A,B],[predicate(A,eat,C)-1/18,predicate(B,wait,C)-1/22]))
001894 If there is a man then he sees a cat X and it is false that X eats or that X waits.
fof(f1, axiom, (
! [A] : ((man(A))
=> (? [B,C] : ((cat(B)) &
((predicate2(C,see,A,B)) &
(~(? [D] : ((predicate1(D,eat,B))
| (? [E] : (predicate1(E,wait,B)))))))))))).
001895 If there is a man then he sees a cat X and it is possible that X eats or that X waits.
ERROR	DRS condition not supported: can	tptp/4	can(drs([],[drs([A],[predicate(A,eat,C)-1/18])v drs([B],[predicate(B,wait,C)-1/22])]))
001896 If there is a man then he sees a cat X and it is necessary that X eats or that X waits.
ERROR	DRS condition not supported: must	tptp/4	must(drs([],[drs([A],[predicate(A,eat,C)-1/18])v drs([B],[predicate(B,wait,C)-1/22])]))
001897 If there is a man then he sees a cat X and it is false that X sees a mouse or that X sees a rat.
fof(f1, axiom, (
! [A] : ((man(A))
=> (? [B,C] : ((cat(B)) &
((predicate2(C,see,A,B)) &
(~(? [D,E] : (((mouse(D)) &
(predicate2(E,see,B,D)))
| (? [F,G] : ((rat(F)) &
(predicate2(G,see,B,F))))))))))))).
001898 If there is a man then he sees a cat X and it is necessary that X sees a mouse or that X sees a rat.
ERROR	DRS condition not supported: must	tptp/4	must(drs([],[drs([A,B],[object(A,mouse,countable,na,eq,1)-1/20,predicate(B,see,E,A)-1/18])v drs([C,D],[object(C,rat,countable,na,eq,1)-1/26,predicate(D,see,E,C)-1/24])]))
001899 If there is a man then he sees a cat X and it is possible that X sees a mouse or that X sees a rat.
ERROR	DRS condition not supported: can	tptp/4	can(drs([],[drs([A,B],[object(A,mouse,countable,na,eq,1)-1/20,predicate(B,see,E,A)-1/18])v drs([C,D],[object(C,rat,countable,na,eq,1)-1/26,predicate(D,see,E,C)-1/24])]))
001900 Every man hears a dog that does not bark and sees a cat that sleeps.
fof(f1, axiom, (
! [A] : ((man(A))
=> (? [B,C,D,E,F] : ((dog(B)) &
((~(? [G] : (predicate1(G,bark,B)))) &
((predicate2(C,hear,A,B)) &
((cat(D)) &
((predicate1(E,sleep,D)) &
(predicate2(F,see,A,D))))))))))).
001901 Every man hears a dog that barks and sees a cat that sleeps.
fof(f1, axiom, (
! [A] : ((man(A))
=> (? [B,C,D,E,F,G] : ((dog(B)) &
((predicate1(C,bark,B)) &
((predicate2(D,hear,A,B)) &
((cat(E)) &
((predicate1(F,sleep,E)) &
(predicate2(G,see,A,E))))))))))).
001902 Every man hates a dog that knows something or hates a cat that knows something.
fof(f1, axiom, (
! [A] : ((man(A))
=> (? [B,C,D,E] : (((dog(B)) &
(($true) &
((predicate2(D,know,B,C)) &
(predicate2(E,hate,A,B)))))
| (? [F,G,H,I] : ((cat(F)) &
(($true) &
((predicate2(H,know,F,G)) &
(predicate2(I,hate,A,F))))))))))).
001903 Every man sees 2 dogs that see 3 cats.
fof(f1, axiom, (
! [A] : ((man(A))
=> (? [B,C,D,E] : ((object(B,dog,countable,na,eq,2)) &
((object(C,cat,countable,na,eq,3)) &
((predicate2(D,see,B,C)) &
(predicate2(E,see,A,B))))))))).
001904 Every man sees 2 dogs that see a cat.
fof(f1, axiom, (
! [A] : ((man(A))
=> (? [B,C,D,E] : ((object(B,dog,countable,na,eq,2)) &
((cat(C)) &
((predicate2(D,see,B,C)) &
(predicate2(E,see,A,B))))))))).
001905 Paris is a village or is a city.
fof(f1, axiom, (
? [A] : (((village(A)) &
('Paris'=A))
| (? [B] : ((city(B)) &
('Paris'=B)))))).
001906 A n:named_entity waits.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,wait,B)) &
(named_entity(B))))).
001907 John is 3.
fof(f1, axiom, (
'John'=3)).
001908 2 men are seen by 2 dogs.
fof(f1, axiom, (
? [A,B,C] : ((predicate2(A,see,B,C)) &
((object(B,dog,countable,na,eq,2)) &
(object(C,man,countable,na,eq,2)))))).
001909 Every goat eats at most 0 things that are not some grass.
ERROR	DRS condition not supported: [|]	tptp/4	[predicate(_,eat,_,C)-1/3,-drs([A,B],[object(A,grass,mass,na,na,na)-1/12,predicate(B,be,C,A)-1/9]),object(C,thing,countable,na,leq,0)-1/7]
001910 Everybody who is John is a man.
fof(f1, axiom, (
! [A] : (((A='John') &
($true))
=> (? [B] : ((man(B)) &
(A=B)))))).
001911 No password is "god".
fof(f1, axiom, (
! [A] : ((password(A))
=> (~(A=string(god)))))).
001912 A man is taller than no dog.
fof(f1, axiom, (
? [A] : ((! [B] : ((dog(B))
=> (~(? [C] : ((property2(C,tall,comp_than,B)) &
(A=C)))))) &
(man(A))))).
001913 Every man is taller than no dog.
fof(f1, axiom, (
! [A] : ((man(A))
=> (! [B] : ((dog(B))
=> (~(? [C] : ((property2(C,tall,comp_than,B)) &
(A=C))))))))).
001914 No man is taller than every dog.
fof(f1, axiom, (
! [A] : ((man(A))
=> (~(! [B] : ((dog(B))
=> (? [C] : ((property2(C,tall,comp_than,B)) &
(A=C))))))))).
001915 No man is taller than no dog.
fof(f1, axiom, (
! [A] : ((man(A))
=> (~(! [B] : ((dog(B))
=> (~(? [C] : ((property2(C,tall,comp_than,B)) &
(A=C)))))))))).
001916 No man is taller than a dog.
fof(f1, axiom, (
! [A] : ((man(A))
=> (~(? [B,C] : ((dog(B)) &
((property2(C,tall,comp_than,B)) &
(A=C)))))))).
001917 A customer is richer than Mary and taller than no dog.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001918 If someone X waits then X is a customer. Someone X waits.
fof(f1, axiom, (
! [A,B] : ((($true) &
(predicate1(B,wait,A)))
=> (? [C] : ((customer(C)) &
(A=C)))))).

fof(f2, axiom, (
? [A,B] : ((predicate1(A,wait,B)) &
($true)))).
001919 There is a man X. If X owns a dog then the dog hates a cat.
fof(f1, axiom, (
? [A] : ((! [B,C] : (((dog(B)) &
(predicate2(C,own,A,B)))
=> (? [D,E] : ((cat(D)) &
(predicate2(E,hate,B,D)))))) &
(man(A))))).
001920 does not John like Mary?
ERROR	DRS is empty	apply_converter/2	drs([],[])
001921 can John like Mary?
ERROR	DRS condition not supported: can	tptp/4	can(drs([A],[predicate(A,like,named(John),named(Mary))-1/3]))
001922 must John like Mary?
ERROR	DRS condition not supported: must	tptp/4	must(drs([A],[predicate(A,like,named(John),named(Mary))-1/3]))
001923 What does not a customer enter?
ERROR	DRS is empty	apply_converter/2	drs([],[])
001924 What can a customer enter?
ERROR	DRS condition not supported: can	tptp/4	can(drs([A,B],[query(A,what)-1/1,predicate(B,enter,_,A)-1/5]))
001925 What must a customer enter?
ERROR	DRS condition not supported: must	tptp/4	must(drs([A,B],[query(A,what)-1/1,predicate(B,enter,_,A)-1/5]))
001926 Into what does not a customer enter a card?
ERROR	DRS is empty	apply_converter/2	drs([],[])
001927 Into what can a customer enter a card?
ERROR	DRS condition not supported: can	tptp/4	can(drs([A,B,C],[object(A,card,countable,na,eq,1)-1/8,query(B,what)-1/2,predicate(C,enter,_,A)-1/6,modifier_pp(C,into,B)-1/1]))
001928 Where does not a customer enter a card?
ERROR	DRS is empty	apply_converter/2	drs([],[])
001929 Where must a customer enter a card?
ERROR	DRS condition not supported: must	tptp/4	must(drs([A,B],[object(A,card,countable,na,eq,1)-1/7,predicate(B,enter,_,A)-1/5,query(B,where)-1/1]))
001930 If there is an animal X then an animal Y is smaller than the animal X and the animal X eats the animal Y.
fof(f1, axiom, (
! [A] : ((animal(A))
=> (? [B,C,D] : ((animal(B)) &
((property2(C,small,comp_than,A)) &
((B=C) &
(predicate2(D,eat,A,B))))))))).
001931 Somebody X sees somebody X.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001932 A customer inserts a card carefully or manually.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001933 A dog eats nothing that is a mouse.
fof(f1, axiom, (
? [A] : ((! [B,C] : (((mouse(B)) &
((C=B) &
($true)))
=> (~(? [D] : (predicate2(D,eat,A,C)))))) &
(dog(A))))).
001934 A dog does not eat something that is a mouse.
fof(f1, axiom, (
? [A] : ((~(? [B,C,D] : (($true) &
((predicate2(C,eat,A,B)) &
((mouse(D)) &
(B=D)))))) &
(dog(A))))).
001935 No group contains a member X1 and contains a member X2 that comes-from an institution that X1 that is not X2 comes-from.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001936 John is not been by Mary.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001937 If there is a man then a human is the man.
fof(f1, axiom, (
! [A] : ((man(A))
=> (? [B] : ((human(B)) &
(B=A)))))).
001938 If there is a man then a human must be the man.
ERROR	DRS condition not supported: must	tptp/4	must(drs([A],[predicate(A,be,_,_)-1/9]))
001939 If there is a man then a human can be the man.
ERROR	DRS condition not supported: can	tptp/4	can(drs([A],[predicate(A,be,_,_)-1/9]))
001940 If there is a man then a human can not be the man.
ERROR	DRS condition not supported: can	tptp/4	can(drs([A],[predicate(A,be,_,_)-1/9]))
001941 If there is a man then a human does not have to be the man.
ERROR	DRS condition not supported: must	tptp/4	must(drs([A],[predicate(A,be,_,_)-1/9]))
001942 If there is a dog then it is false that a cat is the dog.
fof(f1, axiom, (
! [A] : ((dog(A))
=> (~(? [B] : ((cat(B)) &
(B=A))))))).
001943 For every dog the dog is not a cat.
fof(f1, axiom, (
! [A] : ((dog(A))
=> (~(? [B] : ((cat(B)) &
(A=B))))))).
001944 For every dog a cat is not the dog.
fof(f1, axiom, (
! [A] : ((dog(A))
=> (? [B] : ((cat(B)) &
(~(B=A))))))).
001945 If there is a man then it is necessary that a human is the man.
ERROR	DRS condition not supported: must	tptp/4	must(drs([A,B],[object(A,human,countable,na,eq,1)-1/12,predicate(B,be,A,_)-1/13]))
001946 If there is a man then it is possible that a human is the man.
ERROR	DRS condition not supported: can	tptp/4	can(drs([A,B],[object(A,human,countable,na,eq,1)-1/12,predicate(B,be,A,_)-1/13]))
001947 If there is a man then it is not necessary that a human is the man.
ERROR	DRS condition not supported: must	tptp/4	must(drs([A,B],[object(A,human,countable,na,eq,1)-1/13,predicate(B,be,A,_)-1/14]))
001948 If there is a man then it is not possible that there is a human that is the man.
ERROR	DRS condition not supported: can	tptp/4	can(drs([A,B],[object(A,human,countable,na,eq,1)-1/15,predicate(B,be,A,_)-1/17]))
001949 A x1 x2 x3 x4.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001950 There is a dog. A man does not hit the dog. The dog barks.
fof(f1, axiom, (
? [A,B,C] : ((predicate1(A,bark,B)) &
((~(? [D] : (predicate2(D,hit,C,B)))) &
((man(C)) &
(dog(B))))))).
001951 More than 3 clerks wait. John knows the clerks. Less than 2 clerks meet. John knows the clerks.
ERROR	DRS condition not supported: [|]	tptp/4	[predicate(_,meet,A)-3,object(A,clerk,countable,na,less,2)-3]
001952 A a:x1 n:x2 v:x3 a:x4.
fof(f1, axiom, (
? [A,B] : ((modifier_adv(A,x4,pos)) &
((predicate1(A,x3,B)) &
((property1(B,x1,pos)) &
(x2(B))))))).
001953 Not a man waits.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001954 Not there is a man.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001955 There is a man "<".
ERROR	DRS is empty	apply_converter/2	drs([],[])
001956 More than 3 men wait.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,wait,B)) &
(object(B,man,countable,na,greater,3))))).
001957 John does not believe that Mary sleeps.
ERROR	DRS condition not supported: :	tptp/4	_:drs([A],[predicate(A,sleep,named(Mary))-1])
001958 One man sleeps.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,sleep,B)) &
(man(B))))).
001959 A man & waits.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001960 A man < waits.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001961 A dog sees no man that waits.
fof(f1, axiom, (
? [A] : ((! [B,C] : (((man(B)) &
(predicate1(C,wait,B)))
=> (~(? [D] : (predicate2(D,see,A,B)))))) &
(dog(A))))).
001962 A man sees not everything.
fof(f1, axiom, (
? [A] : ((~(! [B] : (($true)
=> (? [C] : (predicate2(C,see,A,B)))))) &
(man(A))))).
001963 A man does not see everything.
fof(f1, axiom, (
? [A] : ((~(! [B] : (($true)
=> (? [C] : (predicate2(C,see,A,B)))))) &
(man(A))))).
001964 There is no man that sees something.
fof(f1, axiom, (
~(? [A,B,C] : ((man(A)) &
(($true) &
(predicate2(C,see,A,B))))))).
001965 If there is nobody then a dog barks.
fof(f1, axiom, (
(~(? [A] : ($true)))
=> (? [B,C] : ((dog(B)) &
(predicate1(C,bark,B)))))).
001966 If nobody waits then a dog barks.
fof(f1, axiom, (
(! [A] : (($true)
=> (~(? [B] : (predicate1(B,wait,A))))))
=> (? [C,D] : ((dog(C)) &
(predicate1(D,bark,C)))))).
001967 If there is nobody that waits then a dog barks.
fof(f1, axiom, (
(~(? [A,B] : ((predicate1(A,wait,B)) &
($true))))
=> (? [C,D] : ((dog(C)) &
(predicate1(D,bark,C)))))).
001968 If there is no man that waits then a dog barks.
fof(f1, axiom, (
(~(? [A,B] : ((man(A)) &
(predicate1(B,wait,A)))))
=> (? [C,D] : ((dog(C)) &
(predicate1(D,bark,C)))))).
001969 Not not everybody waits.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001970 Not nothing waits.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001971 It is false that every man waits.
fof(f1, axiom, (
~(! [A] : ((man(A))
=> (? [B] : (predicate1(B,wait,A))))))).
001972 Not a man waits and that a dog barks.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001973 It is true that every man is a human.
fof(f1, axiom, (
! [A] : ((man(A))
=> (? [B] : ((human(B)) &
(A=B)))))).
001974 Is it true that every man is a human?
fof(f1, conjecture, (
! [A] : ((man(A))
=> (? [B] : ((human(B)) &
(A=B)))))).
001975 Every who is a human?
ERROR	DRS is empty	apply_converter/2	drs([],[])
001976 A man owns not more than 2 cars.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001977 A man owns not at least 2 cars.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001978 A man owns not at most 2 cars.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001979 John owns 2 or more cars.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001980 John owns not 2 or more cars.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001981 John owns 2 or 3 cars.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001982 John owns at most 2 cars.
ERROR	DRS condition not supported: [|]	tptp/4	[predicate(_,own,named(John),A)-1,object(A,car,countable,na,leq,2)-1]
001983 At most 2 cars are owned by John.
ERROR	DRS condition not supported: [|]	tptp/4	[predicate(_,own,named(John),A)-1,object(A,car,countable,na,leq,2)-1]
001984 John owns at most 2 cars that Mary likes.
ERROR	DRS condition not supported: [|]	tptp/4	[predicate(_,own,named(John),A)-1,predicate(_,like,named(Mary),A)-1,object(A,car,countable,na,leq,2)-1]
001985 A dog """ barks.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001986 A dog " barks.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001987 A dog """" barks.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001988 A dog """"" barks.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001989 Every man's car contains an instruction that codes its development.
fof(f1, axiom, (
! [A,B] : (((man(A)) &
((relation(B,of,A)) &
(car(B))))
=> (? [C,D,E,F] : ((instruction(C)) &
((relation(D,of,B)) &
((development(D)) &
((predicate2(E,code,C,D)) &
(predicate2(F,contain,B,C)))))))))).
001990 Every cellular n:life-form's n:DNA contains some a:genetic n:instructions that code its a:biological n:development.
fof(f1, axiom, (
! [A,B] : ((('life-form'(A)) &
((property1(A,cellular,pos)) &
((relation(B,of,A)) &
('DNA'(B)))))
=> (? [C,D,E,F] : ((object(C,instructions,countable,na,geq,2)) &
((property1(C,genetic,pos)) &
((relation(D,of,B)) &
((development(D)) &
((property1(D,biological,pos)) &
((predicate2(E,code,C,D)) &
(predicate2(F,contain,B,C)))))))))))).
001991 There are less than 0 cars.
ERROR	DRS condition not supported: [|]	tptp/4	[object(_,car,countable,na,less,0)-1/6]
001992 There are more than 0 cars.
fof(f1, axiom, (
? [A] : (object(A,car,countable,na,greater,0)))).
001993 There are at least 0 cars.
fof(f1, axiom, (
? [A] : (object(A,car,countable,na,geq,0)))).
001994 There are at most 0 cars.
ERROR	DRS condition not supported: [|]	tptp/4	[object(_,car,countable,na,leq,0)-1/6]
001995 No man owns at least 0 cars.
fof(f1, axiom, (
! [A] : ((man(A))
=> (~(? [B,C] : ((object(B,car,countable,na,geq,0)) &
(predicate2(C,own,A,B)))))))).
001996 John owns -2 kg of apples.
ERROR	DRS is empty	apply_converter/2	drs([],[])
001997 There are 0 cars.
fof(f1, axiom, (
? [A] : (object(A,car,countable,na,eq,0)))).
001998 There are 0 kg of apples.
fof(f1, axiom, (
? [A] : (object(A,apple,countable,kg,eq,0)))).
001999 Every man's car contains an instruction that codes his development.
fof(f1, axiom, (
! [A,B] : (((man(A)) &
((relation(B,of,A)) &
(car(B))))
=> (? [C,D,E,F] : ((instruction(C)) &
((relation(D,of,A)) &
((development(D)) &
((predicate2(E,code,C,D)) &
(predicate2(F,contain,B,C)))))))))).
002000 Every man's car contains an instruction that codes its own development.
fof(f1, axiom, (
! [A,B] : (((man(A)) &
((relation(B,of,A)) &
(car(B))))
=> (? [C,D,E,F] : ((instruction(C)) &
((relation(D,of,C)) &
((development(D)) &
((predicate2(E,code,C,D)) &
(predicate2(F,contain,B,C)))))))))).
002001 Every man's car contains some instructions that code its own development.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002002 At least one man waits. At least 2 women sleep.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,wait,B)) &
(object(B,man,countable,na,geq,1))))).

fof(f2, axiom, (
? [A,B] : ((predicate1(A,sleep,B)) &
(object(B,woman,countable,na,geq,2))))).
002003 At most one man waits. At most 2 women sleep.
ERROR	DRS condition not supported: [|]	tptp/4	[predicate(_,wait,A)-1,object(A,man,countable,na,leq,1)-1]
002004 More than one man waits. More than 2 women sleep.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,wait,B)) &
(object(B,man,countable,na,greater,1))))).

fof(f2, axiom, (
? [A,B] : ((predicate1(A,sleep,B)) &
(object(B,woman,countable,na,greater,2))))).
002005 Less than one man waits. Less than 2 women sleep.
ERROR	DRS condition not supported: [|]	tptp/4	[predicate(_,wait,A)-1,object(A,man,countable,na,less,1)-1]
002006 Mary is not a woman who likes an apple.
fof(f1, axiom, (
~(? [A,B,C] : (('Mary'=A) &
((predicate2(C,like,A,B)) &
((woman(A)) &
(apple(B)))))))).
002007 If a car X sees a branch Y and it is false that X sees a rental and that X sees a service then X sees the branch Y.
fof(f1, axiom, (
! [A,B,C] : (((car(A)) &
((branch(B)) &
((predicate2(C,see,A,B)) &
(~(? [D,E,F,G] : ((rental(D)) &
((predicate2(E,see,A,D)) &
((service(F)) &
(predicate2(G,see,A,F))))))))))
=> (? [H] : (predicate2(H,see,A,B)))))).
002008 If a car X sees a branch Y and it is false that X is something Z that sees a rental and that Z sees a service then X sees the branch Y.
fof(f1, axiom, (
! [A,B,C] : (((car(A)) &
((branch(B)) &
((predicate2(C,see,A,B)) &
(~(? [D,E,F,G,H] : (($true) &
((A=D) &
((rental(E)) &
((predicate2(F,see,D,E)) &
((service(G)) &
(predicate2(H,see,D,G))))))))))))
=> (? [I] : (predicate2(I,see,A,B)))))).
002009 Every program that calls a program that calls a program calls itself.
fof(f1, axiom, (
! [A,B,C,D,E] : (((program(A)) &
((program(B)) &
((program(C)) &
((predicate2(D,call,B,C)) &
(predicate2(E,call,A,B))))))
=> (? [F] : (predicate2(F,call,A,A)))))).
002010 Everything that knows something that hears something sees itself.
fof(f1, axiom, (
! [A,B,C,D,E] : ((($true) &
(($true) &
(($true) &
((predicate2(D,hear,B,C)) &
(predicate2(E,know,A,B))))))
=> (? [F] : (predicate2(F,see,A,A)))))).
002011 A man that sees a boy that waits hears himself.
fof(f1, axiom, (
? [A,B,C,D,E] : ((predicate2(A,hear,B,B)) &
((predicate2(C,see,B,D)) &
((predicate1(E,wait,D)) &
((boy(D)) &
(man(B)))))))).
002012 Every man gives every woman every apple.
fof(f1, axiom, (
! [A] : ((man(A))
=> (! [B] : ((woman(B))
=> (! [C] : ((apple(C))
=> (? [D] : (predicate3(D,give,A,C,B)))))))))).
002013 If there is a man X1 then if there is a woman X2 then if there is an apple X3 then the man X1 gives the woman X2 the apple X3.
fof(f1, axiom, (
! [A] : ((man(A))
=> (! [B] : ((woman(B))
=> (! [C] : ((apple(C))
=> (? [D] : (predicate3(D,give,A,C,B)))))))))).
002014 If someone owns something that contains something X then he/she owns X.
fof(f1, axiom, (
! [A,B,C,D,E] : ((($true) &
(($true) &
(($true) &
((predicate2(D,contain,B,C)) &
(predicate2(E,own,A,B))))))
=> (? [F] : (predicate2(F,own,A,C)))))).
002015 There is a man who Mary is seen by.
fof(f1, axiom, (
? [A,B] : ((predicate2(A,see,B,'Mary')) &
(man(B))))).
002016 John, wait!
ERROR	DRS condition not supported: command	tptp/4	command(drs([A],[predicate(A,wait,named(John))-1/3]))
002017 John enter the house!
ERROR	DRS is empty	apply_converter/2	drs([],[])
002018 men wait.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002019 There is a man who does not see every dog that he sees. A man who sees a dog and who does not see the dog waits.
fof(f1, axiom, (
? [A] : ((~(! [B,C] : (((dog(B)) &
(predicate2(C,see,A,B)))
=> (? [D] : (predicate2(D,see,A,B)))))) &
(man(A))))).

fof(f2, axiom, (
? [A,B,C,D] : ((predicate1(A,wait,B)) &
((~(? [E] : (predicate2(E,see,B,D)))) &
((predicate2(C,see,B,D)) &
((dog(D)) &
(man(B)))))))).
002020 Who of a man waits?
ERROR	DRS is empty	apply_converter/2	drs([],[])
002021 Proposition P: Mary sleeps. Proposition P: Mary waits.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002022 Proposition P: It is false that P.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002023 Proposition P: It is false that P. John believes that P.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002024 Proposition P: It is false that Q. Proposition Q: It is false that P.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002025 It is true that P.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002026 Proposition P: Mary sleeps. It is true that Q.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002027 Proposition P: Mary sleeps. It is true that P. It is false that P. John believes that P.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002028 A man's who waits?
ERROR	DRS is empty	apply_converter/2	drs([],[])
002029 Every customer can access every public resource.
ERROR	DRS condition not supported: can	tptp/4	can(drs([],[drs([A],[object(A,resource,countable,na,eq,1)-1/7,property(A,public,pos)-1/6])=>drs([B],[predicate(B,access,_,A)-1/4])]))
002030 A dog is interested-in a bone and bad.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002031 John, buy a car!
ERROR	DRS condition not supported: command	tptp/4	command(drs([A,B],[object(A,car,countable,na,eq,1)-1/5,predicate(B,buy,named(John),A)-1/3]))
002032 John, buys a car!
ERROR	DRS is empty	apply_converter/2	drs([],[])
002033 John buy a car!
ERROR	DRS is empty	apply_converter/2	drs([],[])
002034 John buys a car!
ERROR	DRS is empty	apply_converter/2	drs([],[])
002035 Buy a car!
ERROR	DRS is empty	apply_converter/2	drs([],[])
002036 John, buy a car! Bill, buy a car!
ERROR	DRS condition not supported: command	tptp/4	command(drs([A,B],[object(A,car,countable,na,eq,1)-1/5,predicate(B,buy,named(John),A)-1/3]))
002037 A man, buy a car!
ERROR	DRS condition not supported: command	tptp/4	command(drs([A,B,C],[object(A,man,countable,na,eq,1)-1/2,object(B,car,countable,na,eq,1)-1/6,predicate(C,buy,A,B)-1/4]))
002038 Every man, buy a car!
ERROR	DRS condition not supported: command	tptp/4	command(drs([],[drs([A],[object(A,man,countable,na,eq,1)-1/2])=>drs([B,C],[object(B,car,countable,na,eq,1)-1/6,predicate(C,buy,A,B)-1/4])]))
002039 No man, buy a car!
ERROR	DRS is empty	apply_converter/2	drs([],[])
002040 A man that waits, buy a car!
ERROR	DRS condition not supported: command	tptp/4	command(drs([A,B,C,D],[object(A,man,countable,na,eq,1)-1/2,predicate(B,wait,A)-1/4,object(C,car,countable,na,eq,1)-1/8,predicate(D,buy,A,C)-1/6]))
002041 John and Mary, buy a car!
ERROR	DRS condition not supported: command	tptp/4	command(drs([B,C,A],[has_part(A,named(John))-1/,object(B,car,countable,na,eq,1)-1/7,predicate(C,buy,A,B)-1/5,has_part(A,named(Mary))-1/,object(A,na,countable,na,eq,2)-1/]))
002042 Some customers, buy a car!
ERROR	DRS condition not supported: command	tptp/4	command(drs([A,B,C],[object(A,customer,countable,na,geq,2)-1/2,object(B,car,countable,na,eq,1)-1/6,predicate(C,buy,A,B)-1/4]))
002043 John, be loved by Mary!
ERROR	DRS is empty	apply_converter/2	drs([],[])
002044 John, do not touch the machine!
ERROR	DRS condition not supported: command	tptp/4	command(drs([],[-drs([A,B],[predicate(A,touch,named(John),B)-1/5,object(B,machine,countable,na,eq,1)-1/7])]))
002045 John, hit himself!
ERROR	DRS is empty	apply_converter/2	drs([],[])
002046 John, hit yourself!
ERROR	DRS condition not supported: command	tptp/4	command(drs([A],[predicate(A,hit,named(John),named(John))-1/3]))
002047 John, sell your own car!
ERROR	DRS condition not supported: command	tptp/4	command(drs([A,B],[relation(A,of,named(John))-1/4,object(A,car,countable,na,eq,1)-1/6,predicate(B,sell,named(John),A)-1/3]))
002048 John, buy a dog that likes you!
ERROR	DRS condition not supported: command	tptp/4	command(drs([A,B,C],[object(A,dog,countable,na,eq,1)-1/5,predicate(B,like,A,named(John))-1/7,predicate(C,buy,named(John),A)-1/3]))
002049 John, buy a dog that is owned by Bill and that likes him!
ERROR	DRS condition not supported: command	tptp/4	command(drs([A,B,C,D],[object(A,dog,countable,na,eq,1)-1/5,predicate(B,own,named(Bill),A)-1/8,predicate(C,like,A,named(Bill))-1/13,predicate(D,buy,named(John),A)-1/3]))
002050 John, buy a dog that is owned by Bill and that likes you!
ERROR	DRS condition not supported: command	tptp/4	command(drs([A,B,C,D],[object(A,dog,countable,na,eq,1)-1/5,predicate(B,own,named(Bill),A)-1/8,predicate(C,like,A,named(John))-1/13,predicate(D,buy,named(John),A)-1/3]))
002051 No dogs bark.
fof(f1, axiom, (
! [A] : ((dog(A))
=> (~(? [B] : (predicate1(B,bark,A))))))).
002052 All dogs bark.
fof(f1, axiom, (
! [A] : ((dog(A))
=> (? [B] : (predicate1(B,bark,A)))))).
002053 For all dogs a man waits.
fof(f1, axiom, (
! [A] : ((dog(A))
=> (? [B,C] : ((man(B)) &
(predicate1(C,wait,B))))))).
002054 Not all dogs bark.
fof(f1, axiom, (
~(! [A] : ((dog(A))
=> (? [B] : (predicate1(B,bark,A))))))).
002055 For all dogs a man sees the dogs.
fof(f1, axiom, (
! [A] : ((dog(A))
=> (? [B,C] : ((man(B)) &
(predicate2(C,see,B,A))))))).
002056 For all sand a man sees the sand.
fof(f1, axiom, (
! [A] : ((object(A,sand,mass,na,na,na))
=> (? [B,C] : ((man(B)) &
(predicate2(C,see,B,A))))))).
002057 For all dog a man waits.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002058 There is a dog. For all dogs a man sees the dog.
fof(f1, axiom, (
? [A] : ((! [B] : ((dog(B))
=> (? [C,D] : ((man(C)) &
(predicate2(D,see,C,A)))))) &
(dog(A))))).
002059 There is a dog. For every dog a man sees the dog.
fof(f1, axiom, (
? [A] : (dog(A)))).

fof(f2, axiom, (
! [A] : ((dog(A))
=> (? [B,C] : ((man(B)) &
(predicate2(C,see,B,A))))))).
002060 All laundry are wet.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002061 All laundries is wet.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002062 All laundries are wet.
fof(f1, axiom, (
! [A] : ((laundry(A))
=> (? [B] : ((property1(B,wet,pos)) &
(A=B)))))).
002063 All laundry is wet.
fof(f1, axiom, (
! [A] : ((object(A,laundry,mass,na,na,na))
=> (? [B] : ((property1(B,wet,pos)) &
(A=B)))))).
002064 All men meet themselves.
fof(f1, axiom, (
! [A] : ((man(A))
=> (? [B] : (predicate2(B,meet,A,A)))))).
002065 The card of John is the card of Bill.
fof(f1, axiom, (
? [A,B] : ((card(A)) &
((card(B)) &
((B=A) &
((relation(A,of,'Bill')) &
(relation(B,of,'John')))))))).
002066 John sleeps in the park from the morning until the evening.
fof(f1, axiom, (
? [A,B,C,D] : ((evening(A)) &
((morning(B)) &
((park(C)) &
((modifier_pp(D,until,A)) &
((modifier_pp(D,from,B)) &
((modifier_pp(D,in,C)) &
(predicate1(D,sleep,'John')))))))))).
002067 A user can pay a resource through p:fast-pay.
ERROR	DRS condition not supported: can	tptp/4	can(drs([A,B],[object(A,resource,countable,na,eq,1)-1/6,predicate(B,pay,_,A)-1/4,modifier_pp(B,through,named(fast-pay))-1/7]))
002068 John's dog eats. Mary's dog drinks. A dog of John waits.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,eat,B)) &
((dog(B)) &
(relation(B,of,'John')))))).

fof(f2, axiom, (
? [A,B] : ((predicate1(A,drink,B)) &
((dog(B)) &
(relation(B,of,'Mary')))))).

fof(f3, axiom, (
? [A,B] : ((predicate1(A,wait,B)) &
((relation(B,of,'John')) &
(dog(B)))))).
002069 There is a man. John enters every card which is his card.
fof(f1, axiom, (
? [A] : (man(A)))).

fof(f2, axiom, (
! [A,B] : (((card(A)) &
((relation(B,of,'John')) &
((card(B)) &
(A=B))))
=> (? [C] : (predicate2(C,enter,'John',A)))))).
002070 There is a man whose dog barks. There is a woman whose dog barks.
fof(f1, axiom, (
? [A,B,C] : ((predicate1(A,bark,B)) &
((relation(B,of,C)) &
((dog(B)) &
(man(C))))))).

fof(f2, axiom, (
? [A,B,C] : ((predicate1(A,bark,B)) &
((relation(B,of,C)) &
((dog(B)) &
(woman(C))))))).
002071 If someone eats something X then he/she owns X.
fof(f1, axiom, (
! [A,B,C] : ((($true) &
(($true) &
(predicate2(C,eat,A,B))))
=> (? [D] : (predicate2(D,own,A,B)))))).
002072 There is a man whose dog barks and whose cat eats.
fof(f1, axiom, (
? [A,B,C,D,E] : ((cat(A)) &
((predicate1(B,eat,A)) &
((relation(A,of,C)) &
((dog(D)) &
((predicate1(E,bark,D)) &
((relation(D,of,C)) &
(man(C)))))))))).
002073 John works in a bank and a morning.
fof(f1, axiom, (
? [A,B,C,D] : ((object(A,na,countable,na,eq,2)) &
((has_part(A,B)) &
((has_part(A,C)) &
((modifier_pp(D,in,A)) &
((predicate1(D,work,'John')) &
((bank(C)) &
(morning(B)))))))))).
002074 The password of an account is known by the owner of the account.
fof(f1, axiom, (
? [A,B,C,D] : ((owner(A)) &
((relation(A,of,B)) &
((password(C)) &
((account(B)) &
((relation(C,of,B)) &
(predicate2(D,know,A,C))))))))).
002075 John is considered a criminal.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002076 Everything "Go!" waits.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002077 Everybody of John's dog waits.
fof(f1, axiom, (
! [A,B] : (((relation(A,of,'John')) &
((dog(A)) &
((relation(B,of,A)) &
($true))))
=> (? [C] : (predicate1(C,wait,B)))))).
002078 There is a man. Everybody of his dog waits.
fof(f1, axiom, (
? [A] : (man(A)))).

fof(f2, axiom, (
! [A,B] : ((($true) &
((relation(B,of,A)) &
((dog(B)) &
(relation(A,of,B)))))
=> (? [C] : (predicate1(C,wait,A)))))).
002079 Everybody of his dog waits.
fof(f1, axiom, (
! [A,B] : ((($true) &
((relation(B,of,A)) &
((dog(B)) &
(relation(A,of,B)))))
=> (? [C] : (predicate1(C,wait,A)))))).
002080 Everybody of his own dog waits.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002081 Everybody X of a dog of X waits.
fof(f1, axiom, (
! [A,B] : (((dog(A)) &
((relation(A,of,B)) &
((relation(B,of,A)) &
($true))))
=> (? [C] : (predicate1(C,wait,B)))))).
002082 There is a vehicle which is a red Ford.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002083 John knows that Bill is Mary.
ERROR	DRS condition not supported: :	tptp/4	_:drs([A],[predicate(A,be,named(Bill),named(Mary))-1])
002084 Every man whose car a cat sees smiles.
fof(f1, axiom, (
! [A,B,C,D] : (((man(A)) &
((cat(B)) &
((relation(C,of,A)) &
((car(C)) &
(predicate2(D,see,B,C))))))
=> (? [E] : (predicate1(E,smile,A)))))).
002085 Every man a car of who a cat sees smiles.
fof(f1, axiom, (
! [A,B,C,D] : (((man(A)) &
((cat(B)) &
((car(C)) &
((relation(C,of,A)) &
(predicate2(D,see,B,C))))))
=> (? [E] : (predicate1(E,smile,A)))))).
002086 John is every man.
fof(f1, axiom, (
! [A] : ((man(A))
=> ('John'=A)))).
002087 How does every man wait?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,how)
002088 2 kg of some apples wait.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002089 A man whose dog barks waits. The man eats.
fof(f1, axiom, (
? [A,B,C,D,E] : ((predicate1(A,eat,B)) &
((predicate1(C,wait,B)) &
((predicate1(D,bark,E)) &
((relation(E,of,B)) &
((dog(E)) &
(man(B))))))))).
002090 A man whose dog barks waits. The dog of a man eats.
fof(f1, axiom, (
? [A,B,C,D,E] : ((predicate1(A,eat,B)) &
((predicate1(C,wait,D)) &
((predicate1(E,bark,B)) &
((relation(B,of,D)) &
((dog(B)) &
(man(D))))))))).
002091 A man whose dog barks waits. The dog of the man eats.
fof(f1, axiom, (
? [A,B,C,D,E] : ((predicate1(A,eat,B)) &
((predicate1(C,wait,D)) &
((predicate1(E,bark,B)) &
((relation(B,of,D)) &
((dog(B)) &
(man(D))))))))).
002092 How does who see what?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,who)
002093 For all men a dog barks.
fof(f1, axiom, (
! [A] : ((man(A))
=> (? [B,C] : ((dog(B)) &
(predicate1(C,bark,B))))))).
002094 Everybody whose dog barks or whose cat eats waits.
fof(f1, axiom, (
! [A] : (((? [B,C] : (((dog(B)) &
((relation(B,of,A)) &
(predicate1(C,bark,B))))
| (? [D,E] : ((cat(D)) &
((relation(D,of,A)) &
(predicate1(E,eat,D))))))) &
($true))
=> (? [F] : (predicate1(F,wait,A)))))).
002095 If there is somebody X1, and a dog of X1 barks or a cat of X1 eats then X1 waits.
fof(f1, axiom, (
! [A] : ((($true) &
(? [B,C] : (((dog(B)) &
((relation(B,of,A)) &
(predicate1(C,bark,B))))
| (? [D,E] : ((cat(D)) &
((relation(D,of,A)) &
(predicate1(E,eat,D))))))))
=> (? [F] : (predicate1(F,wait,A)))))).
002096 p:Pi is a ratio. p:Pi is a ratio.
fof(f1, axiom, (
? [A] : (('Pi'=A) &
(ratio(A))))).

fof(f2, axiom, (
? [A] : (('Pi'=A) &
(ratio(A))))).
002097 Every empty string is "".
fof(f1, axiom, (
! [A] : (((string(A)) &
(property1(A,empty,pos)))
=> (A=string(''))))).
002098 A space is " ".
fof(f1, axiom, (
? [A] : ((A=string(' ')) &
(space(A))))).
002099 1 men wait.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002100 1 man waits.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,wait,B)) &
(man(B))))).
002101 There are more than 1 dog.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002102 There is more than 1 dog.
fof(f1, axiom, (
? [A] : (object(A,dog,countable,na,greater,1)))).
002103 For all cats a man sleeps.
fof(f1, axiom, (
! [A] : ((cat(A))
=> (? [B,C] : ((man(B)) &
(predicate1(C,sleep,B))))))).
002104 John is a man. John is a man.
fof(f1, axiom, (
? [A] : (('John'=A) &
(man(A))))).

fof(f2, axiom, (
? [A] : (('John'=A) &
(man(A))))).
002105 No men are some humans.
fof(f1, axiom, (
! [A] : ((man(A))
=> (~(? [B] : ((object(B,human,countable,na,geq,2)) &
(A=B))))))).
002106 A man of some water waits.
fof(f1, axiom, (
? [A,B,C] : ((predicate1(A,wait,B)) &
((relation(B,of,C)) &
((object(C,water,mass,na,na,na)) &
(man(B))))))).
002107 There is some water a man of which waits.
fof(f1, axiom, (
? [A,B,C] : ((predicate1(A,wait,B)) &
((relation(B,of,C)) &
((man(B)) &
(object(C,water,mass,na,na,na))))))).
002108 There is some water whose man waits.
fof(f1, axiom, (
? [A,B,C] : ((predicate1(A,wait,B)) &
((relation(B,of,C)) &
((man(B)) &
(object(C,water,mass,na,na,na))))))).
002109 Every man owns a dog blahblah.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002110 There is a man that owns at least 3 cars. The man that owns at least 3 cars waits.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate1(A,wait,B)) &
((predicate2(C,own,B,D)) &
((object(D,car,countable,na,geq,3)) &
(man(B))))))).
002111 There are 10 hours of work.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002112 There is 1 kg of n:laundry.
fof(f1, axiom, (
? [A] : (laundry(A)))).
002113 There is more than 1 kg of laundry.
fof(f1, axiom, (
? [A] : (object(A,laundry,mass,kg,greater,1)))).
002114 14 is 15.
fof(f1, axiom, (
14=15)).
002115 "" is an empty string.
fof(f1, axiom, (
? [A] : ((string('')=A) &
((property1(A,empty,pos)) &
(string(A)))))).
002116 1 is 2.3 is 4.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002117 3.14 is a real.
fof(f1, axiom, (
? [A] : ((3.14=A) &
(real(A))))).
002118 There are 2 kg of apples of John.
fof(f1, axiom, (
? [A] : ((relation(A,of,'John')) &
(object(A,apple,countable,kg,eq,2))))).
002119 2.3 and 88 and "abc" are some values.
fof(f1, axiom, (
? [A,B] : ((object(A,na,countable,na,eq,3)) &
((has_part(A,string(abc))) &
((has_part(A,88)) &
((has_part(A,2.3)) &
((A=B) &
(object(B,value,countable,na,geq,2))))))))).
002120 "&" is a string.
fof(f1, axiom, (
? [A] : ((string(&)=A) &
(string(A))))).
002121 "<" is a string.
fof(f1, axiom, (
? [A] : ((string(<)=A) &
(string(A))))).
002122 John's n:home-page is "http://www.example.org/John".
fof(f1, axiom, (
? [A] : ((A=string('http://www.example.org/John')) &
(('home-page'(A)) &
(relation(A,of,'John')))))).
002123 1 is smaller than 2.
fof(f1, axiom, (
? [A] : ((1=A) &
(property2(A,small,comp_than,2))))).
002124 3.14 is a ratio of a circumference of a circle to its diameter.
fof(f1, axiom, (
? [A,B,C,D] : ((modifier_pp(E,to,A)) &
((3.14=B) &
((relation(B,of,C)) &
((relation(C,of,D)) &
((circle(D)) &
((diameter(A)) &
((relation(A,of,D)) &
((circumference(C)) &
(ratio(B)))))))))))).
002125 There is 5. It waits.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002126 There is 5.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002127 A man gives a woman "abc".
fof(f1, axiom, (
? [A,B,C] : ((predicate3(A,give,B,string(abc),C)) &
((woman(C)) &
(man(B)))))).
002128 If a dog of the master of somebody X barks then X sleeps.
fof(f1, axiom, (
! [A,B,C,D] : (((dog(A)) &
((relation(A,of,B)) &
((relation(B,of,C)) &
(($true) &
((master(B)) &
(predicate1(D,bark,A)))))))
=> (? [E] : (predicate1(E,sleep,C)))))).
002129 Every uncle of the children of somebody X is a brother of X.
fof(f1, axiom, (
! [A,B,C] : (((uncle(A)) &
((relation(A,of,B)) &
((relation(B,of,C)) &
(($true) &
(object(B,child,countable,na,geq,2))))))
=> (? [D] : ((brother(D)) &
((relation(D,of,C)) &
(A=D))))))).
002130 Every brother of somebody X is an uncle of the children of X.
fof(f1, axiom, (
! [A,B] : (((brother(A)) &
(($true) &
(relation(A,of,B))))
=> (? [C,D] : ((uncle(C)) &
((relation(C,of,D)) &
((relation(D,of,B)) &
((object(D,child,countable,na,geq,2)) &
(A=C))))))))).
002131 There is a man var:John.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002132 If X likes Y then Y likes X.
fof(f1, axiom, (
! [A,B,C] : ((($true) &
(($true) &
(predicate2(C,like,A,B))))
=> (? [D] : (predicate2(D,like,B,A)))))).
002133 If var:X likes var:Y then var:Y likes var:X.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002134 At least 2 scores of John are 30.
fof(f1, axiom, (
? [A] : ((A=30) &
((relation(A,of,'John')) &
(object(A,score,countable,na,geq,2)))))).
002135 At most 1 man's dog barks.
ERROR	DRS condition not supported: [|]	tptp/4	[predicate(_,bark,A)-1,object(A,dog,countable,na,eq,1)-1,relation(A,of,B)-1,object(B,man,countable,na,leq,1)-1]
002136 Everybody sees at most 1 thing.
ERROR	DRS condition not supported: [|]	tptp/4	[predicate(_,see,_,A)-1,object(A,thing,countable,na,leq,1)-1]
002137 Every goal is something that at most 1 person scores.
ERROR	DRS condition not supported: [|]	tptp/4	[predicate(_,score,A,_)-1,object(A,person,countable,na,leq,1)-1]
002138 It is false that there is 1 man.
fof(f1, axiom, (
~(? [A] : (man(A))))).
002139 A man X gives an apple to a woman Y. Y accepts the apple and eats it. She is happy and he has no apple.
fof(f1, axiom, (
? [A,B,C,D,E,F,G] : ((! [H] : ((apple(H))
=> (~(? [I] : (predicate2(I,have,G,H)))))) &
((A=B) &
((property1(B,happy,pos)) &
((predicate2(C,eat,A,D)) &
((predicate2(E,accept,A,D)) &
((predicate3(F,give,G,D,A)) &
((woman(A)) &
((apple(D)) &
(man(G)))))))))))).
002140 John gives an apple to Mary. Mary accepts the apple and eats it. She is happy and he has no apple.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate2(A,eat,'Mary',B)) &
((predicate2(C,accept,'Mary',B)) &
((predicate3(D,give,'John',B,'Mary')) &
(apple(B))))))).

fof(f2, axiom, (
! [A] : ((apple(A))
=> (~(? [B] : (predicate2(B,have,'John',A))))))).

fof(f3, axiom, (
? [A] : (('Mary'=A) &
(property1(A,happy,pos))))).
002141 A text is read John.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002142 3.14 is real.
fof(f1, axiom, (
? [A] : ((3.14=A) &
(property1(A,real,pos))))).
002143 There is 1 hour of work.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002144 There is 10 hour of work.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002145 There are 10 hour of work.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002146 There is 10 hours of work.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002147 There is 1 hours of work.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002148 There are 1 hour of work.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002149 There are 1 hours of work.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002150 Every age of a man is an integer.
fof(f1, axiom, (
! [A,B] : (((age(A)) &
((man(B)) &
(relation(A,of,B))))
=> (? [C] : ((integer(C)) &
(A=C)))))).
002151 A card of somebody is valid.
fof(f1, axiom, (
? [A,B,C] : ((A=B) &
((property1(B,valid,pos)) &
((relation(A,of,C)) &
(($true) &
(card(A)))))))).
002152 " " is a string.
fof(f1, axiom, (
? [A] : ((string(' ')=A) &
(string(A))))).
002153 John eats. He who waits has a dog.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002154 John has a card. He who waits uses it which is valid.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002155 John has a card. He that waits uses it that is valid.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002156 Who who waits sleeps?
ERROR	DRS is empty	apply_converter/2	drs([],[])
002157 John eats. He which waits has a dog.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002158 John has a card. He uses it who is valid.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002159 Who that waits sleeps?
ERROR	DRS is empty	apply_converter/2	drs([],[])
002160 Who which waits sleeps?
ERROR	DRS is empty	apply_converter/2	drs([],[])
002161 What which succeeds exists?
ERROR	DRS is empty	apply_converter/2	drs([],[])
002162 There is a man. He whose dog barks waits.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002163 John owns a car that Mary likes and that Bill likes.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate2(A,own,'John',B)) &
((predicate2(C,like,'Bill',B)) &
((predicate2(D,like,'Mary',B)) &
(car(B))))))).
002164 John sees someone X of a customer who is important.
fof(f1, axiom, (
? [A,B,C,D] : ((relation(A,of,B)) &
((B=C) &
((property1(C,important,pos)) &
((customer(B)) &
((predicate2(D,see,'John',A)) &
($true)))))))).
002165 a man sees Every dog and If There is A dog then The dog Is An animal.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002166 Whose dog barks.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002167 whose dog barks?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,what)
002168 Whose dog barks?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,what)
002169 John is as important as Mary.
fof(f1, axiom, (
? [A] : (('John'=A) &
(property2(A,important,pos_as,'Mary'))))).
002170 An as important as Mary customer.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002171 There is an as important as Mary customer.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002172 John is more important.
fof(f1, axiom, (
? [A] : (('John'=A) &
(property1(A,important,comp))))).
002173 There is a more important person.
fof(f1, axiom, (
? [A] : ((property1(A,important,comp)) &
(person(A))))).
002174 John is most important.
fof(f1, axiom, (
? [A] : (('John'=A) &
(property1(A,important,sup))))).
002175 There is a most important person.
fof(f1, axiom, (
? [A] : ((property1(A,important,sup)) &
(person(A))))).
002176 John is more fond-of Mary.
fof(f1, axiom, (
? [A] : (('John'=A) &
(property2(A,'fond-of',comp,'Mary'))))).
002177 There is a more fond-of Mary person.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002178 John is as fond-of Mary as Bill.
fof(f1, axiom, (
? [A] : (('John'=A) &
(property3(A,'fond-of','Mary',pos_as,subj,'Bill'))))).
002179 John is as fond-of Mary as of Bill.
fof(f1, axiom, (
? [A] : (('John'=A) &
(property3(A,'fond-of','Mary',pos_as,obj,'Bill'))))).
002180 John is more fond-of Mary than Bill.
fof(f1, axiom, (
? [A] : (('John'=A) &
(property3(A,'fond-of','Mary',comp_than,subj,'Bill'))))).
002181 John is more fond-of Mary than of Bill.
fof(f1, axiom, (
? [A] : (('John'=A) &
(property3(A,'fond-of','Mary',comp_than,obj,'Bill'))))).
002182 John is more fond-of no customer than every clerk.
fof(f1, axiom, (
! [A] : ((customer(A))
=> (~(! [B] : ((clerk(B))
=> (? [C] : ((property3(C,'fond-of',A,comp_than,subj,B)) &
('John'=C))))))))).
002183 John is fond-of Mary than Bill.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002184 John is most fond-of Mary than Bill.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002185 John is rich and richer and richest.
fof(f1, axiom, (
? [A] : (('John'=A) &
((property1(A,rich,sup)) &
((property1(A,rich,comp)) &
(property1(A,rich,pos))))))).
002186 John and Mary wait.
fof(f1, axiom, (
? [A,B] : ((object(A,na,countable,na,eq,2)) &
((has_part(A,'Mary')) &
((predicate1(B,wait,A)) &
(has_part(A,'John'))))))).
002187 If a man likes somebody that is a person then the person owns a car.
fof(f1, axiom, (
! [A,B,C,D] : (((man(A)) &
(($true) &
((predicate2(C,like,A,B)) &
((person(D)) &
(B=D)))))
=> (? [E,F] : ((car(E)) &
(predicate2(F,own,D,E))))))).
002188 John snores loudly and loudly loudly and most loudly.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002189 if the n:present-value of a n:lease-payment of an asset is greater than 90 percent of something of the fair value of the asset then the asset is a n:finance-lease.
fof(f1, axiom, (
! [A,B,C,D,E,F,G] : (((object(A,percent,countable,na,eq,90)) &
(($true) &
((relation(B,of,C)) &
((relation(A,of,B)) &
((property2(D,great,comp_than,A)) &
((E=D) &
((relation(E,of,F)) &
((relation(F,of,G)) &
((asset(G)) &
(('lease-payment'(F)) &
(('present-value'(E)) &
((relation(C,of,G)) &
((property1(C,fair,pos)) &
(value(C)))))))))))))))
=> (? [H] : (('finance-lease'(H)) &
(G=H)))))).
002190 No man is something that likes Mary and hates John.
fof(f1, axiom, (
! [A] : ((man(A))
=> (~(? [B,C,D] : (($true) &
((A=B) &
((predicate2(C,like,B,'Mary')) &
(predicate2(D,hate,A,'John')))))))))).
002191 No man is something that likes Mary and that hates John.
fof(f1, axiom, (
! [A] : ((man(A))
=> (~(? [B,C,D] : (($true) &
((A=B) &
((predicate2(C,like,B,'Mary')) &
(predicate2(D,hate,B,'John')))))))))).
002192 John does not see less than 3 cars that Bill owns.
ERROR	DRS condition not supported: [|]	tptp/4	[predicate(_,see,named(John),A)-1,predicate(_,own,named(Bill),A)-1,object(A,car,countable,na,less,3)-1]
002193 A man slooowly walks.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002194 John is manually in a park.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002195 there is a dog which barks and that eats.
fof(f1, axiom, (
? [A,B,C] : ((predicate1(A,eat,B)) &
((predicate1(C,bark,B)) &
(dog(B)))))).
002196 There are not at most 5 men.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002197 There are not at least 5 men.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002198 3.1415926536 approximates Pi.
fof(f1, axiom, (
? [A] : (predicate2(A,approximate,3.1415926536,'Pi')))).
002199 John waits. He that sleeps waits.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002200 How is John?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,how)
002201 Xxx are a company.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002202 A card is taken manually by John.
fof(f1, axiom, (
? [A,B] : ((modifier_adv(C,manually,pos)) &
((modifier_pp(C,by,'John')) &
((A=B) &
((property1(B,taken,pos)) &
(card(A)))))))).
002203 There are 1234.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002204 There are "ABCD".
ERROR	DRS is empty	apply_converter/2	drs([],[])
002205 There are 1 and "2" and 3.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002206 Jimmy's dog barks.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,bark,B)) &
((dog(B)) &
(relation(B,of,'Jimmy')))))).
002207 For all men the man likes himself.
fof(f1, axiom, (
! [A] : ((man(A))
=> (? [B,C] : ((man(C)) &
(predicate2(B,like,C,C))))))).
002208 A man has 2 tons of apples.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002209 A man visits a town ZZZZZ1.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002210 All men see themselves.
fof(f1, axiom, (
! [A] : ((man(A))
=> (? [B] : (predicate2(B,see,A,A)))))).
002211 All men sees himself.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002212 All men see himself.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002213 John waits. All men see him.
fof(f1, axiom, (
? [A] : (predicate1(A,wait,'John')))).

fof(f2, axiom, (
! [A] : ((man(A))
=> (? [B] : (predicate2(B,see,A,'John')))))).
002214 John waits. All men see himself.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002215 John waits. Some men see himself.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002216 John does not see anybody.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002217 John waits. A man brings him his pencil and his own computer.
fof(f1, axiom, (
? [A] : (predicate1(A,wait,'John')))).

fof(f2, axiom, (
? [A,B,C,D,E] : ((man(A)) &
((relation(B,of,'John')) &
((pencil(B)) &
((predicate3(C,bring,A,D,'John')) &
((relation(E,of,A)) &
((computer(E)) &
((has_part(D,B)) &
((has_part(D,E)) &
(object(D,na,countable,na,eq,2)))))))))))).
002218 Everybody who is a father of a man that owns a car is a parent.
fof(f1, axiom, (
! [A,B,C,D,E] : (((father(A)) &
((man(B)) &
((car(C)) &
((predicate2(D,own,B,C)) &
((relation(A,of,B)) &
((E=A) &
($true)))))))
=> (? [F] : ((parent(F)) &
(E=F)))))).
002219 Every pet is something that is a cat or that is a dog, and that is not something that is a cat and that is a dog.
fof(f1, axiom, (
! [A] : ((pet(A))
=> (? [B] : (($true) &
((? [C] : (((cat(C)) &
(B=C))
| (? [D] : ((dog(D)) &
(B=D))))) &
((~(? [E,F,G] : (($true) &
((cat(F)) &
((E=F) &
((dog(G)) &
((E=G) &
(B=E)))))))) &
(A=B)))))))).
002220 Every n:influent-stream is something that v:flows-into a cave and that v:flows-through a sink or that v:discharges-through something.
fof(f1, axiom, (
! [A] : (('influent-stream'(A))
=> (? [B] : (($true) &
((A=B) &
(? [C,D,E,F] : (((cave(C)) &
((predicate2(D,'flows-into',B,C)) &
((sink(E)) &
(predicate2(F,'flows-through',B,E)))))
| (? [G,H] : (($true) &
(predicate2(H,'discharges-through',B,G)))))))))))).
002221 There is a man. John likes his a:own car.
fof(f1, axiom, (
? [A,B,C] : ((predicate2(A,like,'John',B)) &
((property1(B,own,pos)) &
((car(B)) &
((relation(B,of,C)) &
(man(C)))))))).
002222 France is something that is not America and that is not England and that is not Germany.
fof(f1, axiom, (
? [A] : (('France'=A) &
((~(A='Germany')) &
((~(A='England')) &
((~(A='America')) &
($true))))))).
002223 A man silently and patiently walks quickly and fast in a street manually and happily in a morning always.
fof(f1, axiom, (
? [A,B,C,D] : ((modifier_adv(A,patiently,pos)) &
((modifier_adv(A,silently,pos)) &
((modifier_adv(A,always,pos)) &
((modifier_pp(A,in,B)) &
((modifier_adv(A,happily,pos)) &
((modifier_adv(A,manually,pos)) &
((modifier_pp(A,in,C)) &
((modifier_adv(A,fast,pos)) &
((modifier_adv(A,quickly,pos)) &
((predicate1(A,walk,D)) &
((man(D)) &
((street(C)) &
(morning(B)))))))))))))))).
002224 Christmases like Mary.
fof(f1, axiom, (
? [A] : (predicate2(A,like,'Christmas','Mary')))).
002225 Who is a child X whose mother is somebody whose husband is somebody whose child is not the child X?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,who)
002226 John'age is 21.
fof(f1, axiom, (
? [A] : ((A=21) &
((age(A)) &
(relation(A,of,'John')))))).
002227 John's clerks carry their lunch into school.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002228 This is not an ACE text!!!
ERROR	DRS is empty	apply_converter/2	drs([],[])
002229 If a man likes a dog that likes a cat and the man likes a cow that likes a sheep then the man owns a car.
fof(f1, axiom, (
! [A,B,C,D,E,F,G,H,I] : (((man(A)) &
((dog(B)) &
((cat(C)) &
((predicate2(D,like,B,C)) &
((predicate2(E,like,A,B)) &
((cow(F)) &
((sheep(G)) &
((predicate2(H,like,F,G)) &
(predicate2(I,like,A,F))))))))))
=> (? [J,K] : ((car(J)) &
(predicate2(K,own,A,J))))))).
002230 If there is a man, and the man likes a dog that likes a cat or the man likes a cow that likes a sheep then the man owns a car.
fof(f1, axiom, (
! [A] : (((man(A)) &
(? [B,C,D,E] : (((dog(B)) &
((cat(C)) &
((predicate2(D,like,B,C)) &
(predicate2(E,like,A,B)))))
| (? [F,G,H,I] : ((cow(F)) &
((sheep(G)) &
((predicate2(H,like,F,G)) &
(predicate2(I,like,A,F)))))))))
=> (? [J,K] : ((car(J)) &
(predicate2(K,own,A,J))))))).
002231 There is a man that sees a woman that owns a cat. Who is the man? Who is the woman?
ERROR	DRS condition not supported: question	tptp/4	question(drs([A,B],[query(A,who)-3/1,predicate(B,be,A,_)-3/2]))
002232 What are some men?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,what)
002233 John is allowed to walk.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002234 Everyone who is in the n:cc of some mail can access its content.
ERROR	DRS condition not supported: can	tptp/4	can(drs([A,B],[relation(A,of,_)-1/15,object(A,content,countable,na,eq,1)-1/16,predicate(B,access,_,A)-1/14]))
002235 More than 3 clerks wait. John knows the clerks. Less than 2 clerks sit. John knows the clerks.
ERROR	DRS condition not supported: [|]	tptp/4	[predicate(_,sit,A)-3,object(A,clerk,countable,na,less,2)-3]
002236 p:Peeter owns a car.
fof(f1, axiom, (
? [A,B] : ((predicate2(A,own,'Peeter',B)) &
(car(B))))).
002237 John tries to walk.
ERROR	DRS condition not supported: :	tptp/4	_:drs([A],[predicate(A,walk,named(John))-1])
002238 John does not have to walk.
ERROR	DRS condition not supported: must	tptp/4	must(drs([A],[predicate(A,walk,named(John))-1/6]))
002239 Who does a dog see who is a man?
ERROR	DRS is empty	apply_converter/2	drs([],[])
002240 John sees what?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,what)
002241 If there are a man and a manager then the man is a:officially the manager.
fof(f1, axiom, (
! [A,B,C] : (((man(A)) &
((has_part(C,A)) &
((manager(B)) &
((has_part(C,B)) &
(object(C,na,countable,na,eq,2))))))
=> (? [D] : ((property2(D,officially,pos,B)) &
(A=D)))))).
002242 If there are a man and a manager then the man is often the manager.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002243 For every customer the customer has a card and the customer has a code.
fof(f1, axiom, (
! [A] : ((customer(A))
=> (? [B,C,D,E] : ((card(B)) &
((predicate2(C,have,A,B)) &
((code(D)) &
(predicate2(E,have,A,D))))))))).
002244 What does John not like?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,what)
002245 What John does not like?
ERROR	DRS is empty	apply_converter/2	drs([],[])
002246 if there is a declaration whose name is a user and whose password is a string and the string is the password of the user then the user is authenticated.
fof(f1, axiom, (
! [A,B,C,D,E,F] : (((relation(B,of,A)) &
((relation(D,of,A)) &
((relation(F,of,C)) &
((B=C) &
((D=E) &
((E=F) &
((declaration(A)) &
((name(B)) &
((user(C)) &
((password(D)) &
((string(E)) &
(password(F)))))))))))))
=> (? [G] : ((property1(G,authenticated,pos)) &
(C=G)))))).
002247 "
ERROR	DRS is empty	apply_converter/2	drs([],[])
002248 If the id of a user is valid then the user is authenticated.
fof(f1, axiom, (
! [A,B,C] : (((property1(A,valid,pos)) &
((B=A) &
((relation(B,of,C)) &
((user(C)) &
(id(B))))))
=> (? [D] : ((property1(D,authenticated,pos)) &
(C=D)))))).
002249 If a man likes Mary and Mary hates a dog then the man owns a car.
fof(f1, axiom, (
! [A,B,C,D] : (((man(A)) &
((predicate2(B,like,A,'Mary')) &
((dog(C)) &
(predicate2(D,hate,'Mary',C)))))
=> (? [E,F] : ((car(E)) &
(predicate2(F,own,A,E))))))).
002250 There is a customer such that the customer has a card and the customer has a code.
fof(f1, axiom, (
? [A,B,C,D,E] : ((predicate2(A,have,B,C)) &
((code(C)) &
((predicate2(D,have,B,E)) &
((card(E)) &
(customer(B)))))))).
002251 There is a man who does not provably eat. The man who does not provably eat drinks.
ERROR	DRS condition not supported: ~	tptp/4	~drs([A],[predicate(A,eat,_)-1])
002252 A child of who is a patricide whose child is somebody who is not a patricide?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,who)
002253 if a valid n:credential has an id type then the n:credential is an id.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002254 If a user is authenticated and his subscription covers a resource then the user can download the resource.
ERROR	DRS condition not supported: can	tptp/4	can(drs([A],[predicate(A,download,_,_)-1/16]))
002255 If a user is authenticated and pays for a resource then he can download it.
ERROR	DRS condition not supported: can	tptp/4	can(drs([A],[predicate(A,download,_,_)-1/14]))
002256 If a user is happy and pays for something then he can wait.
ERROR	DRS condition not supported: can	tptp/4	can(drs([A],[predicate(A,wait,_)-1/14]))
002257 Every customer has at least 2 cards and their associated codes. If a customer C approaches an automatic teller and she inserts her own card that is valid carefully into a slot and types a correct code of the card then the automatic teller accepts the card and displays "Card accepted" and C is happy. No card that does not have a correct code is accepted. It is false that a customer's card is valid, and is expired or is cancelled. If a card is not provably invalid then it is accepted. If a customer owns a card and can prove that it is lost then a bank must replace it.
ERROR	DRS condition not supported: ~	tptp/4	~drs([A,B],[property(A,invalid,pos)-5/7,predicate(B,be,_,A)-5/4])
002258 John does.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002259 If a user is happy and pays for something then he does not wait.
fof(f1, axiom, (
! [A,B,C,D] : (((user(A)) &
((property1(B,happy,pos)) &
((A=B) &
(($true) &
((predicate1(D,pay,A)) &
(modifier_pp(D,for,C)))))))
=> (~(? [E] : (predicate1(E,wait,A))))))).
002260 If a user is happy and pays for something then he sees everything.
fof(f1, axiom, (
! [A,B,C,D] : (((user(A)) &
((property1(B,happy,pos)) &
((A=B) &
(($true) &
((predicate1(D,pay,A)) &
(modifier_pp(D,for,C)))))))
=> (! [E] : (($true)
=> (? [F] : (predicate2(F,see,A,E)))))))).
002261 If a user charges the price of a resource then the user pays for the resource.
fof(f1, axiom, (
! [A,B,C,D] : (((user(A)) &
((predicate2(B,charge,A,C)) &
((relation(C,of,D)) &
((resource(D)) &
(price(C))))))
=> (? [E] : ((predicate1(E,pay,A)) &
(modifier_pp(E,for,D))))))).
002262 There is a price of a resource. The price of a resource is high. The resource is valid.
fof(f1, axiom, (
? [A,B,C,D] : ((A=B) &
((property1(B,valid,pos)) &
((C=D) &
((property1(D,high,pos)) &
((relation(C,of,A)) &
((resource(A)) &
(price(C)))))))))).
002263 A user is seen a clerk.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002264 If a user is charged the price of a resource then the user pays for the resource.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002265 Not for each of some men every dog of him barks.
fof(f1, axiom, (
~(? [A] : ((object(A,man,countable,na,geq,2)) &
(! [B] : ((has_part(A,B))
=> (! [C] : (((dog(C)) &
(relation(C,of,B)))
=> (? [D] : (predicate1(D,bark,C))))))))))).
002266 Not for each of some men every dog of the man barks.
fof(f1, axiom, (
~(? [A] : ((object(A,man,countable,na,geq,2)) &
(! [B] : ((has_part(A,B))
=> (! [C,D] : (((dog(C)) &
((relation(C,of,D)) &
(man(D))))
=> (? [E] : (predicate1(E,bark,C))))))))))).
002267 not each of 2 girls lifts a table.
fof(f1, axiom, (
~(? [A] : ((object(A,girl,countable,na,eq,2)) &
(! [B] : ((has_part(A,B))
=> (? [C,D] : ((table(C)) &
(predicate2(D,lift,B,C)))))))))).
002268 If there is a man then that John waits.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002269 if a user is happy and pays for something then he does not wait.
fof(f1, axiom, (
! [A,B,C,D] : (((user(A)) &
((property1(B,happy,pos)) &
((A=B) &
(($true) &
((predicate1(D,pay,A)) &
(modifier_pp(D,for,C)))))))
=> (~(? [E] : (predicate1(E,wait,A))))))).
002270 There is a man. He waits. His card is correct.
fof(f1, axiom, (
? [A,B,C,D] : ((A=B) &
((property1(B,correct,pos)) &
((card(A)) &
((relation(A,of,C)) &
((predicate1(D,wait,C)) &
(man(C))))))))).
002271 A man is seen by him.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002272 Him sees a man.
fof(f1, axiom, (
? [A,B] : ((predicate2(A,see,'Him',B)) &
(man(B))))).
002273 There is a man. John sees him. John checks his card. John sees a card in his hand.
fof(f1, axiom, (
? [A,B,C,D,E,F,G] : ((modifier_pp(A,in,B)) &
((predicate2(A,see,'John',C)) &
((card(C)) &
((hand(B)) &
((relation(B,of,D)) &
((predicate2(E,check,'John',F)) &
((card(F)) &
((relation(F,of,D)) &
((predicate2(G,see,'John',D)) &
(man(D))))))))))))).
002274 A man sees him.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002275 A woman checks her card.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002276 A man sees a card in his hand.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002277 John has a brother who he likes.
fof(f1, axiom, (
? [A,B,C] : ((predicate2(A,have,'John',B)) &
((predicate2(C,like,'John',B)) &
(brother(B)))))).
002278 A man sees a card of him.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002279 A man of his group sleeps.
fof(f1, axiom, (
? [A,B,C] : ((predicate1(A,sleep,B)) &
((relation(B,of,C)) &
((group(C)) &
((relation(C,of,B)) &
(man(B)))))))).
002280 A man sees himself. A woman enters her own card. A man is in his own garden.
fof(f1, axiom, (
? [A,B] : ((predicate2(A,see,B,B)) &
(man(B))))).

fof(f2, axiom, (
? [A,B,C] : ((predicate2(A,enter,B,C)) &
((card(C)) &
((relation(C,of,B)) &
(woman(B))))))).

fof(f3, axiom, (
? [A,B,C] : ((modifier_pp(A,in,B)) &
((predicate1(A,be,C)) &
((garden(B)) &
((relation(B,of,C)) &
(man(C)))))))).
002281 A man is seen by himself.
fof(f1, axiom, (
? [A,B] : ((predicate2(A,see,B,B)) &
(man(B))))).
002282 If a man owns a book then he can read it.
ERROR	DRS condition not supported: can	tptp/4	can(drs([A],[predicate(A,read,_,_)-1/10]))
002283 If a man owns a book then he must read it.
ERROR	DRS condition not supported: must	tptp/4	must(drs([A],[predicate(A,read,_,_)-1/10]))
002284 If a man owns a book then he does not read it.
fof(f1, axiom, (
! [A,B,C] : (((man(A)) &
((book(B)) &
(predicate2(C,own,A,B))))
=> (~(? [D] : (predicate2(D,read,A,B))))))).
002285 If a man owns a book then he does not provably read it.
ERROR	DRS condition not supported: ~	tptp/4	~drs([A],[predicate(A,read,_,_)-1])
002286 If a user pays for something then he does not wait.
fof(f1, axiom, (
! [A,B,C] : (((user(A)) &
(($true) &
((predicate1(C,pay,A)) &
(modifier_pp(C,for,B)))))
=> (~(? [D] : (predicate1(D,wait,A))))))).
002287 If a user pays for something then he can wait.
ERROR	DRS condition not supported: can	tptp/4	can(drs([A],[predicate(A,wait,_)-1/11]))
002288 If a user is authenticated and pays for a resource then a man can download it.
ERROR	DRS condition not supported: can	tptp/4	can(drs([A],[predicate(A,download,_,_)-1/15]))
002289 If a user is authenticated and pays for a resource then the man can download it.
ERROR	DRS condition not supported: can	tptp/4	can(drs([A],[predicate(A,download,_,_)-1/15]))
002290 A man who sees a dog and who does not see the dog waits.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate1(A,wait,B)) &
((~(? [E] : (predicate2(E,see,B,D)))) &
((predicate2(C,see,B,D)) &
((dog(D)) &
(man(B)))))))).
002292 that John waits.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002293 There is [[[[.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002294 If a user is authenticated and pays for a resource then he does not believe that he can download it.
ERROR	DRS condition not supported: :	tptp/4	_:drs([],[can(drs([A],[predicate(A,download,_,_)-1/19]))])
002295 If a man waits then his dog barks.
fof(f1, axiom, (
! [A,B] : (((man(A)) &
(predicate1(B,wait,A)))
=> (? [C,D] : ((relation(C,of,A)) &
((dog(C)) &
(predicate1(D,bark,C)))))))).
002296 If a man waits then his own dog barks.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002297 Everybody's age is larger than 0.
fof(f1, axiom, (
! [A,B] : ((($true) &
((relation(B,of,A)) &
(age(B))))
=> (? [C] : ((property2(C,large,comp_than,0)) &
(B=C)))))).
002298 If somebody's age is 31 then his address is "Poland".
fof(f1, axiom, (
! [A,B] : ((($true) &
((relation(B,of,A)) &
((age(B)) &
(B=31))))
=> (? [C] : ((relation(C,of,A)) &
((address(C)) &
(C=string('Poland')))))))).
002299 Everybody X's dog barks.
fof(f1, axiom, (
! [A,B] : ((($true) &
((relation(B,of,A)) &
(dog(B))))
=> (? [C] : (predicate1(C,bark,B)))))).
002300 Mary smiles. She's dog barks.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002301 Not everyone's dog barks.
fof(f1, axiom, (
~(! [A,B] : ((($true) &
((relation(B,of,A)) &
(dog(B))))
=> (? [C] : (predicate1(C,bark,B))))))).
002302 A man which's dog barks is happy.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002303 John sees himself's dog.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002304 A man who's dog barks is happy.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002305 John sees everybody's dogs.
fof(f1, axiom, (
! [A,B] : ((($true) &
((relation(B,of,A)) &
(object(B,dog,countable,na,geq,2))))
=> (? [C] : (predicate2(C,see,'John',B)))))).
002306 John sees 3 men whose dog barks.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate2(A,see,'John',B)) &
((predicate1(C,bark,D)) &
((relation(D,of,B)) &
((dog(D)) &
(object(B,man,countable,na,eq,3)))))))).
002307 John and Mary a dog of who barks wait.
fof(f1, axiom, (
? [A,B] : ((object(A,na,countable,na,eq,2)) &
((has_part(A,'Mary')) &
((has_part(A,'John')) &
(predicate1(B,wait,A))))))).

fof(f2, axiom, (
? [A,B] : ((predicate1(A,bark,B)) &
((relation(B,of,'Mary')) &
(dog(B)))))).
002308 There is a man 3 dogs of who bark.
fof(f1, axiom, (
? [A,B,C] : ((predicate1(A,bark,B)) &
((relation(B,of,C)) &
((object(B,dog,countable,na,eq,3)) &
(man(C))))))).
002309 Which card of a man is valid?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,which)
002310 Which card of who is valid?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,which)
002311 Which card of who is what?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,which)
002312 Which dog of who likes who?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,which)
002313 Not each of 4 men waits.
fof(f1, axiom, (
~(? [A] : ((object(A,man,countable,na,eq,4)) &
(! [B] : ((has_part(A,B))
=> (? [C] : (predicate1(C,wait,B))))))))).
002314 There are 4 men. Not each of them waits.
fof(f1, axiom, (
? [A] : ((~(! [B] : ((has_part(A,B))
=> (? [C] : (predicate1(C,wait,B)))))) &
(object(A,man,countable,na,eq,4))))).
002315 John likes 3 dogs. Not each of them barks.
fof(f1, axiom, (
? [A,B] : ((~(! [C] : ((has_part(B,C))
=> (? [D] : (predicate1(D,bark,C)))))) &
((predicate2(A,like,'John',B)) &
(object(B,dog,countable,na,eq,3)))))).
002316 There are 4 men. Not for each of them a dog barks.
fof(f1, axiom, (
? [A] : ((~(! [B] : ((has_part(A,B))
=> (? [C,D] : ((dog(C)) &
(predicate1(D,bark,C))))))) &
(object(A,man,countable,na,eq,4))))).
002317 John likes 3 dogs. Not for each of them a cat smiles.
fof(f1, axiom, (
? [A,B] : ((~(! [C] : ((has_part(B,C))
=> (? [D,E] : ((cat(D)) &
(predicate1(E,smile,D))))))) &
((predicate2(A,like,'John',B)) &
(object(B,dog,countable,na,eq,3)))))).
002318 There is a dog. Not for each of a customer and a clerk a code is valid.
fof(f1, axiom, (
? [A] : (dog(A)))).

fof(f2, axiom, (
~(? [A,B,C] : ((customer(A)) &
((clerk(B)) &
((has_part(C,A)) &
((has_part(C,B)) &
((object(C,na,countable,na,eq,2)) &
(! [D] : ((has_part(C,D))
=> (? [E,F] : ((code(E)) &
((property1(F,valid,pos)) &
(E=F)))))))))))))).
002319 There is a dog. Not each of a customer and a clerk waits.
fof(f1, axiom, (
? [A] : (dog(A)))).

fof(f2, axiom, (
~(? [A,B,C] : ((customer(A)) &
((clerk(B)) &
((has_part(C,A)) &
((has_part(C,B)) &
((object(C,na,countable,na,eq,2)) &
(! [D] : ((has_part(C,D))
=> (? [E] : (predicate1(E,wait,D))))))))))))).
002320 For each of a customer and a clerk a dog barks.
fof(f1, axiom, (
? [A,B,C] : ((! [D] : ((has_part(A,D))
=> (? [E,F] : ((dog(E)) &
(predicate1(F,bark,E)))))) &
((object(A,na,countable,na,eq,2)) &
((has_part(A,B)) &
((clerk(B)) &
((has_part(A,C)) &
(customer(C))))))))).
002321 There are some men who see a woman a cat of who smiles.
fof(f1, axiom, (
? [A,B,C,D,E] : ((predicate2(A,see,B,C)) &
((predicate1(D,smile,E)) &
((relation(E,of,C)) &
((cat(E)) &
((woman(C)) &
(object(B,man,countable,na,geq,2))))))))).
002322 There is a man a dog of who barks and eats.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002323 SimpleMat goes further and sees some abaci.
fof(f1, axiom, (
? [A,B] : ((predicate2(A,see,'SimpleMat',B)) &
(object(B,abacus,countable,na,geq,2))))).

fof(f2, axiom, (
? [A] : ((modifier_adv(A,far,comp)) &
(predicate1(A,go,'SimpleMat'))))).
002324 Everybody X's dog likes X.
fof(f1, axiom, (
! [A,B] : ((($true) &
((relation(B,of,A)) &
(dog(B))))
=> (? [C] : (predicate2(C,like,B,A)))))).
002325 There is somebody X's dog. X likes the dog.
fof(f1, axiom, (
? [A,B,C] : ((predicate2(A,like,B,C)) &
((dog(C)) &
((relation(C,of,B)) &
($true)))))).
002326 Everybody X's friend likes everybody that likes X.
fof(f1, axiom, (
! [A,B] : ((($true) &
((relation(B,of,A)) &
(friend(B))))
=> (! [C,D] : ((($true) &
(predicate2(D,like,C,A)))
=> (? [E] : (predicate2(E,like,B,C)))))))).
002327 2 men X and Y wait. X sleeps. Y drinks.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002328 2 men X and Y's dog waits. X sleeps. Y drinks.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002329 Somebody X and Y's dog waits.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002330 A man X and Y's dog waits.
fof(f1, axiom, (
? [A,B,C] : ((predicate1(A,wait,B)) &
((dog(B)) &
((relation(B,of,C)) &
($true)))))).

fof(f2, axiom, (
? [A,B,C] : ((predicate2(A,man,B,C)) &
(($true) &
($true))))).
002331 For every man it is false that a dog barks.
fof(f1, axiom, (
! [A] : ((man(A))
=> (~(? [B,C] : ((dog(B)) &
(predicate1(C,bark,B)))))))).
002332 For no man it is false that a dog barks.
fof(f1, axiom, (
! [A] : ((man(A))
=> (~(~(? [B,C] : ((dog(B)) &
(predicate1(C,bark,B))))))))).
002333 For no men a dog barks.
fof(f1, axiom, (
! [A] : ((man(A))
=> (~(? [B,C] : ((dog(B)) &
(predicate1(C,bark,B)))))))).
002334 For no man a dog sees the man.
fof(f1, axiom, (
! [A] : ((man(A))
=> (~(? [B,C] : ((dog(B)) &
(predicate2(C,see,B,A)))))))).
002335 A man who a woman is seen by waits.
fof(f1, axiom, (
? [A,B,C,D] : ((man(A)) &
((woman(B)) &
((predicate2(C,see,A,B)) &
(predicate1(D,wait,A))))))).
002336 There is somebody. There is something. He waits.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,wait,B)) &
($true)))).

fof(f2, axiom, (
? [A] : ($true))).
002337 There is somebody. There is something X. He waits.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,wait,B)) &
($true)))).

fof(f2, axiom, (
? [A] : ($true))).
002338 There is something X. He waits.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002339 A man sees everything X of Mary that eats.
fof(f1, axiom, (
? [A] : ((! [B,C] : (((relation(C,of,'Mary')) &
((predicate1(B,eat,'Mary')) &
($true)))
=> (? [D] : (predicate2(D,see,A,C))))) &
(man(A))))).
002340 A man sees everything X that eats.
fof(f1, axiom, (
? [A] : ((! [B,C] : (((predicate1(B,eat,C)) &
($true))
=> (? [D] : (predicate2(D,see,A,C))))) &
(man(A))))).
002341 A man sees everything X that eats X.
fof(f1, axiom, (
? [A] : ((! [B,C] : (((predicate2(B,eat,C,C)) &
($true))
=> (? [D] : (predicate2(D,see,A,C))))) &
(man(A))))).
002342 A man sees everything X of Mary.
fof(f1, axiom, (
? [A] : ((! [B] : (((relation(B,of,'Mary')) &
($true))
=> (? [C] : (predicate2(C,see,A,B))))) &
(man(A))))).
002343 Each of 2 cards are green.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002344 Each of every man waits.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002345 There are 3 men 3 cards of who are valid.
fof(f1, axiom, (
? [A,B,C] : ((A=B) &
((property1(B,valid,pos)) &
((relation(A,of,C)) &
((object(A,card,countable,na,eq,3)) &
(object(C,man,countable,na,eq,3)))))))).
002346 There is a man 3 dogs of which bark.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002347 John sees 3 men whose dogs bark.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate2(A,see,'John',B)) &
((predicate1(C,bark,D)) &
((relation(D,of,B)) &
((object(D,dog,countable,na,geq,2)) &
(object(B,man,countable,na,eq,3)))))))).
002348 John sees a man whose dogs bark.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate2(A,see,'John',B)) &
((predicate1(C,bark,D)) &
((relation(D,of,B)) &
((object(D,dog,countable,na,geq,2)) &
(man(B)))))))).
002349 There is a man a dog of whose cat sleeps.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate1(A,sleep,B)) &
((relation(B,of,C)) &
((relation(C,of,D)) &
((cat(C)) &
((man(D)) &
(dog(B))))))))).
002350 There is a man a cat's mouse of who sleeps.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate1(A,sleep,B)) &
((relation(B,of,C)) &
((mouse(B)) &
((relation(B,of,D)) &
((cat(D)) &
(man(C))))))))).
002351 There is at least 1 man. The man is happy.
fof(f1, axiom, (
? [A,B] : ((A=B) &
((property1(B,happy,pos)) &
(object(A,man,countable,na,geq,1)))))).
002352 There is at least 1 man. The men are happy.
fof(f1, axiom, (
? [A] : (object(A,man,countable,na,geq,1)))).

fof(f2, axiom, (
? [A,B] : ((object(A,man,countable,na,geq,2)) &
((A=B) &
(property1(B,happy,pos)))))).
002353 A cat is not hated by John.
fof(f1, axiom, (
? [A] : ((~(? [B] : (predicate2(B,hate,'John',A)))) &
(cat(A))))).
002354 There is a man. The red man sleeps.
fof(f1, axiom, (
? [A] : (man(A)))).

fof(f2, axiom, (
? [A,B] : ((man(A)) &
((property1(A,red,pos)) &
(predicate1(B,sleep,A)))))).
002355 There is a red man. The man sleeps.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,sleep,B)) &
((property1(B,red,pos)) &
(man(B)))))).
002356 There is a man. The man the card of who is valid sleeps.
fof(f1, axiom, (
? [A] : (man(A)))).

fof(f2, axiom, (
? [A,B,C,D] : ((card(A)) &
((relation(A,of,B)) &
((man(B)) &
((predicate1(C,sleep,B)) &
((property1(D,valid,pos)) &
(A=D)))))))).
002357 There is a man the card of who is valid. The man sleeps.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate1(A,sleep,B)) &
((card(C)) &
((relation(C,of,B)) &
((C=D) &
((property1(D,valid,pos)) &
(man(B))))))))).
002358 If there are a number X and a number Y, and X>Y or X<Y then it is false that X=Y.
fof(f1, axiom, (
! [A,B,C] : (((number(A)) &
((number(B)) &
((has_part(C,A)) &
((has_part(C,B)) &
((object(C,na,countable,na,eq,2)) &
((A>B)
| (A<B)))))))
=> (~(A=B))))).
002359 Bill's age is a number X. John believes that X<40. Mary knows that X=45.
ERROR	DRS condition not supported: :	tptp/4	_:drs([],[formula(_,=,int(45))-3])
002360 If something X is greater than something Y then X>Y.
fof(f1, axiom, (
! [A,B,C] : ((($true) &
(($true) &
((property2(C,great,comp_than,B)) &
(A=C))))
=> (A>B)))).
002361 {1,"a",[3,4],John} is a set.
ERROR	DRS function set/1 not supported	arg_to_tptp/2	set([int(1),string(a),list([int(3),int(4)]),named(John)])
002362 It is not possible that there is a number X and that X=X+1.
ERROR	DRS condition not supported: can	tptp/4	can(drs([A],[object(A,number,countable,na,eq,1)-1/9,formula(A,=,expr(+,A,int(1)))-1/14]))
002363 If there are a number X and a number Y then the average of them is (X+Y)/2.
fof(f1, axiom, (
! [A,B,C] : (((number(A)) &
((number(B)) &
((has_part(C,A)) &
((has_part(C,B)) &
(object(C,na,countable,na,eq,2))))))
=> (? [D] : ((D=(A+B)/2) &
((relation(D,of,C)) &
(average(D)))))))).
002364 [3.141, {1, 2, 3}, 4 + X, Y * (Z - 2), "ace"] is a list.
ERROR	DRS function list/1 not supported	arg_to_tptp/2	list([real(3.141),set([int(1),int(2),int(3)]),expr(+,int(4),_),expr(*,_,expr(-,_,int(2))),string(ace)])
002365 person:Peeter owns a car. He drives.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002366 p:Peeter owns a car. He drives.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002367 If there is a n:knot-value X of a gale then X > 28 and X < 55.
fof(f1, axiom, (
! [A,B] : ((('knot-value'(A)) &
((gale(B)) &
(relation(A,of,B))))
=> ((A>28) &
(A<55))))).
002368 There is a man at least 3 cars of who are liked by Mary.
fof(f1, axiom, (
? [A,B,C] : ((predicate2(A,like,'Mary',B)) &
((relation(B,of,C)) &
((object(B,car,countable,na,geq,3)) &
(man(C))))))).
002369 For all integers X there is exactly one integer Y such that X + Y = 0.
ERROR	DRS condition not supported: [|]	tptp/4	[object(_,integer,countable,na,exactly,1)-1]
002370 2*(3-5/17) >= 1/2.
fof(f1, axiom, (
2*(3-5/17)>=1/2)).
002371 Is S contained by R1?
fof(f1, conjecture, (
? [A,B,C] : (($true) &
(($true) &
(predicate2(C,contain,B,A)))))).
002372 A number is 2*[1,2].
ERROR	DRS is empty	apply_converter/2	drs([],[])
002373 A number is 2*{1,2}.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002374 A string A is "abc" & [1,2].
ERROR	DRS is empty	apply_converter/2	drs([],[])
002375 1 gives 2 3.
fof(f1, axiom, (
? [A] : (predicate3(A,give,1,3,2)))).
002376 a man gives 2 3.
fof(f1, axiom, (
? [A,B] : ((predicate3(A,give,B,3,2)) &
(man(B))))).
002377 1 gives a man 3.
fof(f1, axiom, (
? [A,B] : ((predicate3(A,give,1,3,B)) &
(man(B))))).
002378 1 gives 2 a man.
fof(f1, axiom, (
? [A,B] : ((predicate3(A,give,1,B,2)) &
(man(B))))).
002379 a man gives John 3.
fof(f1, axiom, (
? [A,B] : ((predicate3(A,give,B,3,'John')) &
(man(B))))).
002380 a man gives 2 John.
fof(f1, axiom, (
? [A,B] : ((predicate3(A,give,B,'John',2)) &
(man(B))))).
002381 1 gives John a man.
fof(f1, axiom, (
? [A,B] : ((predicate3(A,give,1,B,'John')) &
(man(B))))).
002382 There are a man X and the man X.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002383 There is a man. John sees Mary and a dog and the man. The man waits.
fof(f1, axiom, (
? [A,B,C,D,E] : ((predicate1(A,wait,B)) &
((object(C,na,countable,na,eq,3)) &
((has_part(C,B)) &
((has_part(C,D)) &
((has_part(C,'Mary')) &
((predicate2(E,see,'John',C)) &
((dog(D)) &
(man(B))))))))))).
002384 1 < 2.
fof(f1, axiom, (
1<2)).
002385 1 + 2 = 3.
fof(f1, axiom, (
1+2=3)).
002386 It is false that 1 = 2 - 3.
fof(f1, axiom, (
~(1=2-3))).
002387 1 < 2 and 2 < 3.
fof(f1, axiom, (
2<3)).

fof(f2, axiom, (
1<2)).
002388 1 < 2 or 2 > 3.
fof(f1, axiom, (
(1<2)
| (2>3))).
002389 {1} is contained by {2, 3}.
ERROR	DRS function set/1 not supported	arg_to_tptp/2	set([int(2),int(3)])
002390 [1] is contained by [2, 3].
ERROR	DRS function list/1 not supported	arg_to_tptp/2	list([int(2),int(3)])
002391 There is each of 3 men.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002392 There is a group of each of 3 men.
fof(f1, axiom, (
? [A,B] : ((! [C] : ((has_part(A,C))
=> (relation(B,of,C)))) &
((object(A,man,countable,na,eq,3)) &
(group(B)))))).
002393 For every integer X there are more than 2 integers Y such that X + Y > X.
fof(f1, axiom, (
! [A] : ((integer(A))
=> (? [B] : ((object(B,integer,countable,na,greater,2)) &
(A+B>A)))))).
002394 There is a number X. X = X.
fof(f1, axiom, (
? [A] : ((A=A) &
(number(A))))).
002395 { John } waits.
ERROR	DRS function set/1 not supported	arg_to_tptp/2	set([named(John)])
002396 There is a natural number X. -1 < X.
fof(f1, axiom, (
? [A] : ((-1<A) &
((property1(A,natural,pos)) &
(number(A)))))).
002397 It is false that John sleeps and that John does not sleep.
fof(f1, axiom, (
~(? [A] : ((~(? [B] : (predicate1(B,sleep,'John')))) &
(predicate1(A,sleep,'John')))))).
002398 If John and Mary wait then there is a dog and they sleep.
fof(f1, axiom, (
! [A,B] : (((predicate1(A,wait,B)) &
((has_part(B,'John')) &
((has_part(B,'Mary')) &
(object(B,na,countable,na,eq,2)))))
=> (? [C,D] : ((dog(C)) &
(predicate1(D,sleep,B))))))).
002399 If John and Mary wait then a dog barks and they sleep.
fof(f1, axiom, (
! [A,B] : (((predicate1(A,wait,B)) &
((has_part(B,'John')) &
((has_part(B,'Mary')) &
(object(B,na,countable,na,eq,2)))))
=> (? [C,D,E] : ((dog(C)) &
((predicate1(D,bark,C)) &
(predicate1(E,sleep,B)))))))).
002400 If John and Mary wait then a dog barks or they sleep.
fof(f1, axiom, (
! [A,B] : (((predicate1(A,wait,B)) &
((has_part(B,'John')) &
((has_part(B,'Mary')) &
(object(B,na,countable,na,eq,2)))))
=> (? [C,D] : (((dog(C)) &
(predicate1(D,bark,C)))
| (? [E] : (predicate1(E,sleep,B)))))))).
002401 If John and Mary wait then they sleep.
fof(f1, axiom, (
! [A,B] : (((predicate1(A,wait,B)) &
((has_part(B,'John')) &
((has_part(B,'Mary')) &
(object(B,na,countable,na,eq,2)))))
=> (? [C] : (predicate1(C,sleep,B)))))).
002402 There are a dog and a cat. They sleep. John sees them. John likes them.
fof(f1, axiom, (
? [A,B,C,D,E,F] : ((predicate2(A,like,'John',B)) &
((predicate2(C,see,'John',B)) &
((predicate1(D,sleep,B)) &
((object(B,na,countable,na,eq,2)) &
((has_part(B,E)) &
((has_part(B,F)) &
((dog(F)) &
(cat(E))))))))))).
002403 Every man knows that every man waits.
ERROR	DRS condition not supported: :	tptp/4	_:drs([],[drs([A],[object(A,man,countable,na,eq,1)-1])=>drs([B],[predicate(B,wait,A)-1])])
002404 Every man knows that every man knows a man.
ERROR	DRS condition not supported: :	tptp/4	_:drs([],[drs([A],[object(A,man,countable,na,eq,1)-1])=>drs([B,C],[object(B,man,countable,na,eq,1)-1,predicate(C,know,A,B)-1])])
002405 Every man knows that every man drinks and that every woman eats.
ERROR	DRS condition not supported: :	tptp/4	_:drs([],[drs([A],[object(A,man,countable,na,eq,1)-1])=>drs([B],[predicate(B,drink,A)-1]),drs([C],[object(C,woman,countable,na,eq,1)-1])=>drs([D],[predicate(D,eat,C)-1])])
002406 A number is 3 + 5 - 4 + 9.
fof(f1, axiom, (
? [A] : ((A=3+5-4+9) &
(number(A))))).
002407 Every man's dog chases a car.
fof(f1, axiom, (
! [A,B] : (((man(A)) &
((relation(B,of,A)) &
(dog(B))))
=> (? [C,D] : ((car(C)) &
(predicate2(D,chase,B,C))))))).
002408 John sees not exactly 2 men.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002409 Not exactly 2 men wait.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002410 John likes nothing but meat.
fof(f1, axiom, (
! [A,B] : (((predicate2(A,like,'John',B)) &
($true))
=> (? [C] : ((object(C,meat,mass,na,na,na)) &
(B=C)))))).
002411 John likes nothing but Mary.
fof(f1, axiom, (
! [A,B] : (((predicate2(A,like,'John',B)) &
($true))
=> (B='Mary')))).
002412 John likes nobody but Mary.
fof(f1, axiom, (
! [A,B] : (((predicate2(A,like,'John',B)) &
($true))
=> (B='Mary')))).
002413 John likes nothing but raw meat.
fof(f1, axiom, (
! [A,B] : (((predicate2(A,like,'John',B)) &
($true))
=> (? [C] : ((object(C,meat,mass,na,na,na)) &
((property1(C,raw,pos)) &
(B=C))))))).
002414 John likes nothing but fast cars.
fof(f1, axiom, (
! [A,B] : (((predicate2(A,like,'John',B)) &
($true))
=> (? [C] : ((car(C)) &
((property1(C,fast,pos)) &
(B=C))))))).
002416 John likes nothing but apple.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002417 John likes nothing but cars of Mary.
fof(f1, axiom, (
! [A,B] : (((predicate2(A,like,'John',B)) &
($true))
=> (? [C] : ((car(C)) &
((relation(C,of,'Mary')) &
(B=C))))))).
002419 Who likes nothing but Mary?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,who)
002420 Who likes nothing but raw meat?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,who)
002421 For every farmer for every donkey the farmer beats the donkey.
fof(f1, axiom, (
! [A] : ((farmer(A))
=> (! [B] : ((donkey(B))
=> (? [C] : (predicate2(C,beat,A,B)))))))).
002422 For every farmer and for every donkey the farmer beats the donkey.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002423 1*3*4/7*8 is a term.
fof(f1, axiom, (
? [A] : ((1*3*4/7*8=A) &
(term(A))))).
002424 Are there 3 things and 4 things?
fof(f1, conjecture, (
? [A,B,C] : ((object(A,thing,countable,na,eq,3)) &
((has_part(C,A)) &
((object(B,thing,countable,na,eq,4)) &
((has_part(C,B)) &
(object(C,na,countable,na,eq,2)))))))).
002425 Who hits himself?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,who)
002426 Who sees herself?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,who)
002427 Who sees itself?
ERROR	DRS is empty	apply_converter/2	drs([],[])
002428 Where does a man live?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,where)
002429 What is given to Mary by John?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,what)
002430 There is a man X. X's dog barks.
fof(f1, axiom, (
? [A,B,C] : ((predicate1(A,bark,B)) &
((dog(B)) &
((relation(B,of,C)) &
(man(C))))))).
002431 There is a man X. There is some food of X's dog.
fof(f1, axiom, (
? [A,B,C] : ((relation(A,of,B)) &
((dog(B)) &
((relation(B,of,C)) &
((man(C)) &
(object(A,food,mass,na,na,na)))))))).
002432 Everybody X likes X's dog.
fof(f1, axiom, (
! [A] : (($true)
=> (? [B,C] : ((relation(B,of,A)) &
((dog(B)) &
(predicate2(C,like,A,B)))))))).
002433 Jyri's dog hates Mari's cat.
fof(f1, axiom, (
? [A,B,C] : ((predicate2(A,hate,B,C)) &
((cat(C)) &
((relation(C,of,'Mari')) &
((dog(B)) &
(relation(B,of,'Jyri')))))))).
002434 Everybody X's dog hates X's cat.
fof(f1, axiom, (
! [A,B] : ((($true) &
((relation(B,of,A)) &
(dog(B))))
=> (? [C,D] : ((relation(C,of,A)) &
((cat(C)) &
(predicate2(D,hate,B,C)))))))).
002435 If somebody X's dog Y hates Y's meat then X's cat likes Y.
fof(f1, axiom, (
! [A,B,C,D] : ((($true) &
((relation(B,of,A)) &
((dog(B)) &
((relation(C,of,B)) &
((meat(C)) &
(predicate2(D,hate,B,C)))))))
=> (? [E,F] : ((relation(E,of,A)) &
((cat(E)) &
(predicate2(F,like,E,B)))))))).
002436 2 men X and Y's dog bark.
fof(f1, axiom, (
? [A,B,C,D,E] : ((object(A,na,countable,na,eq,2)) &
((has_part(A,B)) &
((dog(B)) &
((relation(B,of,C)) &
(($true) &
((predicate1(D,bark,A)) &
((has_part(A,E)) &
(object(E,man,countable,na,eq,2))))))))))).
002437 John owns not 3 cards.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002438 For everything X a man knows X.
fof(f1, axiom, (
! [A] : (($true)
=> (? [B,C] : ((man(B)) &
(predicate2(C,know,B,A))))))).
002439 For everything X for nothing Y X likes Y.
fof(f1, axiom, (
! [A] : (($true)
=> (! [B] : (($true)
=> (~(? [C] : (predicate2(C,like,A,B))))))))).
002440 For nobody X for everyone Y Y knows X.
fof(f1, axiom, (
! [A] : (($true)
=> (~(! [B] : (($true)
=> (? [C] : (predicate2(C,know,B,A))))))))).
002441 For every man's dog a cat waits.
fof(f1, axiom, (
! [A,B] : (((man(A)) &
((relation(B,of,A)) &
(dog(B))))
=> (? [C,D] : ((cat(C)) &
(predicate1(D,wait,C))))))).
002442 2 men and M2 drink. M2 talks. They eat.
fof(f1, axiom, (
? [A,B,C,D,E,F] : ((predicate1(A,eat,B)) &
((predicate1(C,talk,D)) &
((object(B,na,countable,na,eq,2)) &
((has_part(B,D)) &
(($true) &
((predicate1(E,drink,B)) &
((has_part(B,F)) &
(object(F,man,countable,na,eq,2))))))))))).
002443 2 men X and Y's dog wait. X sleeps. Y drinks.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002444 When is Christmas?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,when)
002445 Where is Bill?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,where)
002446 When is what?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,what)
002447 What is when?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,what)
002448 1 =< 2 and 2 >= 1.
fof(f1, axiom, (
2>=1)).

fof(f2, axiom, (
1=<2)).
002449 Who is somebody that somebody that knows who knows?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,who)
002450 Who is known by somebody that knows who?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,who)
002451 If there is John then there is somebody.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002452 If there is John then there is something.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002453 John is a father of who?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,who)
002454 Bill gives what to who?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,what)
002455 Bill gives what to who where?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,what)
002456 Where does Bill give what to who?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,what)
002457 Bill lives in which city in which country for which reason?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,which)
002458 John and Mary like what?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,what)
002459 Bill gives which flowers to which women?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,which)
002460 Which men give which flowers to which women?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,which)
002461 2 kg of sugar are used by John for what?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,what)
002462 Is a code entered by a customer?
fof(f1, conjecture, (
? [A,B,C] : ((code(A)) &
((customer(B)) &
(predicate2(C,enter,B,A)))))).
002463 What are the cars of John?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,what)
002464 Who are the children of John?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,who)
002465 Each of not at most 5 boys buys a boat.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002466 Not at most 3 dogs bark.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002467 Not less than 3 dogs bark.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002468 At least 3 men and at most 3 men wait. They are tired.
ERROR	DRS condition not supported: [|]	tptp/4	[has_part(_,A)-1,object(A,man,countable,na,leq,3)-1]
002469 A man who is John waits. The man who is Bill sleeps.
fof(f1, axiom, (
? [A,B] : ((man(A)) &
((A='John') &
(predicate1(B,wait,A)))))).

fof(f2, axiom, (
? [A,B] : ((predicate1(A,sleep,B)) &
((B='Bill') &
(man(B)))))).
002470 A man who is a clerk waits. The man who is a customer sleeps.
fof(f1, axiom, (
? [A,B,C] : ((man(A)) &
((clerk(B)) &
((A=B) &
(predicate1(C,wait,A))))))).

fof(f2, axiom, (
? [A,B,C] : ((predicate1(A,sleep,B)) &
((B=C) &
((customer(C)) &
(man(B))))))).
002471 There is a man who owns a dog. There is a man who owns a cat. John sees the man who owns a dog.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate2(A,see,'John',B)) &
((predicate2(C,own,B,D)) &
((dog(D)) &
(man(B))))))).

fof(f2, axiom, (
? [A,B,C] : ((predicate2(A,own,B,C)) &
((cat(C)) &
(man(B)))))).
002472 There is a man whose dog barks. The dog of a man sleeps.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate1(A,sleep,B)) &
((predicate1(C,bark,B)) &
((relation(B,of,D)) &
((dog(B)) &
(man(D)))))))).
002473 Proposition P: John sleeps. Mary waits.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002474 Proposition P: A man believes that P. A dog believes that P.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002475 There are a man X and a man Y.
fof(f1, axiom, (
? [A,B,C] : ((man(A)) &
((man(B)) &
((object(C,na,countable,na,eq,2)) &
((has_part(C,A)) &
(has_part(C,B)))))))).
002476 For each of a man X and a man Y there is a card.
fof(f1, axiom, (
? [A,B,C] : ((! [D] : ((has_part(C,D))
=> (? [E] : (card(E))))) &
((man(A)) &
((man(B)) &
((object(C,na,countable,na,eq,2)) &
((has_part(C,A)) &
(has_part(C,B))))))))).
002477 Not for each of a man X and a man Y there is a card.
fof(f1, axiom, (
~(? [A,B,C] : ((has_part(C,A)) &
((has_part(C,B)) &
((object(C,na,countable,na,eq,2)) &
((man(A)) &
((man(B)) &
(! [D] : ((has_part(C,D))
=> (? [E] : (card(E))))))))))))).
002478 John has a dog and has a cat. Who has a dog? Who has a cat?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,who)
002479 There is a man. A dog of him eats. The dog of him barks.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate1(A,bark,B)) &
((predicate1(C,eat,B)) &
((relation(B,of,D)) &
((dog(B)) &
(man(D)))))))).
002480 There is a man. A dog of him eats. The dog of the man barks.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate1(A,bark,B)) &
((predicate1(C,eat,B)) &
((relation(B,of,D)) &
((dog(B)) &
(man(D)))))))).
002481 There is a man a dog of who barks and who eats.
fof(f1, axiom, (
? [A,B,C,D] : ((man(A)) &
((dog(B)) &
((relation(B,of,A)) &
((predicate1(C,bark,B)) &
(predicate1(D,eat,A)))))))).
002482 There is a man a dog that eats of who barks.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002483 There is a man a dog who eats of who barks.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002484 There is a man. His dog X eats. There is a woman. Her dog drinks. The dog X barks.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate1(A,bark,B)) &
((predicate1(C,eat,B)) &
((dog(B)) &
((relation(B,of,D)) &
(man(D)))))))).

fof(f2, axiom, (
? [A,B,C] : ((predicate1(A,drink,B)) &
((dog(B)) &
((relation(B,of,C)) &
(woman(C))))))).
002485 There is a young man who is more fond-of Mary than of Sue. There is an old man who is more fond-of Sue than of Mary. John knows the man who is more fond-of Mary than of Sue.
fof(f1, axiom, (
? [A,B,C] : ((man(A)) &
((property1(A,young,pos)) &
((property3(B,'fond-of','Mary',comp_than,obj,'Sue')) &
((A=B) &
(predicate2(C,know,'John',A)))))))).

fof(f2, axiom, (
? [A,B] : ((man(A)) &
((property1(A,old,pos)) &
((property3(B,'fond-of','Sue',comp_than,obj,'Mary')) &
(A=B)))))).
002486 No group that contains less than 3 bad members and contains less than 3 good members forms a committee.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002487 Mary likes John's red car.
fof(f1, axiom, (
? [A,B] : ((predicate2(A,like,'Mary',B)) &
((property1(B,red,pos)) &
((car(B)) &
(relation(B,of,'John'))))))).
002488 There is John's fast and red car.
fof(f1, axiom, (
? [A] : ((property1(A,red,pos)) &
((property1(A,fast,pos)) &
((car(A)) &
(relation(A,of,'John'))))))).
002489 There is John's most fast car.
fof(f1, axiom, (
? [A] : ((relation(A,of,'John')) &
((car(A)) &
(property1(A,fast,sup)))))).
002490 Mary likes a man's red car.
fof(f1, axiom, (
? [A,B,C] : ((man(A)) &
((relation(B,of,A)) &
((car(B)) &
((property1(B,red,pos)) &
(predicate2(C,like,'Mary',B)))))))).
002491 Mary likes a rich man's red car.
fof(f1, axiom, (
? [A,B,C] : ((man(A)) &
((property1(A,rich,pos)) &
((relation(B,of,A)) &
((car(B)) &
((property1(B,red,pos)) &
(predicate2(C,like,'Mary',B))))))))).
002492 For a man a dog barks.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002493 For the man a dog barks.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002494 For every card does a customer own it?
fof(f1, conjecture, (
! [A] : ((card(A))
=> (? [B,C] : ((customer(B)) &
(predicate2(C,own,B,A))))))).
002495 For no card does a customer own the card?
fof(f1, conjecture, (
! [A] : ((card(A))
=> (~(? [B,C] : ((customer(B)) &
(predicate2(C,own,B,A)))))))).
002496 For a card does a customer own it?
ERROR	DRS is empty	apply_converter/2	drs([],[])
002497 Not for no man a dog barks.
fof(f1, axiom, (
~(! [A] : ((man(A))
=> (~(? [B,C] : ((predicate1(C,bark,B)) &
(dog(B))))))))).
002498 Not for no man a dog likes John.
fof(f1, axiom, (
~(! [A] : ((man(A))
=> (~(? [B,C] : ((predicate2(C,like,B,'John')) &
(dog(B))))))))).
002499 There is John's dog such that a cat sees the dog.
fof(f1, axiom, (
? [A,B,C] : ((predicate2(A,see,B,C)) &
((cat(B)) &
((dog(C)) &
(relation(C,of,'John'))))))).
002500 There is a man who sleeps on a bank. There is a man who sleeps on a bed. John sees the man who sleeps on a bank.
fof(f1, axiom, (
? [A,B,C,D] : ((man(A)) &
((bank(B)) &
((predicate1(C,sleep,A)) &
((modifier_pp(C,on,B)) &
(predicate2(D,see,'John',A)))))))).

fof(f2, axiom, (
? [A,B,C] : ((man(A)) &
((bed(B)) &
((predicate1(C,sleep,A)) &
(modifier_pp(C,on,B))))))).
002501 There is a man who can wait. The man who can wait sleeps.
ERROR	DRS condition not supported: can	tptp/4	can(drs([A],[predicate(A,wait,_)-1/7]))
002502 For every man every dog barks for every cat.
fof(f1, axiom, (
! [A] : ((man(A))
=> (! [B] : ((dog(B))
=> (! [C] : ((cat(C))
=> (? [D] : ((modifier_pp(D,for,C)) &
(predicate1(D,bark,B))))))))))).
002503 For every man a dog barks for every cat.
fof(f1, axiom, (
! [A] : ((man(A))
=> (? [B] : ((! [C] : ((cat(C))
=> (? [D] : ((modifier_pp(D,for,C)) &
(predicate1(D,bark,B)))))) &
(dog(B))))))).
002504 A card of which man is valid?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,which)
002505 A clerk enters a card of every customer. The card of every customer is valid.
fof(f1, axiom, (
? [A,B,C,D] : ((clerk(A)) &
((card(B)) &
((! [E] : ((customer(E))
=> (relation(B,of,E)))) &
((predicate2(C,enter,A,B)) &
((property1(D,valid,pos)) &
(B=D)))))))).
002506 For a man's cat a dog barks.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002507 For the man's cat a dog barks.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002508 John eats nothing but raw and expensive meat.
fof(f1, axiom, (
! [A,B] : ((($true) &
(predicate2(A,eat,'John',B)))
=> (? [C] : ((B=C) &
((property1(C,expensive,pos)) &
((property1(C,raw,pos)) &
(object(C,meat,mass,na,na,na))))))))).
002510 There is a man. His brother sees himself.
fof(f1, axiom, (
? [A,B,C] : ((predicate2(A,see,B,B)) &
((brother(B)) &
((relation(B,of,C)) &
(man(C))))))).
002511 There is a man whose dog barks. The dog of the man sleeps.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate1(A,sleep,B)) &
((predicate1(C,bark,B)) &
((relation(B,of,D)) &
((dog(B)) &
(man(D)))))))).
002512 There is a man whose dog barks. A dog of a man sleeps.
fof(f1, axiom, (
? [A,B,C] : ((predicate1(A,bark,B)) &
((relation(B,of,C)) &
((dog(B)) &
(man(C))))))).

fof(f2, axiom, (
? [A,B,C] : ((predicate1(A,sleep,B)) &
((relation(B,of,C)) &
((man(C)) &
(dog(B))))))).
002513 There is a man who sleeps in a bed in the morning. There is a man who sleeps in a bank. The man who sleeps in the morning is tired.
fof(f1, axiom, (
? [A,B,C,D,E] : ((man(A)) &
((bed(B)) &
((predicate1(C,sleep,A)) &
((modifier_pp(C,in,B)) &
((modifier_pp(C,in,D)) &
((morning(D)) &
((property1(E,tired,pos)) &
(A=E)))))))))).

fof(f2, axiom, (
? [A,B,C] : ((man(A)) &
((bank(B)) &
((predicate1(C,sleep,A)) &
(modifier_pp(C,in,B))))))).
002514 There is a man who sleeps safely and soundly. There is a man who sleeps fitfully. The man who sleeps safely is happy.
fof(f1, axiom, (
? [A,B,C] : ((man(A)) &
((predicate1(B,sleep,A)) &
((modifier_adv(B,safely,pos)) &
((modifier_adv(B,soundly,pos)) &
((property1(C,happy,pos)) &
(A=C)))))))).

fof(f2, axiom, (
? [A,B] : ((man(A)) &
((predicate1(B,sleep,A)) &
(modifier_adv(B,fitfully,pos)))))).
002515 John sees a man who sleeps with his own eyes.
fof(f1, axiom, (
? [A,B,C,D] : ((man(A)) &
((relation(B,of,A)) &
((object(B,eye,countable,na,geq,2)) &
((predicate1(C,sleep,A)) &
((modifier_pp(C,with,B)) &
(predicate2(D,see,'John',A))))))))).
002516 A man X1 of a man waits. The man X1 is happy.
fof(f1, axiom, (
? [A,B,C,D] : ((A=B) &
((property1(B,happy,pos)) &
((predicate1(C,wait,A)) &
((relation(A,of,D)) &
((man(D)) &
(man(A))))))))).
002517 A man whose 3 dogs bark waits.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002518 For everybody's dog there is a cake.
fof(f1, axiom, (
! [A,B] : ((($true) &
((relation(B,of,A)) &
(dog(B))))
=> (? [C] : (cake(C)))))).
002519 A man hits a dog the bone of which is green.
fof(f1, axiom, (
? [A,B,C,D,E] : ((predicate2(A,hit,B,C)) &
((bone(D)) &
((relation(D,of,C)) &
((D=E) &
((property1(E,green,pos)) &
((dog(C)) &
(man(B)))))))))).
002520 A girl whose cat a mouse of which smiles eats waits.
fof(f1, axiom, (
? [A,B,C,D,E,F] : ((predicate1(A,wait,B)) &
((predicate1(C,eat,D)) &
((relation(D,of,B)) &
((predicate1(E,smile,F)) &
((relation(F,of,D)) &
((mouse(F)) &
((cat(D)) &
(girl(B))))))))))).
002521 There is a company from who John awaits a delivery.
fof(f1, axiom, (
? [A,B,C] : ((modifier_pp(A,from,B)) &
((predicate2(A,await,'John',C)) &
((delivery(C)) &
(company(B))))))).
002522 If a message is from someone from who John awaits a delivery then the message is important.
fof(f1, axiom, (
! [A,B,C,D,E] : (((message(A)) &
(($true) &
((delivery(C)) &
((predicate2(D,await,'John',C)) &
((modifier_pp(D,from,B)) &
((predicate1(E,be,A)) &
(modifier_pp(E,from,B))))))))
=> (? [F] : ((property1(F,important,pos)) &
(A=F)))))).
002523 There are some cards each of which is valid.
fof(f1, axiom, (
? [A] : ((! [B] : ((has_part(A,B))
=> (? [C] : ((property1(C,valid,pos)) &
(B=C))))) &
(object(A,card,countable,na,geq,2))))).
002524 There are some cards each of which has a code.
fof(f1, axiom, (
? [A] : ((! [B] : ((has_part(A,B))
=> (? [C,D] : ((code(C)) &
(predicate2(D,have,B,C)))))) &
(object(A,card,countable,na,geq,2))))).
002525 There are some cards each of which John knows.
fof(f1, axiom, (
? [A] : ((! [B] : ((has_part(A,B))
=> (? [C] : (predicate2(C,know,'John',B))))) &
(object(A,card,countable,na,geq,2))))).
002526 There are some cards the code of each of which is valid.
fof(f1, axiom, (
? [A,B,C] : ((code(A)) &
((! [D] : ((has_part(C,D))
=> (relation(A,of,D)))) &
((A=B) &
((property1(B,valid,pos)) &
(object(C,card,countable,na,geq,2)))))))).
002527 There are some cards a code of each of which is valid.
fof(f1, axiom, (
? [A,B,C] : ((A=B) &
((property1(B,valid,pos)) &
((! [D] : ((has_part(C,D))
=> (relation(A,of,D)))) &
((code(A)) &
(object(C,card,countable,na,geq,2)))))))).
002528 There are some cards a code of each of which has a date.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate2(A,have,B,C)) &
((date(C)) &
((! [E] : ((has_part(D,E))
=> (relation(B,of,E)))) &
((code(B)) &
(object(D,card,countable,na,geq,2)))))))).
002529 There are some cards a code of each of which John knows.
fof(f1, axiom, (
? [A,B,C] : ((predicate2(A,know,'John',B)) &
((! [D] : ((has_part(C,D))
=> (relation(B,of,D)))) &
((code(B)) &
(object(C,card,countable,na,geq,2))))))).
002530 There are some cards each of who is valid.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002531 There are some men each of which is rich.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002532 There are some men each of who is rich.
fof(f1, axiom, (
? [A] : ((! [B] : ((has_part(A,B))
=> (? [C] : ((property1(C,rich,pos)) &
(B=C))))) &
(object(A,man,countable,na,geq,2))))).
002533 There are some cards each of who has a code.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002534 There are some men each of who has a car.
fof(f1, axiom, (
? [A] : ((! [B] : ((has_part(A,B))
=> (? [C,D] : ((car(C)) &
(predicate2(D,have,B,C)))))) &
(object(A,man,countable,na,geq,2))))).
002535 There are some men each of which has a car.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002536 There are some cards each of who John knows.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002537 There are some men each of who John knows.
fof(f1, axiom, (
? [A] : ((! [B] : ((has_part(A,B))
=> (? [C] : (predicate2(C,know,'John',B))))) &
(object(A,man,countable,na,geq,2))))).
002538 There are some men each of which John knows.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002539 There are some cards the code of each of who is valid.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002540 There are some men the car of each of who is fast.
fof(f1, axiom, (
? [A,B,C] : ((car(A)) &
((! [D] : ((has_part(C,D))
=> (relation(A,of,D)))) &
((A=B) &
((property1(B,fast,pos)) &
(object(C,man,countable,na,geq,2)))))))).
002541 There are some men the car of each of which is fast.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002542 There are some men a car of each of who is fast.
fof(f1, axiom, (
? [A,B,C] : ((A=B) &
((property1(B,fast,pos)) &
((! [D] : ((has_part(C,D))
=> (relation(A,of,D)))) &
((car(A)) &
(object(C,man,countable,na,geq,2)))))))).
002543 There are some men a car of each of who John drives.
fof(f1, axiom, (
? [A,B,C] : ((predicate2(A,drive,'John',B)) &
((! [D] : ((has_part(C,D))
=> (relation(B,of,D)))) &
((car(B)) &
(object(C,man,countable,na,geq,2))))))).
002544 A man invites some friends the car of the boss of each of who is faster than each of the cars of the friends.
fof(f1, axiom, (
? [A,B,C,D,E,F] : ((predicate2(A,invite,B,C)) &
((object(D,car,countable,na,geq,2)) &
((relation(D,of,C)) &
((! [G] : ((has_part(C,G))
=> (relation(E,of,G)))) &
((boss(E)) &
((car(F)) &
((relation(F,of,E)) &
((! [H] : ((has_part(D,H))
=> (? [I] : ((property2(I,fast,comp_than,H)) &
(F=I))))) &
((object(C,friend,countable,na,geq,2)) &
(man(B))))))))))))).
002545 A man invites some friends the car of the boss of each of who is fast.
fof(f1, axiom, (
? [A,B,C,D,E,F] : ((predicate2(A,invite,B,C)) &
((! [G] : ((has_part(C,G))
=> (relation(D,of,G)))) &
((boss(D)) &
((car(E)) &
((relation(E,of,D)) &
((E=F) &
((property1(F,fast,pos)) &
((object(C,friend,countable,na,geq,2)) &
(man(B)))))))))))).
002546 A man invites some friends a car of a boss of each of who is fast.
fof(f1, axiom, (
? [A,B,C,D,E,F] : ((predicate2(A,invite,B,C)) &
((D=E) &
((property1(E,fast,pos)) &
((relation(D,of,F)) &
((! [G] : ((has_part(C,G))
=> (relation(F,of,G)))) &
((boss(F)) &
((object(C,friend,countable,na,geq,2)) &
((car(D)) &
(man(B)))))))))))).
002547 there are some cards a code of which that have which is valid.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002548 there are some cards not each of which has a code.
fof(f1, axiom, (
? [A] : ((~(! [B] : ((has_part(A,B))
=> (? [C,D] : ((code(C)) &
(predicate2(D,have,B,C))))))) &
(object(A,card,countable,na,geq,2))))).
002549 there are some cards a code of not each of which John knows.
fof(f1, axiom, (
? [A,B,C] : ((predicate2(A,know,'John',B)) &
((~(! [D] : ((has_part(C,D))
=> (relation(B,of,D))))) &
((code(B)) &
(object(C,card,countable,na,geq,2))))))).
002550 There is a city in which John lives.
fof(f1, axiom, (
? [A,B] : ((modifier_pp(A,in,B)) &
((predicate1(A,live,'John')) &
(city(B)))))).
002551 There are some cities in each of which John lives.
fof(f1, axiom, (
? [A] : ((! [B] : ((has_part(A,B))
=> (? [C] : ((predicate1(C,live,'John')) &
(modifier_pp(C,in,A)))))) &
(object(A,city,countable,na,geq,2))))).
002552 John sees Mary and less than 2 men.
ERROR	DRS condition not supported: [|]	tptp/4	[has_part(_,A)-1,object(A,man,countable,na,less,2)-1]
002553 There are less than 4 men and less than 3 women and a man and John.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002554 Less than 3 men and less than 4 women wait.
ERROR	DRS condition not supported: [|]	tptp/4	[has_part(_,A)-1,object(A,woman,countable,na,less,4)-1]
002555 More than 3 men and less than 4 women wait.
ERROR	DRS condition not supported: [|]	tptp/4	[has_part(_,A)-1,object(A,woman,countable,na,less,4)-1]
002556 Less than 3 men and more than 4 women wait.
ERROR	DRS condition not supported: [|]	tptp/4	[has_part(_,A)-1,object(A,man,countable,na,less,3)-1]
002557 There is a man. He waits.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,wait,B)) &
(man(B))))).
002558 There is a man. His card is correct.
fof(f1, axiom, (
? [A,B,C] : ((A=B) &
((property1(B,correct,pos)) &
((card(A)) &
((relation(A,of,C)) &
(man(C)))))))).
002559 There is a man. John checks his card.
fof(f1, axiom, (
? [A,B,C] : ((predicate2(A,check,'John',B)) &
((card(B)) &
((relation(B,of,C)) &
(man(C))))))).
002560 There is a man.John sees a card in his hand.
fof(f1, axiom, (
? [A,B,C,D] : ((modifier_pp(A,in,B)) &
((predicate2(A,see,'John',C)) &
((card(C)) &
((hand(B)) &
((relation(B,of,D)) &
(man(D))))))))).
002561 There is a man. His wife waits.
fof(f1, axiom, (
? [A,B,C] : ((predicate1(A,wait,B)) &
((wife(B)) &
((relation(B,of,C)) &
(man(C))))))).
002562 There is a man. He sees a card.
fof(f1, axiom, (
? [A,B,C] : ((predicate2(A,see,B,C)) &
((card(C)) &
(man(B)))))).
002563 There is a man. His wife sees a card.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate2(A,see,B,C)) &
((card(C)) &
((wife(B)) &
((relation(B,of,D)) &
(man(D)))))))).
002564 There is a man. He gives a card to a dog.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate3(A,give,B,C,D)) &
((dog(D)) &
((card(C)) &
(man(B))))))).
002565 There is a man. John sees him.
fof(f1, axiom, (
? [A,B] : ((predicate2(A,see,'John',B)) &
(man(B))))).
002566 There is a man. His wife gives a card to a dog.
fof(f1, axiom, (
? [A,B,C,D,E] : ((predicate3(A,give,B,C,D)) &
((dog(D)) &
((card(C)) &
((wife(B)) &
((relation(B,of,E)) &
(man(E))))))))).
002567 There is a man. A clerk sees him.
fof(f1, axiom, (
? [A,B,C] : ((predicate2(A,see,B,C)) &
((clerk(B)) &
(man(C)))))).
002568 There is a man. A clerk checks his card.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate2(A,check,B,C)) &
((card(C)) &
((relation(C,of,D)) &
((man(D)) &
(clerk(B)))))))).
002569 There is a man. A clerk sees a card in his hand.
fof(f1, axiom, (
? [A,B,C,D,E] : ((modifier_pp(A,in,B)) &
((predicate2(A,see,C,D)) &
((card(D)) &
((clerk(C)) &
((hand(B)) &
((relation(B,of,E)) &
(man(E)))))))))).
002570 There is a card. A clerk gives it to a cashier.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate3(A,give,B,C,D)) &
((cashier(D)) &
((clerk(B)) &
(card(C))))))).
002571 There is a man. A clerk gives a card to him.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate3(A,give,B,C,D)) &
((card(C)) &
((clerk(B)) &
(man(D))))))).
002572 There is a man. A clerk gives his card to him.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate3(A,give,B,C,D)) &
((card(C)) &
((relation(C,of,D)) &
((man(D)) &
(clerk(B)))))))).
002573 There is a man. A clerk gives his own card to him.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate3(A,give,B,C,D)) &
((card(C)) &
((relation(C,of,B)) &
((clerk(B)) &
(man(D)))))))).
002574 A man sees himself.
fof(f1, axiom, (
? [A,B] : ((predicate2(A,see,B,B)) &
(man(B))))).
002575 A woman enters her own card.
fof(f1, axiom, (
? [A,B,C] : ((predicate2(A,enter,B,C)) &
((card(C)) &
((relation(C,of,B)) &
(woman(B))))))).
002576 A man is in his own garden.
fof(f1, axiom, (
? [A,B,C] : ((modifier_pp(A,in,B)) &
((predicate1(A,be,C)) &
((garden(B)) &
((relation(B,of,C)) &
(man(C)))))))).
002577 a man sees his card.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002578 a man is interested-in him.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002579 a man is seen by him.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002580 a man gives his card to a dog.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002581 a man gives a dog his card.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002582 a man gives him a card.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002583 a man sees a brother of him.
fof(f1, axiom, (
? [A,B,C] : ((predicate2(A,see,B,C)) &
((relation(C,of,C)) &
((brother(C)) &
(man(B))))))).
002584 a man of his group waits.
fof(f1, axiom, (
? [A,B,C] : ((predicate1(A,wait,B)) &
((relation(B,of,C)) &
((group(C)) &
((relation(C,of,B)) &
(man(B)))))))).
002585 A man gives his dog his card in his house.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002586 There is a card. A man brings it its pencil and brings it his own computer.
fof(f1, axiom, (
? [A,B,C,D,E,F] : ((predicate3(A,bring,B,C,D)) &
((computer(C)) &
((relation(C,of,B)) &
((predicate3(E,bring,B,D,F)) &
((pencil(D)) &
((relation(D,of,F)) &
((card(F)) &
(man(B))))))))))).
002587 There is a card. A man brings it its pencil and its computer.
fof(f1, axiom, (
? [A,B,C,D,E,F] : ((object(A,na,countable,na,eq,2)) &
((has_part(A,B)) &
((computer(B)) &
((relation(B,of,C)) &
((predicate3(D,bring,E,A,F)) &
((has_part(A,C)) &
((pencil(C)) &
((relation(C,of,F)) &
((card(F)) &
(man(E))))))))))))).
002588 There is a card. A man brings it its pencil. The man brings it his own computer.
fof(f1, axiom, (
? [A,B,C,D,E,F] : ((predicate3(A,bring,B,C,D)) &
((computer(C)) &
((relation(C,of,B)) &
((predicate3(E,bring,B,D,F)) &
((pencil(D)) &
((relation(D,of,F)) &
((card(F)) &
(man(B))))))))))).
002589 There is a card. A man brings it its friend and offers it his own computer.
fof(f1, axiom, (
? [A,B,C,D,E,F] : ((predicate3(A,offer,B,C,D)) &
((computer(C)) &
((relation(C,of,B)) &
((predicate3(E,bring,B,F,D)) &
((friend(F)) &
((relation(F,of,D)) &
((card(D)) &
(man(B))))))))))).
002590 There is a card. A man brings it its man and offers it his own computer.
fof(f1, axiom, (
? [A,B,C,D,E,F] : ((predicate3(A,offer,B,C,D)) &
((computer(C)) &
((relation(C,of,B)) &
((predicate3(E,bring,B,F,D)) &
((man(F)) &
((relation(F,of,D)) &
((card(D)) &
(man(B))))))))))).
002591 There is a card. A man brings it its pencil and offers it his own computer.
fof(f1, axiom, (
? [A,B,C,D,E,F] : ((predicate3(A,offer,B,C,D)) &
((computer(C)) &
((relation(C,of,B)) &
((predicate3(E,bring,B,D,F)) &
((pencil(D)) &
((relation(D,of,F)) &
((card(F)) &
(man(B))))))))))).
002592 There is a card. A man brings it its pencil and his own computer.
fof(f1, axiom, (
? [A,B,C,D,E,F] : ((object(A,na,countable,na,eq,2)) &
((has_part(A,B)) &
((computer(B)) &
((relation(B,of,C)) &
((predicate3(D,bring,C,A,E)) &
((has_part(A,F)) &
((pencil(F)) &
((relation(F,of,E)) &
((card(E)) &
(man(C))))))))))))).
002593 A man brings a dog it.
fof(f1, axiom, (
? [A,B,C] : ((predicate3(A,bring,B,C,C)) &
((dog(C)) &
(man(B)))))).
002594 There is a dog. A man brings the dog the dog.
fof(f1, axiom, (
? [A,B,C] : ((predicate3(A,bring,B,C,C)) &
((man(B)) &
(dog(C)))))).
002595 There is a dog. The dog barks. A man brings the dog the dog.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate3(A,bring,B,C,C)) &
((man(B)) &
((predicate1(D,bark,C)) &
(dog(C))))))).
002596 A man gives John at most 3 apples.
ERROR	DRS condition not supported: [|]	tptp/4	[predicate(_,give,_,A,named(John))-1,object(A,apple,countable,na,leq,3)-1]
002597 A man gives at least 3 apples to John.
fof(f1, axiom, (
? [A,B,C] : ((predicate3(A,give,B,C,'John')) &
((object(C,apple,countable,na,geq,3)) &
(man(B)))))).
002598 A man brings a card its pencil and his own computer.
fof(f1, axiom, (
? [A,B,C,D,E,F] : ((object(A,na,countable,na,eq,2)) &
((has_part(A,B)) &
((computer(B)) &
((relation(B,of,C)) &
((predicate3(D,bring,C,A,E)) &
((has_part(A,F)) &
((pencil(F)) &
((relation(F,of,E)) &
((card(E)) &
(man(C))))))))))))).
002599 There is a man who owns each of 3 dogs. The man who owns each of 3 dogs waits.
fof(f1, axiom, (
? [A,B,C] : ((predicate1(A,wait,B)) &
((! [D] : ((has_part(C,D))
=> (? [E] : (predicate2(E,own,B,D))))) &
((object(C,dog,countable,na,eq,3)) &
(man(B))))))).
002600 There are 3 dogs. There is a man who owns each of the dogs. The man who owns each of the dogs waits.
fof(f1, axiom, (
? [A,B,C] : ((predicate1(A,wait,B)) &
((! [D] : ((has_part(C,D))
=> (? [E] : (predicate2(E,own,B,D))))) &
((man(B)) &
(object(C,dog,countable,na,eq,3))))))).
002601 There is not each of 3 men.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002602 Is every man a human?
fof(f1, conjecture, (
! [A] : ((man(A))
=> (? [B] : ((human(B)) &
(A=B)))))).
002603 John tells Mary that he waits.
fof(f1, axiom, (
? [A] : (predicate2(A,wait,'John','Mary')))).

fof(f2, axiom, (
? [A] : (predicate2(A,tell,'John','Mary')))).
002604 What does who see?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,who)
002605 If there is a a cat, there is Mary and it appears that she wants to pet this cat but my cats don't like anybody.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002606 Who eats and drinks?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,who)
002607 A man eats quickly and quickly.
fof(f1, axiom, (
? [A,B] : ((modifier_adv(A,quickly,pos)) &
((predicate1(A,eat,B)) &
(man(B)))))).
002608 A man eats how in a park?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,how)
002609 A man eats how in a park in a morning?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,how)
002610 A man eats in a park how in a morning?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,how)
002611 A man eats in a park in a morning how?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,how)
002612 A man eats quickly and in a park.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002613 A man eats quickly in a park.
fof(f1, axiom, (
? [A,B,C] : ((modifier_pp(A,in,B)) &
((modifier_adv(A,quickly,pos)) &
((predicate1(A,eat,C)) &
((man(C)) &
(park(B)))))))).
002614 A man eats in a park quickly.
fof(f1, axiom, (
? [A,B,C] : ((modifier_adv(A,quickly,pos)) &
((modifier_pp(A,in,B)) &
((predicate1(A,eat,C)) &
((man(C)) &
(park(B)))))))).
002615 A man eats in a park and quickly.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002616 A man eats how quickly?
ERROR	DRS is empty	apply_converter/2	drs([],[])
002617 A man eats how and quickly?
ERROR	DRS is empty	apply_converter/2	drs([],[])
002618 A man eats quickly and how?
ERROR	DRS is empty	apply_converter/2	drs([],[])
002619 A man eats quickly how?
ERROR	DRS is empty	apply_converter/2	drs([],[])
002620 There is a man X1. The man X1 runs quickly where?
ERROR	DRS is empty	apply_converter/2	drs([],[])
002621 Who eats or sleeps?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,who)
002622 John's height is 180cm.
fof(f1, axiom, (
? [A] : ((A=int(180,cm)) &
((height(A)) &
(relation(A,of,'John')))))).
002623 John lifts 50.5 kg.
fof(f1, axiom, (
? [A] : (predicate2(A,lift,'John',real(50.5,kg))))).
002624 The size of a box is 3cm * 44mm * 1m.
fof(f1, axiom, (
? [A,B] : ((size(A)) &
((box(B)) &
((relation(A,of,B)) &
(A=int(3,cm)*int(44,mm)*int(1,m))))))).
002625 John's speed is 10sec/60m.
fof(f1, axiom, (
? [A] : ((A=int(10,s)/int(60,m)) &
((speed(A)) &
(relation(A,of,'John')))))).
002626 John enters [1,2,].
ERROR	DRS is empty	apply_converter/2	drs([],[])
002627 John enters {1,2,}.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002628 There is who?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,who)
002629 A value is - 3 kg.
fof(f1, axiom, (
? [A] : ((A=int(-3,kg)) &
(value(A))))).
002630 A value is - 3.5 kg.
fof(f1, axiom, (
? [A] : ((A=real(-3.5,kg)) &
(value(A))))).
002631 There are 10 h of work.
fof(f1, axiom, (
? [A] : (object(A,work,mass,h,eq,10)))).
002632 There is 1 h of work.
fof(f1, axiom, (
? [A] : (work(A)))).
002633 A man has 2 t of apples.
fof(f1, axiom, (
? [A,B,C] : ((predicate2(A,have,B,C)) &
((object(C,apple,countable,t,eq,2)) &
(man(B)))))).
002634 John has 3 Â°C.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002635 Who does John not see?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,who)
002636 Is it false that every man is a human?
fof(f1, conjecture, (
~(! [A] : ((man(A))
=> (? [B] : ((human(B)) &
(A=B))))))).
002637 Is it false that every man is a human.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002638 Is it true that every man is a human.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002639 A man has 2 mol of apples.
fof(f1, axiom, (
? [A,B,C] : ((predicate2(A,have,B,C)) &
((object(C,apple,countable,mol,eq,2)) &
(man(B)))))).
002640 Is it true that John likes Mary?
fof(f1, conjecture, (
? [A] : (predicate2(A,like,'John','Mary')))).
002641 Is it false that John likes Mary?
fof(f1, conjecture, (
~(? [A] : (predicate2(A,like,'John','Mary'))))).
002642 Is it true that John likes Mary and that Mary likes Bill?
fof(f1, conjecture, (
? [A,B] : ((predicate2(A,like,'John','Mary')) &
(predicate2(B,like,'Mary','Bill'))))).
002643 Is it true that John likes Mary and Mary likes Bill?
ERROR	DRS is empty	apply_converter/2	drs([],[])
002644 Is it false that John likes Mary and that no dog likes every cat?
fof(f1, conjecture, (
~(? [A] : ((predicate2(A,like,'John','Mary')) &
(! [B] : ((dog(B))
=> (~(! [C] : ((cat(C))
=> (? [D] : (predicate2(D,like,B,C)))))))))))).
002645 John has each of 2.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002646 2 wait.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002647 It is false that a customer inserts a card.
fof(f1, axiom, (
~(? [A,B,C] : ((customer(A)) &
((card(B)) &
(predicate2(C,insert,A,B))))))).
002648 It is false that some men wait.
fof(f1, axiom, (
~(? [A,B] : ((object(A,man,countable,na,geq,2)) &
(predicate1(B,wait,A)))))).
002649 It is false that everybody sees somebody.
fof(f1, axiom, (
~(! [A] : (($true)
=> (? [B,C] : (($true) &
(predicate2(C,see,A,B)))))))).
002650 It is false that it is false that a man waits.
fof(f1, axiom, (
~(~(? [A,B] : ((man(A)) &
(predicate1(B,wait,A))))))).
002651 It is false that if there is someone then he waits.
fof(f1, axiom, (
~(! [A] : (($true)
=> (? [B] : (predicate1(B,wait,A))))))).
002652 It is false that there is some water.
fof(f1, axiom, (
~(? [A] : (object(A,water,mass,na,na,na))))).
002653 It is false that no man does not wait.
fof(f1, axiom, (
~(! [A] : ((man(A))
=> (~(~(? [B] : (predicate1(B,wait,A))))))))).
002654 It is false that a man waits and a dog barks.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,bark,B)) &
(dog(B))))).

fof(f2, axiom, (
~(? [A,B] : ((man(A)) &
(predicate1(B,wait,A)))))).
002655 It is false that there is a man and a dog barks.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,bark,B)) &
(dog(B))))).

fof(f2, axiom, (
~(? [A] : (man(A))))).
002656 It is false that a man who waits or who eats runs and sleeps.
fof(f1, axiom, (
~(? [A,B,C] : ((man(A)) &
((? [D] : ((predicate1(D,wait,A))
| (? [E] : (predicate1(E,eat,A))))) &
((predicate1(B,run,A)) &
(predicate1(C,sleep,A)))))))).
002657 It is false that a man who waits or who eats runs or sleeps.
fof(f1, axiom, (
~(? [A] : ((man(A)) &
((? [B] : ((predicate1(B,wait,A))
| (? [C] : (predicate1(C,eat,A))))) &
(? [D] : ((predicate1(D,run,A))
| (? [E] : (predicate1(E,sleep,A)))))))))).
002658 It is false that a man who waits or who eats runs or sleeps and barks.
fof(f1, axiom, (
~(? [A] : ((man(A)) &
((? [B] : ((predicate1(B,wait,A))
| (? [C] : (predicate1(C,eat,A))))) &
(? [D] : ((predicate1(D,run,A))
| (? [E,F] : ((predicate1(E,sleep,A)) &
(predicate1(F,bark,A))))))))))).
002659 It is false that a man who waits or who eats runs or sleeps ,and barks.
fof(f1, axiom, (
~(? [A,B] : ((man(A)) &
((? [C] : ((predicate1(C,wait,A))
| (? [D] : (predicate1(D,eat,A))))) &
((? [E] : ((predicate1(E,run,A))
| (? [F] : (predicate1(F,sleep,A))))) &
(predicate1(B,bark,A)))))))).
002660 It is false that there is a dog ,and there is a man or there is a woman ,and there is a cat.
fof(f1, axiom, (
? [A] : (cat(A)))).

fof(f2, axiom, (
? [A] : ((man(A))
| (? [B] : (woman(B)))))).

fof(f3, axiom, (
~(? [A] : (dog(A))))).
002661 It is false that there is a dog ,and that there is a man or that there is a woman ,and there is a cat.
fof(f1, axiom, (
? [A] : (cat(A)))).

fof(f2, axiom, (
~(? [A] : ((dog(A)) &
(? [B] : ((man(B))
| (? [C] : (woman(C))))))))).
002662 It is false that there is a dog ,and that there is a man or that there is a woman ,and that there is a cat.
fof(f1, axiom, (
~(? [A,B] : ((dog(A)) &
((? [C] : ((man(C))
| (? [D] : (woman(D))))) &
(cat(B))))))).
002663 It is false that there is a dog A. There is a man C or there is a woman E. It is false that there is a cat G.
fof(f1, axiom, (
~(? [A] : (dog(A))))).

fof(f2, axiom, (
? [A] : ((man(A))
| (? [B] : (woman(B)))))).

fof(f3, axiom, (
~(? [A] : (cat(A))))).
002664 It is false that there is a man ,and that the man sleeps or that the man waits.
fof(f1, axiom, (
~(? [A] : ((man(A)) &
(? [B] : ((predicate1(B,sleep,A))
| (? [C] : (predicate1(C,wait,A))))))))).
002665 It is false that there is a dog and that it is false that there is a cat.
fof(f1, axiom, (
~(? [A] : ((dog(A)) &
(~(? [B] : (cat(B)))))))).
002666 It is false that John runs. He walks.
fof(f1, axiom, (
~(? [A] : (predicate1(A,run,'John'))))).

fof(f2, axiom, (
? [A] : (predicate1(A,walk,'John')))).
002667 It is false that for every book the book has a title and the book has a code.
fof(f1, axiom, (
~(! [A] : ((book(A))
=> (? [B,C,D,E] : ((title(B)) &
((predicate2(C,have,A,B)) &
((code(D)) &
(predicate2(E,have,A,D)))))))))).
002668 It is false that if there is a book then the book has a title and the book has a code.
fof(f1, axiom, (
~(! [A] : ((book(A))
=> (? [B,C,D,E] : ((title(B)) &
((predicate2(C,have,A,B)) &
((code(D)) &
(predicate2(E,have,A,D)))))))))).
002669 It is false that there is a man and that there is a dog or that there is a cat.
fof(f1, axiom, (
~(? [A,B] : (((man(A)) &
(dog(B)))
| (? [C] : (cat(C))))))).
002670 It is false that there is a man and that there is a dog or there is a cat.
fof(f1, axiom, (
(~(? [A,B] : ((man(A)) &
(dog(B)))))
| (? [C] : (cat(C))))).
002671 It is false that there is a man ,and there is a dog or there is a cat.
fof(f1, axiom, (
? [A] : ((dog(A))
| (? [B] : (cat(B)))))).

fof(f2, axiom, (
~(? [A] : (man(A))))).
002672 It is false that John likes a dog ,and that a cat and a rat and a mouse see a cheese ,or that a man waits.
fof(f1, axiom, (
~(? [A,B,C,D,E,F,G,H] : (((dog(A)) &
((predicate2(B,like,'John',A)) &
((cat(C)) &
((has_part(H,C)) &
((cheese(D)) &
((predicate2(E,see,H,D)) &
((rat(F)) &
((has_part(H,F)) &
((mouse(G)) &
((has_part(H,G)) &
(object(H,na,countable,na,eq,3))))))))))))
| (? [I,J] : ((man(I)) &
(predicate1(J,wait,I)))))))).
002673 It is false that John runs. John walks.
fof(f1, axiom, (
~(? [A] : (predicate1(A,run,'John'))))).

fof(f2, axiom, (
? [A] : (predicate1(A,walk,'John')))).
002674 It is false that John walks. He runs.
fof(f1, axiom, (
~(? [A] : (predicate1(A,walk,'John'))))).

fof(f2, axiom, (
? [A] : (predicate1(A,run,'John')))).
002675 John walks. It is false that John runs.
fof(f1, axiom, (
? [A] : (predicate1(A,walk,'John')))).

fof(f2, axiom, (
~(? [A] : (predicate1(A,run,'John'))))).
002676 It is false that there are 2 kg of dirty laundry.
fof(f1, axiom, (
~(? [A] : ((object(A,laundry,mass,kg,eq,2)) &
(property1(A,dirty,pos)))))).
002677 It is false that there is a man or there is a dog.
fof(f1, axiom, (
(~(? [A] : (man(A))))
| (? [B] : (dog(B))))).
002678 It is false that there is a man or that there is a dog.
fof(f1, axiom, (
~(? [A] : ((man(A))
| (? [B] : (dog(B))))))).
002679 It is false that it is not provable that John flies.
ERROR	DRS condition not supported: ~	tptp/4	~drs([A],[predicate(A,fly,named(John))-1])
002680 It is false that everybody waits.
fof(f1, axiom, (
~(! [A] : (($true)
=> (? [B] : (predicate1(B,wait,A))))))).
002681 It is false that it is necessary that John waits and that Mary sleeps.
ERROR	DRS condition not supported: must	tptp/4	must(drs([A,B],[predicate(A,wait,named(John))-1/10,predicate(B,sleep,named(Mary))-1/14]))
002682 If John does not eat and it is false that somebody feeds him then John is hungry.
fof(f1, axiom, (
((~(? [A] : (predicate1(A,eat,'John')))) &
(~(? [B,C] : (($true) &
(predicate2(C,feed,B,'John'))))))
=> (? [D] : ((property1(D,hungry,pos)) &
('John'=D))))).
002683 Zürich is a not Köln.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002684 John is not happy.
fof(f1, axiom, (
~(? [A] : ((property1(A,happy,pos)) &
('John'=A))))).
002685 Who does not see himself?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,who)
002686 Everybody is not seen by who?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,who)
002687 Who sees who who does not see himself?
ERROR	DRS is empty	apply_converter/2	drs([],[])
002688 Who does not see who who does not see himself?
ERROR	DRS is empty	apply_converter/2	drs([],[])
002689 John does wait.
fof(f1, axiom, (
? [A] : (predicate1(A,wait,'John')))).
002690 John does like Mary.
fof(f1, axiom, (
? [A] : (predicate2(A,like,'John','Mary')))).
002691 It is false that there is a dog. There is a man or there is a woman ,and it is false that there is a cat.
fof(f1, axiom, (
~(? [A] : (dog(A))))).

fof(f2, axiom, (
~(? [A] : (cat(A))))).

fof(f3, axiom, (
? [A] : ((man(A))
| (? [B] : (woman(B)))))).
002692 It is false that there is a dog ,and there is a man or there is a woman ,and it is false that there is a cat.
fof(f1, axiom, (
~(? [A] : (cat(A))))).

fof(f2, axiom, (
? [A] : ((man(A))
| (? [B] : (woman(B)))))).

fof(f3, axiom, (
~(? [A] : (dog(A))))).
002693 It is false that a man sleeps or waits.
fof(f1, axiom, (
~(? [A] : ((man(A)) &
(? [B] : ((predicate1(B,sleep,A))
| (? [C] : (predicate1(C,wait,A))))))))).
002694 It is false that there is a man and the man sleeps or the man waits.
fof(f1, axiom, (
? [A,B] : (((~(? [C] : (man(C)))) &
((predicate1(A,sleep,B)) &
(man(B))))
| (? [D] : (predicate1(D,wait,B)))))).
002695 It is false that there is a man ,and the man sleeps or the man waits.
fof(f1, axiom, (
? [A,B] : (((predicate1(A,sleep,B)) &
(man(B)))
| (? [C] : (predicate1(C,wait,B)))))).

fof(f2, axiom, (
~(? [A] : (man(A))))).
002696 It is false that there is a man and a man sleeps or the man waits.
fof(f1, axiom, (
? [A,B] : (((~(? [C] : (man(C)))) &
((man(A)) &
(predicate1(B,sleep,A))))
| (? [D] : (predicate1(D,wait,A)))))).
002697 It is false that there is a man and a man sleeps or that the man waits.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002698 It is false that there is a dog and it is false that there is a cat.
fof(f1, axiom, (
~(? [A] : (cat(A))))).

fof(f2, axiom, (
~(? [A] : (dog(A))))).
002699 It is false that there is a dog. It is false that there is a cat.
fof(f1, axiom, (
~(? [A] : (dog(A))))).

fof(f2, axiom, (
~(? [A] : (cat(A))))).
002700 It is false that a man waits and that a dog barks.
fof(f1, axiom, (
~(? [A,B,C,D] : ((man(A)) &
((predicate1(B,wait,A)) &
((dog(C)) &
(predicate1(D,bark,C)))))))).
002701 It is false that there is a man and that a dog barks.
fof(f1, axiom, (
~(? [A,B,C] : ((man(A)) &
((dog(B)) &
(predicate1(C,bark,B))))))).
002702 It is false that there is a dog ,and that there is a man or there is a woman ,and there is a cat.
fof(f1, axiom, (
? [A] : (cat(A)))).

fof(f2, axiom, (
(~(? [A,B] : ((dog(A)) &
(man(B)))))
| (? [C] : (woman(C))))).
002703 Which man waits?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,which)
002704 John sees which man?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,which)
002705 A man the card of who is valid or who is green and who is happy waits.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,wait,B)) &
((? [C,D] : (((property1(C,valid,pos)) &
((D=C) &
((relation(D,of,B)) &
(card(D)))))
| (? [E,F] : ((property1(E,green,pos)) &
((B=E) &
((property1(F,happy,pos)) &
(B=F))))))) &
(man(B)))))).
002706 Which men wait?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,which)
002707 Which man eats and drinks?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,which)
002708 There is which man?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,which)
002709 A man 3 dogs of who bark waits.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate1(A,wait,B)) &
((predicate1(C,bark,D)) &
((relation(D,of,B)) &
((object(D,dog,countable,na,eq,3)) &
(man(B)))))))).
002710 Which man does not wait?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,which)
002711 John does not own which car?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,which)
002712 Which dog of John barks?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,which)
002713 There is a man X. Which man X waits?
ERROR	DRS is empty	apply_converter/2	drs([],[])
002714 Whose dogs wait?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,what)
002715 Whose article whose title is "ACE" does Mary read?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,what)
002716 Whose article whose title is "ACE" is given to Mary by who?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,what)
002717 An item is given to who?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,who)
002718 Which dogs of John bark?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,which)
002720 Which dog of John waits?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,which)
002721 Which man sees every dog?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,which)
002722 John does not own which dog?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,which)
002723 There is a man X. Which man is X?
ERROR	DRS condition not supported: question	tptp/4	question(drs([A,B],[query(A,which)-2/1,object(A,man,countable,na,eq,1)-2/2,predicate(B,be,A,_)-2/3]))
002724 which man's dog barks?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,which)
002725 There are some cities in which John lives.
fof(f1, axiom, (
? [A,B] : ((modifier_pp(A,in,B)) &
((predicate1(A,live,'John')) &
(object(B,city,countable,na,geq,2)))))).
002726 There are less than 2 kg of dirty laundry.
ERROR	DRS condition not supported: [|]	tptp/4	[property(A,dirty,pos)-1,object(A,laundry,mass,kg,less,2)-1]
002727 There are at most 2 kg of dirty laundry.
ERROR	DRS condition not supported: [|]	tptp/4	[property(A,dirty,pos)-1,object(A,laundry,mass,kg,leq,2)-1]
002728 There are at least 2 kg of dirty laundry.
fof(f1, axiom, (
? [A] : ((property1(A,dirty,pos)) &
(object(A,laundry,mass,kg,geq,2))))).
002729 There are 2 kg of dirty laundry.
fof(f1, axiom, (
? [A] : ((property1(A,dirty,pos)) &
(object(A,laundry,mass,kg,eq,2))))).
002730 It is false that there is a man ,and that there is a dog or there is a cat.
fof(f1, axiom, (
(~(? [A,B] : ((man(A)) &
(dog(B)))))
| (? [C] : (cat(C))))).
002731 There is are 2 kg of apples.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002732 A customer can enter what?
ERROR	DRS condition not supported: can	tptp/4	can(drs([A,B],[query(A,what)-1/5,predicate(B,enter,_,A)-1/4]))
002733 More than 3 kg of white rice of John rot.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,rot,B)) &
((relation(B,of,'John')) &
((property1(B,white,pos)) &
(object(B,rice,mass,kg,greater,3))))))).
002736 1 kg of apples wait.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,wait,B)) &
(apple(B))))).
002737 If there is somebody X of a dog of X then X waits.
fof(f1, axiom, (
! [A,B] : ((($true) &
((dog(B)) &
((relation(B,of,A)) &
(relation(A,of,B)))))
=> (? [C] : (predicate1(C,wait,A)))))).
002739 ((1+2)-3) = 0.
fof(f1, axiom, (
1+2-3=0)).
002740 For each of some men for each of some women a dog barks.
fof(f1, axiom, (
? [A] : ((! [B] : ((has_part(A,B))
=> (? [C] : ((object(C,woman,countable,na,geq,2)) &
(! [D] : ((has_part(C,D))
=> (? [E,F] : ((dog(E)) &
(predicate1(F,bark,E)))))))))) &
(object(A,man,countable,na,geq,2))))).
002741 For each of some men for every woman a dog barks.
fof(f1, axiom, (
? [A] : ((! [B] : ((has_part(A,B))
=> (! [C] : ((woman(C))
=> (? [D,E] : ((dog(D)) &
(predicate1(E,bark,D)))))))) &
(object(A,man,countable,na,geq,2))))).
002742 For every man for each of some women a dog barks.
fof(f1, axiom, (
! [A] : ((man(A))
=> (? [B] : ((object(B,woman,countable,na,geq,2)) &
(! [C] : ((has_part(B,C))
=> (? [D,E] : ((dog(D)) &
(predicate1(E,bark,D))))))))))).
002743 There is a man such that there is a woman such that the man knows the woman.
fof(f1, axiom, (
? [A,B,C] : ((predicate2(A,know,B,C)) &
((woman(C)) &
(man(B)))))).
002744 There is 2 kg of laundry X1.
fof(f1, axiom, (
? [A] : (object(A,laundry,mass,kg,eq,2)))).
002745 There are 2 kg of laundry X1.
fof(f1, axiom, (
? [A] : (object(A,laundry,mass,kg,eq,2)))).
002746 2 kg of laundry wait.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,wait,B)) &
(object(B,laundry,mass,kg,eq,2))))).
002747 1 kg of laundry wait.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,wait,B)) &
(laundry(B))))).
002748 1 kg of laundry waits.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,wait,B)) &
(laundry(B))))).
002749 2 kg of apples exist.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,exist,B)) &
(object(B,apple,countable,kg,eq,2))))).
002750 2 kg of apples exists.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,exist,B)) &
(object(B,apple,countable,kg,eq,2))))).
002751 1 kg of apples exist.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,exist,B)) &
(apple(B))))).
002752 1 kg of apples exists.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,exist,B)) &
(apple(B))))).
002753 at most 3 l of good milk X of John are in the fridge.
ERROR	DRS condition not supported: [|]	tptp/4	[modifier_pp(A,in,C)-1,predicate(A,be,B)-1,relation(B,of,named(John))-1,object(C,fridge,countable,na,eq,1)-1,property(B,good,pos)-1,object(B,milk,mass,l,leq,3)-1]
002754 at least 3 l of good milk X which is owned by John is in the fridge.
fof(f1, axiom, (
? [A,B,C,D] : ((fridge(A)) &
((modifier_pp(B,in,A)) &
((predicate1(B,be,C)) &
((predicate2(D,own,'John',C)) &
((property1(C,good,pos)) &
(object(C,milk,mass,l,geq,3))))))))).
002755 there is a man who knows who?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,who)
002756 There are who?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,who)
002757 There are which customers who see who?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,which)
002758 Some men can not wait.
ERROR	DRS condition not supported: can	tptp/4	can(drs([A],[predicate(A,wait,_)-1/5]))
002759 John can not wait.
ERROR	DRS condition not supported: can	tptp/4	can(drs([A],[predicate(A,wait,named(John))-1/4]))
002760 A man can not be rich.
ERROR	DRS condition not supported: can	tptp/4	can(drs([A,B],[property(A,rich,pos)-1/6,predicate(B,be,_,A)-1/3]))
002761 A man can not give a woman an apple.
ERROR	DRS condition not supported: can	tptp/4	can(drs([A,B,C],[object(A,woman,countable,na,eq,1)-1/7,object(B,apple,countable,na,eq,1)-1/9,predicate(C,give,_,B,A)-1/5]))
002762 Mary does not like some men who are not rich.
fof(f1, axiom, (
~(? [A,B] : ((object(A,man,countable,na,geq,2)) &
((~(? [C] : ((property1(C,rich,pos)) &
(A=C)))) &
(predicate2(B,like,'Mary',A))))))).
002763 Everybody does not like a dog that does not bark.
fof(f1, axiom, (
! [A] : (($true)
=> (~(? [B,C] : ((dog(B)) &
((~(? [D] : (predicate1(D,bark,B)))) &
(predicate2(C,like,A,B))))))))).
002764 A cat is not hated by a dog.
fof(f1, axiom, (
? [A] : ((~(? [B,C] : ((dog(B)) &
(predicate2(C,hate,B,A))))) &
(cat(A))))).
002765 Every goat likes some grass and likes some water and does not like something that is not some grass and that is not some water.
fof(f1, axiom, (
! [A] : ((goat(A))
=> (? [B,C,D,E] : ((object(B,grass,mass,na,na,na)) &
((predicate2(C,like,A,B)) &
((object(D,water,mass,na,na,na)) &
((predicate2(E,like,A,D)) &
(~(? [F,G] : (($true) &
((~(? [H] : ((object(H,grass,mass,na,na,na)) &
(F=H)))) &
((~(? [I] : ((object(I,water,mass,na,na,na)) &
(F=I)))) &
(predicate2(G,like,A,F))))))))))))))).
002766 which code does a customer enter?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,which)
002767 which code does who enter?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,who)
002768 who gives what to who?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,who)
002769 which code has a customer to enter?
ERROR	DRS is empty	apply_converter/2	drs([],[])
002770 what must a man own?
ERROR	DRS condition not supported: must	tptp/4	must(drs([A,B],[query(A,what)-1/1,predicate(B,own,_,A)-1/5]))
002771 what can a man not have?
ERROR	DRS condition not supported: can	tptp/4	can(drs([A,B],[query(A,what)-1/1,predicate(B,have,_,A)-1/6]))
002772 Which customer does not provably wait?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,which)
002773 Which customer does John not provably know?
ERROR	DRS condition not supported: ~	tptp/4	~drs([A,B],[query(A,which)-1/1,object(A,customer,countable,na,eq,1)-1/2,predicate(B,know,named(John),A)-1/7])
002774 Which customer does John not provably not know?
ERROR	DRS condition not supported: ~	tptp/4	~drs([],[-drs([A,B],[query(A,which)-1/1,object(A,customer,countable,na,eq,1)-1/2,predicate(B,know,named(John),A)-1/8])])
002775 does John not have to wait?
ERROR	DRS condition not supported: must	tptp/4	must(drs([A],[predicate(A,wait,named(John))-1/6]))
002776 Has John to wait?
ERROR	DRS is empty	apply_converter/2	drs([],[])
002777 which code does a customer have to enter?
ERROR	DRS condition not supported: must	tptp/4	must(drs([A,B],[query(A,which)-1/1,object(A,code,countable,na,eq,1)-1/2,predicate(B,enter,_,A)-1/8]))
002778 Does John have to wait?
ERROR	DRS condition not supported: must	tptp/4	must(drs([A],[predicate(A,wait,named(John))-1/5]))
002779 John does have to wait.
ERROR	DRS condition not supported: must	tptp/4	must(drs([A],[predicate(A,wait,named(John))-1/5]))
002780 is a code entered by who?
ERROR	DRS is empty	apply_converter/2	drs([],[])
002781 is a code entered by a customer?
fof(f1, conjecture, (
? [A,B,C] : ((code(A)) &
((customer(B)) &
(predicate2(C,enter,B,A)))))).
002782 can a code be entered by a customer?
ERROR	DRS condition not supported: can	tptp/4	can(drs([A,B],[object(A,customer,countable,na,eq,1)-1/8,predicate(B,enter,A,_)-1/5]))
002783 does a code have to be entered by someone?
ERROR	DRS condition not supported: must	tptp/4	must(drs([A,B],[object(A,somebody,countable,na,eq,1)-1/10,predicate(B,enter,A,_)-1/7]))
002784 must every code have a customer?
ERROR	DRS condition not supported: must	tptp/4	must(drs([A,B],[object(A,customer,countable,na,eq,1)-1/6,predicate(B,have,_,A)-1/4]))
002785 is a customer not provably a clerk?
ERROR	DRS condition not supported: ~	tptp/4	~drs([A,B],[object(A,clerk,countable,na,eq,1)-1/7,predicate(B,be,_,A)-1/1])
002786 Which code does a customer have to enter?
ERROR	DRS condition not supported: must	tptp/4	must(drs([A,B],[query(A,which)-1/1,object(A,code,countable,na,eq,1)-1/2,predicate(B,enter,_,A)-1/8]))
002787 Which code does a customer not have to enter?
ERROR	DRS condition not supported: must	tptp/4	must(drs([A,B],[query(A,which)-1/1,object(A,code,countable,na,eq,1)-1/2,predicate(B,enter,_,A)-1/9]))
002788 Which codes must a customer enter?
ERROR	DRS condition not supported: must	tptp/4	must(drs([A,B],[query(A,which)-1/1,object(A,code,countable,na,geq,2)-1/2,predicate(B,enter,_,A)-1/6]))
002789 Which cards must every customer enter into which slots?
ERROR	DRS condition not supported: must	tptp/4	must(drs([A,B,C],[query(A,which)-1/1,object(A,card,countable,na,geq,2)-1/2,query(B,which)-1/8,object(B,slot,countable,na,geq,2)-1/9,predicate(C,enter,_,A)-1/6,modifier_pp(C,into,B)-1/7]))
002790 what is a dog living in?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,what)
002791 in what is a dog living in?
ERROR	DRS is empty	apply_converter/2	drs([],[])
002792 in what is a dog living?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,what)
002793 in what is a dog living in the morning?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,what)
002794 in what is a dog living when?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,what)
002795 in what is who living?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,who)
002796 in what can a dog live?
ERROR	DRS condition not supported: can	tptp/4	can(drs([A,B],[query(A,what)-1/2,predicate(B,live,_)-1/6,modifier_pp(B,in,A)-1/1]))
002797 in what does a dog live?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,what)
002798 in what does a dog have to live?
ERROR	DRS condition not supported: must	tptp/4	must(drs([A,B],[query(A,what)-1/2,predicate(B,live,_)-1/8,modifier_pp(B,in,A)-1/1]))
002799 in what does a dog not have to live?
ERROR	DRS condition not supported: must	tptp/4	must(drs([A,B],[query(A,what)-1/2,predicate(B,live,_)-1/9,modifier_pp(B,in,A)-1/1]))
002800 in what does who not have to live for which reason?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,who)
002801 in which house does John live?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,which)
002802 how can a customer enter a card?
ERROR	DRS condition not supported: can	tptp/4	can(drs([A,B],[object(A,card,countable,na,eq,1)-1/7,predicate(B,enter,_,A)-1/5,query(B,how)-1/1]))
002803 how does every customer have to enter his/her own card?
ERROR	DRS condition not supported: must	tptp/4	must(drs([A,B],[relation(A,of,C)-1/8,object(A,card,countable,na,eq,1)-1/12,predicate(B,enter,C,A)-1/7,query(B,how)-1/1]))
002804 how does every customer have to enter his/her own card of which account?
ERROR	DRS condition not supported: must	tptp/4	must(drs([A,B,C],[relation(A,of,D)-1/8,object(A,card,countable,na,eq,1)-1/12,query(B,which)-1/14,object(B,account,countable,na,eq,1)-1/15,relation(A,of,B)-1/13,predicate(C,enter,D,A)-1/7,query(C,how)-1/1]))
002805 Where can a card be bought by a customer?
ERROR	DRS condition not supported: can	tptp/4	can(drs([A,B],[object(A,customer,countable,na,eq,1)-1/9,predicate(B,buy,A,_)-1/6,query(B,where)-1/1]))
002806 Where can which cards be bought by a customer?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,which)
002807 Where can which cards be bought by which customers of John?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,which)
002808 When is a string a password?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,when)
002809 When is a string a password of who?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,who)
002810 Zürich is not Köln.
fof(f1, axiom, (
~('Zürich'='Köln'))).
002811 John has 3 °C.
fof(f1, axiom, (
? [A] : (predicate2(A,have,'John',int(3,'°C'))))).
002812 There are John and 2 men ManGroup. ManGroup are happy.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002813 2 men M1 and M2 drink. M1 talk.
fof(f1, axiom, (
? [A,B,C,D,E] : ((predicate1(A,talk,B)) &
((object(C,na,countable,na,eq,2)) &
((has_part(C,D)) &
(($true) &
((predicate1(E,drink,C)) &
((has_part(C,B)) &
(object(B,man,countable,na,eq,2)))))))))).
002814 2 men X and Y wait. X sleep. Y drinks.
fof(f1, axiom, (
? [A,B,C,D,E,F] : ((predicate1(A,drink,B)) &
((predicate1(C,sleep,D)) &
((object(E,na,countable,na,eq,2)) &
((has_part(E,B)) &
(($true) &
((predicate1(F,wait,E)) &
((has_part(E,D)) &
(object(D,man,countable,na,eq,2))))))))))).
002815 2 men X and Y's dog wait. X sleep. Y drinks.
fof(f1, axiom, (
? [A,B,C,D,E,F,G] : ((predicate1(A,drink,B)) &
((predicate1(C,sleep,D)) &
((object(E,na,countable,na,eq,2)) &
((has_part(E,F)) &
((dog(F)) &
((relation(F,of,B)) &
(($true) &
((predicate1(G,wait,E)) &
((has_part(E,D)) &
(object(D,man,countable,na,eq,2))))))))))))).
002817 % ; @  ^ ` | ~
ERROR	DRS is empty	apply_converter/2	drs([],[])
002818 123man man123 123man123 man123man
ERROR	DRS is empty	apply_converter/2	drs([],[])
002819 John likes Õnne.
fof(f1, axiom, (
? [A] : (predicate2(A,like,'John','Õnne')))).
002820 John knows that "Миша lives in СССР" holds.
ERROR	DRS condition not supported: :	tptp/4	_:drs([A],[predicate(A,hold,string(Миша lives in СССР))-1])
002821 Миша lives in СССР.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002822 John reads "تراجيديا هاملت Hamlet واحدة من أهم مسرحيات شكسبير . كتبت في عام 1600".
fof(f1, axiom, (
? [A] : (predicate2(A,read,'John',string('تراجيديا هاملت Hamlet واحدة من أهم مسرحيات شكسبير . كتبت في عام 1600'))))).
002823 A card is manually taken by John.
fof(f1, axiom, (
? [A,B] : ((modifier_adv(A,manually,pos)) &
((predicate2(A,take,'John',B)) &
(card(B)))))).
002824 A card is taken by John manually.
fof(f1, axiom, (
? [A,B] : ((modifier_adv(A,manually,pos)) &
((predicate2(A,take,'John',B)) &
(card(B)))))).
002825 There are some men each of whose dogs barks.
fof(f1, axiom, (
? [A,B] : ((! [C] : ((has_part(A,C))
=> (? [D] : (predicate1(D,bark,C))))) &
((relation(A,of,B)) &
((object(A,dog,countable,na,geq,2)) &
(object(B,man,countable,na,geq,2))))))).
002826 John is when in Paris?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,when)
002827 John is in Paris when?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,when)
002828 John is in Paris when with Mary?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,when)
002829 John is in Paris when where?
ERROR	DRS is empty	apply_converter/2	drs([],[])
002830 There are some men a dog of whose barks.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002831 There are some men a dog of the men barks.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002832 John is rich where?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,where)
002833 John is where where?
ERROR	DRS is empty	apply_converter/2	drs([],[])
002834 John is in a park in the park.
fof(f1, axiom, (
? [A,B] : ((modifier_pp(A,in,B)) &
((predicate1(A,be,'John')) &
(park(B)))))).
002835 John drinks p:õlu.
fof(f1, axiom, (
? [A] : (predicate2(A,drink,'John',õlu)))).
002836 Can a book be written by a man?
ERROR	DRS condition not supported: can	tptp/4	can(drs([A,B],[object(A,man,countable,na,eq,1)-1/8,predicate(B,write,A,_)-1/5]))
002837 It is false that there are a man and a woman and that the man waits.
fof(f1, axiom, (
~(? [A,B,C,D] : ((man(A)) &
((has_part(C,A)) &
((woman(B)) &
((has_part(C,B)) &
((object(C,na,countable,na,eq,2)) &
(predicate1(D,wait,A)))))))))).
002838 John who is larger than his own brother can work carefully in a year that is not 2006 and that is not in [1981, 1983, 1985].
ERROR	DRS condition not supported: can	tptp/4	can(drs([A,D],[object(A,year,countable,na,eq,1)-1/14,-drs([B],[predicate(B,be,A,int(2006))-1/16]),-drs([C],[predicate(C,be,A)-1/21,modifier_pp(C,in,list([int(1981),int(1983),int(1985)]))-1/23]),predicate(D,work,named(John))-1/10,modifier_pp(D,in,A)-1/12,modifier_adv(D,carefully,pos)-1/11]))
002839 If each of some men who are {John, Bill} gives a small text "abc" to a woman then John must buy 2 kg of food or knows that it is not provable that 2 km / (2.3 + 4) = X * 2.
ERROR	DRS function set/1 not supported	arg_to_tptp/2	set([named(John),named(Bill)])
002840 Who is mad-about John who is rich and who is as fond-of Mary as of Sue?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,who)
002841 At most 3 men own more than 5 cars. At most 5 cars are owned by more than 3 men.
ERROR	DRS condition not supported: [|]	tptp/4	[predicate(_,own,B,A)-1,object(A,car,countable,na,greater,5)-1,object(B,man,countable,na,leq,3)-1]
002842 There are at most 3 men. The men wait.
ERROR	DRS condition not supported: [|]	tptp/4	[object(_,man,countable,na,leq,3)-1]
002843 No man but John waits.
fof(f1, axiom, (
! [A,B] : (((predicate1(A,wait,B)) &
(man(B)))
=> (B='John')))).
002844 each of not at most 5 men owns each of not at most 8 cars.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002845 each of at most 5 men owns each of less than 8 cars.
ERROR	DRS condition not supported: [|]	tptp/4	[drs([A],[has_part(E,A)-1])=>drs([B],[[drs([C],[has_part(B,C)-1])=>drs([D],[predicate(D,own,A,C)-1]),object(B,car,countable,na,less,8)-1]]),object(E,man,countable,na,leq,5)-1]
002846 every man owns each of at most 5 cars.
ERROR	DRS condition not supported: [|]	tptp/4	[drs([A],[has_part(C,A)-1])=>drs([B],[predicate(B,own,_,A)-1]),object(C,car,countable,na,leq,5)-1]
002847 at most 1 kg of water flows.
ERROR	DRS condition not supported: [|]	tptp/4	[predicate(_,flow,A)-1,object(A,water,mass,kg,leq,1)-1]
002849 A card manually is taken by John.
fof(f1, axiom, (
? [A,B] : ((modifier_pp(C,by,'John')) &
((A=B) &
((property1(B,taken,pos)) &
((modifier_adv(C,manually,pos)) &
(card(A)))))))).
002850 John is in a park manually.
fof(f1, axiom, (
? [A,B] : ((modifier_adv(A,manually,pos)) &
((modifier_pp(A,in,B)) &
((predicate1(A,be,'John')) &
(park(B))))))).
002851 -0 /= -1.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002852 -0 = -1.
fof(f1, axiom, (
0= -1)).
002853 2l of water runs. It is clean.
fof(f1, axiom, (
? [A,B,C] : ((A=B) &
((property1(B,clean,pos)) &
((predicate1(C,run,A)) &
(object(A,water,mass,l,eq,2))))))).
002854 Some water of John runs. The water of John is clean.
fof(f1, axiom, (
? [A,B,C] : ((A=B) &
((property1(B,clean,pos)) &
((predicate1(C,run,A)) &
((relation(A,of,'John')) &
(object(A,water,mass,na,na,na)))))))).
002855 Some water of John runs. Some water of Mary flows. The water of John is clean.
fof(f1, axiom, (
? [A,B,C] : ((A=B) &
((property1(B,clean,pos)) &
((predicate1(C,run,A)) &
((relation(A,of,'John')) &
(object(A,water,mass,na,na,na)))))))).

fof(f2, axiom, (
? [A,B] : ((predicate1(A,flow,B)) &
((relation(B,of,'Mary')) &
(object(B,water,mass,na,na,na)))))).
002856 2l of water of John runs.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,run,B)) &
((relation(B,of,'John')) &
(object(B,water,mass,l,eq,2)))))).
002857 2l of water that every man drinks runs.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,run,B)) &
((! [C] : ((man(C))
=> (? [D] : (predicate2(D,drink,C,B))))) &
(object(B,water,mass,l,eq,2)))))).
002858 2l of water of John runs. 2l of water of Mary flows. The water of John is clean.
fof(f1, axiom, (
? [A,B,C] : ((A=B) &
((property1(B,clean,pos)) &
((predicate1(C,run,A)) &
((relation(A,of,'John')) &
(object(A,water,mass,l,eq,2)))))))).

fof(f2, axiom, (
? [A,B] : ((predicate1(A,flow,B)) &
((relation(B,of,'Mary')) &
(object(B,water,mass,l,eq,2)))))).
002859 2 kg of water runs. The water is cold.
fof(f1, axiom, (
? [A,B,C] : ((A=B) &
((property1(B,cold,pos)) &
((predicate1(C,run,A)) &
(object(A,water,mass,kg,eq,2))))))).
002860 2l of warm water flows. 2l of cold water flows. The warm water boils.
fof(f1, axiom, (
? [A,B,C] : ((predicate1(A,boil,B)) &
((predicate1(C,flow,B)) &
((property1(B,warm,pos)) &
(object(B,water,mass,l,eq,2))))))).

fof(f2, axiom, (
? [A,B] : ((predicate1(A,flow,B)) &
((property1(B,cold,pos)) &
(object(B,water,mass,l,eq,2)))))).
002861 If 2l of water boils and the water contains an egg then the water contains a boiled egg.
fof(f1, axiom, (
! [A,B,C,D] : (((object(A,water,mass,l,eq,2)) &
((predicate1(B,boil,A)) &
((egg(C)) &
(predicate2(D,contain,A,C)))))
=> (? [E,F] : ((egg(E)) &
((property1(E,boiled,pos)) &
(predicate2(F,contain,A,E)))))))).
002862 Every man is seen by his own dog.
fof(f1, axiom, (
! [A] : ((man(A))
=> (? [B,C] : ((relation(B,of,A)) &
((dog(B)) &
(predicate2(C,see,B,A)))))))).
002863 The n:blahs wait.
fof(f1, axiom, (
? [A,B] : ((object(A,blahs,countable,na,geq,2)) &
(predicate1(B,wait,A))))).
002864 A number X is [X].
ERROR	DRS function list/1 not supported	arg_to_tptp/2	list([_])
002865 A number X is [X] and {X, X}.
ERROR	DRS function set/1 not supported	arg_to_tptp/2	set([A,A])
002866 There is a number X. [X, X] is bigger than {X, X}.
ERROR	DRS function list/1 not supported	arg_to_tptp/2	list([A,A])
002867 There are 3 men. There are who?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,who)
002868 Which men are there?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,which)
002869 Which dogs of a man are there?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,which)
002870 There are which dogs of a man?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,which)
002871 There are 3 men X. There are 4 men Y. John sees X. Mary sees Y. Bill sees X.
fof(f1, axiom, (
? [A,B,C] : ((predicate2(A,see,'Bill',B)) &
((predicate2(C,see,'John',B)) &
(object(B,man,countable,na,eq,3)))))).

fof(f2, axiom, (
? [A,B] : ((predicate2(A,see,'Mary',B)) &
(object(B,man,countable,na,eq,4))))).
002872 John and Mary wait. Bill gives them them.
fof(f1, axiom, (
? [A,B,C] : ((predicate3(A,give,'Bill',B,B)) &
((object(B,na,countable,na,eq,2)) &
((has_part(B,'Mary')) &
((predicate1(C,wait,B)) &
(has_part(B,'John')))))))).
002873 "abc" is "ab" & "c".
ERROR	DRS operator '&' not supported	arg_to_tptp/2	expr(&,string(ab),string(c))
002874 "abc" is "abc" & "" & "".
ERROR	DRS operator '&' not supported	arg_to_tptp/2	expr(&,expr(&,string(abc),string()),string())
002875 "123" is "12" & "3".
ERROR	DRS operator '&' not supported	arg_to_tptp/2	expr(&,string(12),string(3))
002878 human:Peeter owns a car. He drives.
fof(f1, axiom, (
? [A,B] : ((predicate2(A,own,'Peeter',B)) &
(car(B))))).

fof(f2, axiom, (
? [A] : (predicate1(A,drive,'Peeter')))).
002879 A human:xxx sees a masc:yyy and verb:zzz him.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate2(A,zzz,B,C)) &
((predicate2(D,see,B,C)) &
((yyy(C)) &
(xxx(B))))))).
002880 A human:xxx sees a masc:yyy and verb:zzz herself.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate2(A,zzz,B,B)) &
((predicate2(C,see,B,D)) &
((yyy(D)) &
(xxx(B))))))).
002881 "\" is a character.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002882 "\\" is a sequence of 2 characters.
fof(f1, axiom, (
? [A,B] : ((string(\)=A) &
((relation(A,of,B)) &
((object(B,character,countable,na,eq,2)) &
(sequence(A))))))).
002883 "\/\/" looks like a letter.
fof(f1, axiom, (
? [A,B] : ((modifier_pp(A,like,B)) &
((predicate1(A,look,string(//))) &
(letter(B)))))).
002884 Every lady is somebody whose pet is an animal and who likes nothing but cats .
fof(f1, axiom, (
! [A] : ((lady(A))
=> (? [B,C,D] : (($true) &
((pet(C)) &
((relation(C,of,B)) &
((animal(D)) &
((C=D) &
((! [E,F] : (((predicate2(E,like,B,F)) &
($true))
=> (? [G] : ((cat(G)) &
(F=G))))) &
(A=B))))))))))).
002885 Every man is an adult that is a male and that is a person.
fof(f1, axiom, (
! [A] : ((man(A))
=> (? [B,C,D] : ((adult(B)) &
((male(C)) &
((B=C) &
((person(D)) &
((B=D) &
(A=B)))))))))).
002886 Every lady is a person whose pet is a cat.
fof(f1, axiom, (
! [A] : ((lady(A))
=> (? [B,C,D] : ((person(B)) &
((pet(C)) &
((relation(C,of,B)) &
((cat(D)) &
((C=D) &
(A=B)))))))))).
002887 A customer enters a card X and a code Y. If Y is valid then SimpleMat accepts X. If Y is not valid then SimpleMat rejects X.
fof(f1, axiom, (
? [A,B,C,D,E] : (((~(? [F] : ((property1(F,valid,pos)) &
(B=F))))
=> (? [G] : (predicate2(G,reject,'SimpleMat',E)))) &
((! [H] : (((property1(H,valid,pos)) &
(B=H))
=> (? [I] : (predicate2(I,accept,'SimpleMat',E))))) &
((object(A,na,countable,na,eq,2)) &
((has_part(A,B)) &
((code(B)) &
((predicate2(C,enter,D,A)) &
((has_part(A,E)) &
((card(E)) &
(customer(D)))))))))))).
002888 A customer enters a card X and a code Y. If the code Y is valid then SimpleMat accepts the card X. If the code Y is not valid then SimpleMat rejects the card X.
fof(f1, axiom, (
? [A,B,C,D,E] : (((~(? [F] : ((property1(F,valid,pos)) &
(B=F))))
=> (? [G] : (predicate2(G,reject,'SimpleMat',E)))) &
((! [H] : (((property1(H,valid,pos)) &
(B=H))
=> (? [I] : (predicate2(I,accept,'SimpleMat',E))))) &
((object(A,na,countable,na,eq,2)) &
((has_part(A,B)) &
((code(B)) &
((predicate2(C,enter,D,A)) &
((has_part(A,E)) &
((card(E)) &
(customer(D)))))))))))).
002889 A card C is green.
fof(f1, axiom, (
? [A,B] : ((A=B) &
((property1(B,green,pos)) &
(card(A)))))).
002890 A card C1 is green.
fof(f1, axiom, (
? [A,B] : ((A=B) &
((property1(B,green,pos)) &
(card(A)))))).
002891 A card C11234234243 is green.
fof(f1, axiom, (
? [A,B] : ((A=B) &
((property1(B,green,pos)) &
(card(A)))))).
002892 A number N is a ratio of a circumference of a circle to its diameter.
fof(f1, axiom, (
? [A,B,C,D,E] : ((modifier_pp(F,to,A)) &
((B=C) &
((relation(C,of,D)) &
((relation(D,of,E)) &
((circle(E)) &
((diameter(A)) &
((relation(A,of,E)) &
((circumference(D)) &
((ratio(C)) &
(number(B))))))))))))).
002893 A man M1 waits.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,wait,B)) &
(man(B))))).
002894 A man M1 waits. The man M1 is happy.
fof(f1, axiom, (
? [A,B,C] : ((A=B) &
((property1(B,happy,pos)) &
((predicate1(C,wait,A)) &
(man(A))))))).
002895 A man M1 waits. M1 is happy.
fof(f1, axiom, (
? [A,B,C] : ((A=B) &
((property1(B,happy,pos)) &
((predicate1(C,wait,A)) &
(man(A))))))).
002896 A dog D of a man is happy. A dog of a woman is sad. D barks.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate1(A,bark,B)) &
((B=C) &
((property1(C,happy,pos)) &
((relation(B,of,D)) &
((man(D)) &
(dog(B))))))))).

fof(f2, axiom, (
? [A,B,C] : ((A=B) &
((property1(B,sad,pos)) &
((relation(A,of,C)) &
((woman(C)) &
(dog(A)))))))).
002897 A dog D of a man is happy. A dog of a woman is sad. The dog D barks.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate1(A,bark,B)) &
((B=C) &
((property1(C,happy,pos)) &
((relation(B,of,D)) &
((man(D)) &
(dog(B))))))))).

fof(f2, axiom, (
? [A,B,C] : ((A=B) &
((property1(B,sad,pos)) &
((relation(A,of,C)) &
((woman(C)) &
(dog(A)))))))).
002898 There is a red card R. There is a blue card B. The red card R is valid.
fof(f1, axiom, (
? [A,B] : ((A=B) &
((property1(B,valid,pos)) &
((property1(A,red,pos)) &
(card(A))))))).

fof(f2, axiom, (
? [A] : ((property1(A,blue,pos)) &
(card(A))))).
002899 There is a red card R. There is a blue card B. The card R is valid.
fof(f1, axiom, (
? [A,B] : ((A=B) &
((property1(B,valid,pos)) &
((property1(A,red,pos)) &
(card(A))))))).

fof(f2, axiom, (
? [A] : ((property1(A,blue,pos)) &
(card(A))))).
002900 There is a red card R. There is a blue card B. The card is valid.
fof(f1, axiom, (
? [A] : ((property1(A,red,pos)) &
(card(A))))).

fof(f2, axiom, (
? [A,B] : ((A=B) &
((property1(B,valid,pos)) &
((property1(A,blue,pos)) &
(card(A))))))).
002901 There is a red card R. There is a blue card B. The red card is valid.
fof(f1, axiom, (
? [A,B] : ((A=B) &
((property1(B,valid,pos)) &
((property1(A,red,pos)) &
(card(A))))))).

fof(f2, axiom, (
? [A] : ((property1(A,blue,pos)) &
(card(A))))).
002902 There is a red card R. There is a blue card B. R is valid.
fof(f1, axiom, (
? [A,B] : ((A=B) &
((property1(B,valid,pos)) &
((property1(A,red,pos)) &
(card(A))))))).

fof(f2, axiom, (
? [A] : ((property1(A,blue,pos)) &
(card(A))))).
002903 There are a red card R and a blue card B. R is valid.
fof(f1, axiom, (
? [A,B,C,D] : ((A=B) &
((property1(B,valid,pos)) &
((object(C,na,countable,na,eq,2)) &
((has_part(C,D)) &
((property1(D,blue,pos)) &
((card(D)) &
((has_part(C,A)) &
((property1(A,red,pos)) &
(card(A)))))))))))).
002904 There are a red card R and a blue card B. They are valid.
fof(f1, axiom, (
? [A,B,C,D] : ((A=B) &
((property1(B,valid,pos)) &
((object(A,na,countable,na,eq,2)) &
((has_part(A,C)) &
((property1(C,blue,pos)) &
((card(C)) &
((has_part(A,D)) &
((property1(D,red,pos)) &
(card(D)))))))))))).
002905 There are 3 men M3. M3 talk.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,talk,B)) &
(object(B,man,countable,na,eq,3))))).
002907 There is a dog D. Each of some men who own D owns D.
fof(f1, axiom, (
? [A,B,C] : ((! [D] : ((has_part(B,D))
=> (? [E] : (predicate2(E,own,D,C))))) &
((predicate2(A,own,B,C)) &
((object(B,man,countable,na,geq,2)) &
(dog(C))))))).
002908 A child C1 of a child C2 of a man M waits.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate1(A,wait,B)) &
((relation(B,of,C)) &
((relation(C,of,D)) &
((man(D)) &
((child(C)) &
(child(B))))))))).
002909 2 men M drink. They eat.
fof(f1, axiom, (
? [A,B,C] : ((predicate1(A,eat,B)) &
((predicate1(C,drink,B)) &
(object(B,man,countable,na,eq,2)))))).
002910 2 men M drink. M talk. They eat.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate1(A,eat,B)) &
((predicate1(C,talk,B)) &
((predicate1(D,drink,B)) &
(object(B,man,countable,na,eq,2))))))).
002911 There is a long zip-code Z.
fof(f1, axiom, (
? [A] : ((property1(A,long,pos)) &
('zip-code'(A))))).
002912 If John works in a bank then he does not commute.
fof(f1, axiom, (
! [A,B] : (((bank(A)) &
((predicate1(B,work,'John')) &
(modifier_pp(B,in,A))))
=> (~(? [C] : (predicate1(C,commute,'John'))))))).
002913 If John works then John does not work in his own house.
fof(f1, axiom, (
! [A] : ((predicate1(A,work,'John'))
=> (~(? [B,C] : ((relation(B,of,'John')) &
((house(B)) &
((predicate1(C,work,'John')) &
(modifier_pp(C,in,B)))))))))).
002914 If John works then he does not work in his own house.
fof(f1, axiom, (
! [A] : ((predicate1(A,work,'John'))
=> (~(? [B,C] : ((relation(B,of,'John')) &
((house(B)) &
((predicate1(C,work,'John')) &
(modifier_pp(C,in,B)))))))))).
002915 If John works then he does not work.
fof(f1, axiom, (
! [A] : ((predicate1(A,work,'John'))
=> (~(? [B] : (predicate1(B,work,'John'))))))).
002916 If John works then John does not work in John's house.
fof(f1, axiom, (
! [A] : ((predicate1(A,work,'John'))
=> (~(? [B,C] : ((relation(B,of,'John')) &
((house(B)) &
((predicate1(C,work,'John')) &
(modifier_pp(C,in,B)))))))))).
002917 If John works then he does not work in John's house.
fof(f1, axiom, (
! [A] : ((predicate1(A,work,'John'))
=> (~(? [B,C] : ((relation(B,of,'John')) &
((house(B)) &
((predicate1(C,work,'John')) &
(modifier_pp(C,in,B)))))))))).
002918 If John works then he does not work in a house.
fof(f1, axiom, (
! [A] : ((predicate1(A,work,'John'))
=> (~(? [B,C] : ((house(B)) &
((predicate1(C,work,'John')) &
(modifier_pp(C,in,B))))))))).
002919 If John works then he does not see himself.
fof(f1, axiom, (
! [A] : ((predicate1(A,work,'John'))
=> (~(? [B] : (predicate2(B,see,'John','John'))))))).
002920 If John works then he does not feed his dog.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002921 Mary sees John. He does not work in John's house.
fof(f1, axiom, (
? [A] : (predicate2(A,see,'Mary','John')))).

fof(f2, axiom, (
~(? [A,B] : ((relation(A,of,'John')) &
((house(A)) &
((predicate1(B,work,'John')) &
(modifier_pp(B,in,A)))))))).
002922 X sees a man X. X sleeps.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002923 John knows the Abcdef.
fof(f1, axiom, (
? [A] : (predicate2(A,know,'John','Abcdef')))).
002924 John knows Abcdef.
fof(f1, axiom, (
? [A] : (predicate2(A,know,'John','Abcdef')))).
002925 John knows Sun.
fof(f1, axiom, (
? [A] : (predicate2(A,know,'John','Sun')))).
002926 John knows the Sun.
fof(f1, axiom, (
? [A] : (predicate2(A,know,'John','Sun')))).
002927 John knows Mary.
fof(f1, axiom, (
? [A] : (predicate2(A,know,'John','Mary')))).
002928 John knows the Mary.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002929 John knows United-Nations.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002930 John knows the United-Nations.
fof(f1, axiom, (
? [A] : (predicate2(A,know,'John','United-Nations')))).
002931 X sees X.
fof(f1, axiom, (
? [A,B] : ((predicate2(A,see,B,B)) &
($true)))).
002932 A man spends his own vacation in a warm country. Where does he spend the vacation?
ERROR	DRS condition not supported: question	tptp/4	question(drs([A],[predicate(A,spend,_,_)-2/4,query(A,where)-2/1]))
002933 If a group is {John, Bill} then John is X.
ERROR	DRS function set/1 not supported	arg_to_tptp/2	set([named(John),named(Bill)])
002934 John knows X.
fof(f1, axiom, (
? [A,B] : ((predicate2(A,know,'John',B)) &
($true)))).
002935 John sees Every woman.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002936 John sees A dog.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002937 John Is a man.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002938 There is some toxicity. The toxicity is high.
fof(f1, axiom, (
? [A,B] : ((A=B) &
((property1(B,high,pos)) &
(object(A,toxicity,mass,na,na,na)))))).
002939 There is some water. The water is wet.
fof(f1, axiom, (
? [A,B] : ((A=B) &
((property1(B,wet,pos)) &
(object(A,water,mass,na,na,na)))))).
002940 There is a water. The water is wet.
fof(f1, axiom, (
? [A,B] : ((A=B) &
((property1(B,wet,pos)) &
(water(A)))))).
002941 There is some water. There is a water. The water is wet.
fof(f1, axiom, (
? [A] : (object(A,water,mass,na,na,na)))).

fof(f2, axiom, (
? [A,B] : ((A=B) &
((property1(B,wet,pos)) &
(water(A)))))).
002942 There is a water. There is some water. The water is wet.
fof(f1, axiom, (
? [A] : (water(A)))).

fof(f2, axiom, (
? [A,B] : ((A=B) &
((property1(B,wet,pos)) &
(object(A,water,mass,na,na,na)))))).
002943 It is false that there is X.
fof(f1, axiom, (
~(? [A] : ($true)))).
002944 If there is X then there is Y.
fof(f1, axiom, (
! [A] : (($true)
=> (? [B] : ($true))))).
002945 It is false that there is something X.
fof(f1, axiom, (
~(? [A] : ($true)))).
002946 If there is something X then there is something Y.
fof(f1, axiom, (
! [A] : (($true)
=> (? [B] : ($true))))).
002947 If there is something X then there is X.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002948 If there is something X then there is something X.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002949 If X's pet is Y then X likes Y.
fof(f1, axiom, (
! [A,B,C] : ((($true) &
((relation(B,of,A)) &
((pet(B)) &
(($true) &
(B=C)))))
=> (? [D] : (predicate2(D,like,A,C)))))).
002950 John works at at least 3 banks.
fof(f1, axiom, (
? [A,B] : ((modifier_pp(A,at,B)) &
((predicate1(A,work,'John')) &
(object(B,bank,countable,na,geq,3)))))).
002951 John looks at at least 4 men at least 3 dogs of who bark.
fof(f1, axiom, (
? [A,B,C,D] : ((modifier_pp(A,at,B)) &
((predicate1(A,look,'John')) &
((predicate1(C,bark,D)) &
((relation(D,of,B)) &
((object(D,dog,countable,na,geq,3)) &
(object(B,man,countable,na,geq,4))))))))).
002952 John sees a man who sleeps in a bed in a morning.
fof(f1, axiom, (
? [A,B,C,D,E] : ((predicate2(A,see,'John',B)) &
((modifier_pp(C,in,D)) &
((modifier_pp(C,in,E)) &
((predicate1(C,sleep,B)) &
((man(B)) &
((morning(E)) &
(bed(D)))))))))).
002953 John sees a man who sleeps soundly in a bed in a morning.
fof(f1, axiom, (
? [A,B,C,D,E] : ((predicate2(A,see,'John',B)) &
((modifier_adv(C,soundly,pos)) &
((modifier_pp(C,in,D)) &
((modifier_pp(C,in,E)) &
((predicate1(C,sleep,B)) &
((man(B)) &
((morning(E)) &
(bed(D))))))))))).
002954 There is a man who does not sleep soundly in a bed in a morning.
fof(f1, axiom, (
? [A] : ((~(? [B,C,D] : ((morning(B)) &
((bed(C)) &
((predicate1(D,sleep,A)) &
((modifier_pp(D,in,B)) &
((modifier_pp(D,in,C)) &
(modifier_adv(D,soundly,pos))))))))) &
(man(A))))).
002955 John sees a man who does not sleep soundly in a bed in a morning.
fof(f1, axiom, (
? [A,B] : ((predicate2(A,see,'John',B)) &
((~(? [C,D,E] : ((morning(C)) &
((bed(D)) &
((predicate1(E,sleep,B)) &
((modifier_pp(E,in,C)) &
((modifier_pp(E,in,D)) &
(modifier_adv(E,soundly,pos))))))))) &
(man(B)))))).
002956 John soundly sees a man who sleeps in a bed in a morning.
fof(f1, axiom, (
? [A,B,C,D,E] : ((modifier_adv(A,soundly,pos)) &
((predicate2(A,see,'John',B)) &
((modifier_pp(C,in,D)) &
((modifier_pp(C,in,E)) &
((predicate1(C,sleep,B)) &
((man(B)) &
((morning(E)) &
(bed(D))))))))))).
002957 John soundly sees a man in a bed in a morning. The man sleeps.
fof(f1, axiom, (
? [A,B,C,D,E] : ((predicate1(A,sleep,B)) &
((modifier_pp(C,in,D)) &
((modifier_pp(C,in,E)) &
((modifier_adv(C,soundly,pos)) &
((predicate2(C,see,'John',B)) &
((man(B)) &
((morning(E)) &
(bed(D))))))))))).
002958 A customer who manually in a bank enters a card types a code.
fof(f1, axiom, (
? [A,B,C,D,E,F] : ((predicate2(A,type,B,C)) &
((code(C)) &
((modifier_adv(D,manually,pos)) &
((modifier_pp(D,in,E)) &
((predicate2(D,enter,B,F)) &
((card(F)) &
((customer(B)) &
(bank(E))))))))))).
002959 There is a man who does not sleep. There is a woman who does not wait. John sees the man who does not sleep.
fof(f1, axiom, (
? [A,B] : ((predicate2(A,see,'John',B)) &
((~(? [C] : (predicate1(C,sleep,B)))) &
(man(B)))))).

fof(f2, axiom, (
? [A] : ((~(? [B] : (predicate1(B,wait,A)))) &
(woman(A))))).
002960 There is a man who does not sleep. John sees the man.
fof(f1, axiom, (
? [A,B] : ((predicate2(A,see,'John',B)) &
((~(? [C] : (predicate1(C,sleep,B)))) &
(man(B)))))).
002961 John sees soundly in a bed in a morning _that_ a man sleeps.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002962 John sees a man who does not sleep soundly in a bed.
fof(f1, axiom, (
? [A,B] : ((predicate2(A,see,'John',B)) &
((~(? [C,D] : ((bed(C)) &
((predicate1(D,sleep,B)) &
((modifier_pp(D,in,C)) &
(modifier_adv(D,soundly,pos))))))) &
(man(B)))))).
002963 John soundly sees a man who does not sleep in a bed.
fof(f1, axiom, (
? [A,B] : ((modifier_adv(A,soundly,pos)) &
((predicate2(A,see,'John',B)) &
((~(? [C,D] : ((bed(C)) &
((predicate1(D,sleep,B)) &
(modifier_pp(D,in,C)))))) &
(man(B))))))).
002964 John soundly and quickly sees a man who does not sleep in a bed.
fof(f1, axiom, (
? [A,B] : ((modifier_adv(A,soundly,pos)) &
((modifier_adv(A,quickly,pos)) &
((predicate2(A,see,'John',B)) &
((~(? [C,D] : ((bed(C)) &
((predicate1(D,sleep,B)) &
(modifier_pp(D,in,C)))))) &
(man(B)))))))).
002965 John sees a man who does not sleep in a bed soundly.
fof(f1, axiom, (
? [A,B] : ((predicate2(A,see,'John',B)) &
((~(? [C,D] : ((bed(C)) &
((predicate1(D,sleep,B)) &
((modifier_adv(D,soundly,pos)) &
(modifier_pp(D,in,C))))))) &
(man(B)))))).
002966 John sees a man who does not sleep in a bed soundly and quickly.
fof(f1, axiom, (
? [A,B] : ((predicate2(A,see,'John',B)) &
((~(? [C,D] : ((bed(C)) &
((predicate1(D,sleep,B)) &
((modifier_adv(D,quickly,pos)) &
((modifier_adv(D,soundly,pos)) &
(modifier_pp(D,in,C)))))))) &
(man(B)))))).
002967 John sees a man who does not sleep soundly and quickly in a bed.
fof(f1, axiom, (
? [A,B] : ((predicate2(A,see,'John',B)) &
((~(? [C,D] : ((bed(C)) &
((predicate1(D,sleep,B)) &
((modifier_pp(D,in,C)) &
((modifier_adv(D,quickly,pos)) &
(modifier_adv(D,soundly,pos)))))))) &
(man(B)))))).
002968 John sees a man who sleeps in a bed soundly.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate2(A,see,'John',B)) &
((modifier_pp(C,in,D)) &
((modifier_adv(C,soundly,pos)) &
((predicate1(C,sleep,B)) &
((man(B)) &
(bed(D))))))))).
002969 There is a man. John sees the man. The man does not sleep.
fof(f1, axiom, (
? [A,B] : ((~(? [C] : (predicate1(C,sleep,B)))) &
((predicate2(A,see,'John',B)) &
(man(B)))))).
002970 If there is a man who does not sleep and John sees the man then a dog barks.
fof(f1, axiom, (
! [A,B] : (((man(A)) &
((~(? [C] : (predicate1(C,sleep,A)))) &
(predicate2(B,see,'John',A))))
=> (? [D,E] : ((dog(D)) &
(predicate1(E,bark,D))))))).
002971 John is as a:richrich as Mary.
fof(f1, axiom, (
? [A] : (('John'=A) &
(property2(A,richrich,pos_as,'Mary'))))).
002972 John is as a:fondfond-of Mary as Bill.
fof(f1, axiom, (
? [A] : (('John'=A) &
(property3(A,'fondfond-of','Mary',pos_as,subj,'Bill'))))).
002973 There is a man who does not sleep and John sees the man.
fof(f1, axiom, (
? [A,B] : ((predicate2(A,see,'John',B)) &
((~(? [C] : (predicate1(C,sleep,B)))) &
(man(B)))))).
002974 There is a man who does not sleep or John sees the man.
fof(f1, axiom, (
? [A] : (((man(A)) &
(~(? [B] : (predicate1(B,sleep,A)))))
| (? [C] : (predicate2(C,see,'John',A)))))).
002975 There is a man or the man does not sleep or John sees the man.
fof(f1, axiom, (
? [A] : ((man(A))
| ((~(? [B] : (predicate1(B,sleep,A))))
| (? [C] : (predicate2(C,see,'John',A))))))).
002976 There is a man or the man does not sleep and John sees the man.
fof(f1, axiom, (
? [A] : ((man(A))
| (? [B] : ((~(? [C] : (predicate1(C,sleep,A)))) &
(predicate2(B,see,'John',A))))))).
002977 There is a man or the man does not sleep, and John sees the man.
fof(f1, axiom, (
? [A,B] : ((man(A)) &
(predicate2(B,see,'John',A))))).

fof(f2, axiom, (
? [A] : ((man(A))
| (~(? [B] : (predicate1(B,sleep,A))))))).
002978 There is a man or the man sleeps.
fof(f1, axiom, (
? [A] : ((man(A))
| (? [B] : (predicate1(B,sleep,A)))))).
002979 X is Y.
fof(f1, axiom, (
? [A,B] : ((A=B) &
(($true) &
($true))))).
002980 X is X.
fof(f1, axiom, (
? [A] : ((A=A) &
($true)))).
002981 X is not X.
fof(f1, axiom, (
? [A] : ((~(A=A)) &
($true)))).
002982 X is not Y.
fof(f1, axiom, (
? [A] : ((~(? [B] : (($true) &
(A=B)))) &
($true)))).
002983 A man likes Mary. Sue likes the man that likes Mary.
fof(f1, axiom, (
? [A,B,C] : ((predicate2(A,like,'Sue',B)) &
((predicate2(C,like,B,'Mary')) &
(man(B)))))).
002984 There is a man that must feed every dog. There is a man that must feed every cat. The man that must feed every dog feeds himself.
ERROR	DRS condition not supported: must	tptp/4	must(drs([],[drs([A],[object(A,dog,countable,na,eq,1)-1/9])=>drs([B],[predicate(B,feed,_,A)-1/7])]))
002985 There is a dog. A man sees the dog and likes it.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate2(A,like,B,C)) &
((predicate2(D,see,B,C)) &
((man(B)) &
(dog(C))))))).
002986 There is a boy. A man sees his cat and a dog.
fof(f1, axiom, (
? [A,B,C,D,E,F] : ((object(A,na,countable,na,eq,2)) &
((has_part(A,B)) &
((dog(B)) &
((predicate2(C,see,D,A)) &
((has_part(A,E)) &
((cat(E)) &
((relation(E,of,F)) &
((boy(F)) &
(man(D)))))))))))).
002987 If there is an animal that is a dog or that is a cat then John sees the animal that is a dog or that is a cat.
fof(f1, axiom, (
! [A] : (((animal(A)) &
(? [B] : (((dog(B)) &
(A=B))
| (? [C] : ((cat(C)) &
(A=C))))))
=> (? [D] : (predicate2(D,see,'John',A)))))).
002988 If there is an animal that is not a dog or that is a cat then John sees the animal that is not a dog or that is a cat.
fof(f1, axiom, (
! [A] : (((animal(A)) &
((~(? [B] : ((dog(B)) &
(A=B))))
| (? [C] : ((cat(C)) &
(A=C)))))
=> (? [D] : (predicate2(D,see,'John',A)))))).
002989 If there is an animal that is a cat or that is a dog then John sees the animal that is a dog or that is a cat.
fof(f1, axiom, (
! [A] : (((animal(A)) &
(? [B] : (((cat(B)) &
(A=B))
| (? [C] : ((dog(C)) &
(A=C))))))
=> (? [D] : (predicate2(D,see,'John',A)))))).
002990 If there is an animal that eats every food then John sees the animal that eats every food.
fof(f1, axiom, (
! [A] : (((animal(A)) &
(! [B] : ((food(B))
=> (? [C] : (predicate2(C,eat,A,B))))))
=> (? [D] : (predicate2(D,see,'John',A)))))).
002991 If there is an animal that believes that John is its own owner then John sees the animal.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002992 If there is an animal that believes that John is its own owner then John sees the animal that believes that John is its own owner.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002993 John is his own owner.
fof(f1, axiom, (
? [A] : (('John'=A) &
((owner(A)) &
(relation(A,of,'John')))))).
002994 John is his owner.
ERROR	DRS is empty	apply_converter/2	drs([],[])
002995 Bill knows that John is his own owner.
ERROR	DRS condition not supported: :	tptp/4	_:drs([A,B],[relation(A,of,named(John))-1,object(A,owner,countable,na,eq,1)-1,predicate(B,be,named(John),A)-1])
002996 Bill knows that John is his owner.
ERROR	DRS condition not supported: :	tptp/4	_:drs([A,B],[relation(A,of,named(Bill))-1,object(A,owner,countable,na,eq,1)-1,predicate(B,be,named(John),A)-1])
002997 John sees a man. Mary knows the man that John sees.
fof(f1, axiom, (
? [A,B,C] : ((predicate2(A,know,'Mary',B)) &
((predicate2(C,see,'John',B)) &
(man(B)))))).
002998 A man sees a woman. Mary knows the woman that the man sees.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate2(A,know,'Mary',B)) &
((predicate2(C,see,D,B)) &
((woman(B)) &
(man(D))))))).
002999 A man sees a woman. Mary knows the woman that a man sees.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate2(A,know,'Mary',B)) &
((predicate2(C,see,D,B)) &
((woman(B)) &
(man(D))))))).
003000 A man sees a woman. Mary knows the man that sees the woman.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate2(A,know,'Mary',B)) &
((predicate2(C,see,B,D)) &
((woman(D)) &
(man(B))))))).
003001 A man sees a woman. Mary knows the man that sees a woman.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate2(A,know,'Mary',B)) &
((predicate2(C,see,B,D)) &
((woman(D)) &
(man(B))))))).
003002 A man X and Y's dog can wait.
ERROR	DRS condition not supported: can	tptp/4	can(drs([A],[predicate(A,wait,_)-1/10]))
003003 There are a man and a dog of something. It is possible that they wait.
ERROR	DRS condition not supported: can	tptp/4	can(drs([A],[predicate(A,wait,_)-2/6]))
003004 There is a machine. It controls itself.
fof(f1, axiom, (
? [A,B] : ((predicate2(A,control,B,B)) &
(machine(B))))).
003005 There is a machine. It controls it.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003006 There is a black man. There is a man who sees himself. John knows the man. John encounters the black man. John watches the man who sees himself.
fof(f1, axiom, (
? [A,B] : ((predicate2(A,encounter,'John',B)) &
((property1(B,black,pos)) &
(man(B)))))).

fof(f2, axiom, (
? [A,B,C,D] : ((predicate2(A,watch,'John',B)) &
((predicate2(C,know,'John',B)) &
((predicate2(D,see,B,B)) &
(man(B))))))).
003007 There is a black woman. There is a woman who sees herself. John knows the woman. John encounters the black woman. John watches the woman who sees herself.
fof(f1, axiom, (
? [A,B] : ((predicate2(A,encounter,'John',B)) &
((property1(B,black,pos)) &
(woman(B)))))).

fof(f2, axiom, (
? [A,B,C,D] : ((predicate2(A,watch,'John',B)) &
((predicate2(C,know,'John',B)) &
((predicate2(D,see,B,B)) &
(woman(B))))))).
003008 There is a black woman. There is a woman who sees herself. John knows the woman. John encounters the black woman.
fof(f1, axiom, (
? [A,B] : ((predicate2(A,encounter,'John',B)) &
((property1(B,black,pos)) &
(woman(B)))))).

fof(f2, axiom, (
? [A,B,C] : ((predicate2(A,know,'John',B)) &
((predicate2(C,see,B,B)) &
(woman(B)))))).
003009 Somebody M is the mother of a child C1. Somebody H is the husband of M. H's child is C2. C1 is not C2. Who is C1?
ERROR	DRS condition not supported: question	tptp/4	question(drs([A,B],[query(A,who)-5/1,predicate(B,be,A,_)-5/2]))
003010 John should wait.
ERROR	DRS condition not supported: should	tptp/4	should(drs([A],[predicate(A,wait,named(John))-1]))
003011 John should wait and can swim and must drink.
ERROR	DRS condition not supported: should	tptp/4	should(drs([A],[predicate(A,wait,named(John))-1/3]))
003012 A man should wait and can swim and must drink.
ERROR	DRS condition not supported: must	tptp/4	must(drs([A],[predicate(A,drink,_)-1/10]))
003013 Every man should drink.
ERROR	DRS condition not supported: should	tptp/4	should(drs([A],[predicate(A,drink,_)-1]))
003014 Every man should love every woman.
ERROR	DRS condition not supported: should	tptp/4	should(drs([],[drs([A],[object(A,woman,countable,na,eq,1)-1])=>drs([B],[predicate(B,love,_,A)-1])]))
003015 It is recommended that a man drinks.
ERROR	DRS condition not supported: should	tptp/4	should(drs([A,B],[predicate(A,drink,B)-1,object(B,man,countable,na,eq,1)-1]))
003016 It is not recommended that every man drinks.
ERROR	DRS condition not supported: should	tptp/4	should(drs([],[drs([A],[object(A,man,countable,na,eq,1)-1])=>drs([B],[predicate(B,drink,A)-1])]))
003017 Every person should be important.
ERROR	DRS condition not supported: should	tptp/4	should(drs([A,B],[predicate(A,be,_,B)-1,property(B,important,pos)-1]))
003018 Every person should not kill someone.
ERROR	DRS condition not supported: should	tptp/4	should(drs([A,B],[predicate(A,kill,_,B)-1,object(B,somebody,countable,na,eq,1)-1]))
003019 Every person should not be rich.
ERROR	DRS condition not supported: should	tptp/4	should(drs([A,B],[predicate(A,be,_,B)-1,property(B,rich,pos)-1]))
003020 Every person shouldn't be rich.
ERROR	DRS condition not supported: should	tptp/4	should(drs([A,B],[predicate(A,be,_,B)-1,property(B,rich,pos)-1]))
003021 Every person shouldn't kill someone.
ERROR	DRS condition not supported: should	tptp/4	should(drs([A,B],[predicate(A,kill,_,B)-1,object(B,somebody,countable,na,eq,1)-1]))
003022 It is recommended that it is possible that it is necessary that every person does not provably not wait.
ERROR	DRS condition not supported: should	tptp/4	should(drs([],[can(drs([],[must(drs([],[drs([A],[object(A,person,countable,na,eq,1)-1/14])=>drs([],[~drs([],[-drs([B],[predicate(B,wait,A)-1/19])])])]))]))]))
003023 It is recommended that John can swim.
ERROR	DRS condition not supported: should	tptp/4	should(drs([],[can(drs([A],[predicate(A,swim,named(John))-1/7]))]))
003024 It is possible that John should swim.
ERROR	DRS condition not supported: can	tptp/4	can(drs([],[should(drs([A],[predicate(A,swim,named(John))-1/7]))]))
003025 John should give a present to Mary.
ERROR	DRS condition not supported: should	tptp/4	should(drs([A,B],[predicate(A,give,named(John),B,named(Mary))-1,object(B,present,countable,na,eq,1)-1]))
003026 John shouldn't be more fond-of Mary than of Sue.
ERROR	DRS condition not supported: should	tptp/4	should(drs([A,B],[predicate(A,be,named(John),B)-1,property(B,fond-of,named(Mary),comp_than,obj,named(Sue))-1]))
003027 John should not swim.
ERROR	DRS condition not supported: should	tptp/4	should(drs([A],[predicate(A,swim,named(John))-1]))
003028 Should John wait?
ERROR	DRS condition not supported: should	tptp/4	should(drs([A],[predicate(A,wait,named(John))-1/3]))
003029 What is nothing?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,what)
003030 What is something that is not something?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,what)
003031 Mary invites Sue for a visit and she tells her that she must go and must work.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003032 Sue sees Mary that she that sees her that she sees sees.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003033 If a city overlaps-with something X then X is the city or X is not a city .
fof(f1, axiom, (
! [A,B,C] : (((city(A)) &
(($true) &
(predicate2(C,'overlap-with',A,B))))
=> ((B=A)
| (~(? [D] : ((city(D)) &
(B=D)))))))).
003034 Every city overlaps-with itself or does not overlap-with a city.
fof(f1, axiom, (
! [A] : ((city(A))
=> (? [B] : ((predicate2(B,'overlap-with',A,A))
| (~(? [C,D] : ((city(C)) &
(predicate2(D,'overlap-with',A,C)))))))))).
003035 Every man who owns a car that likes a cat is a dog that is hated by a bike or that likes itself.
fof(f1, axiom, (
! [A,B,C,D,E] : (((man(A)) &
((car(B)) &
((cat(C)) &
((predicate2(D,like,B,C)) &
(predicate2(E,own,A,B))))))
=> (? [F] : ((dog(F)) &
((? [G,H] : (((bike(G)) &
(predicate2(H,hate,G,F)))
| (? [I] : (predicate2(I,like,F,F))))) &
(A=F))))))).
003036 Every man who owns a car is a dog that is hated by a bike or that likes itself.
fof(f1, axiom, (
! [A,B,C] : (((man(A)) &
((car(B)) &
(predicate2(C,own,A,B))))
=> (? [D] : ((dog(D)) &
((? [E,F] : (((bike(E)) &
(predicate2(F,hate,E,D)))
| (? [G] : (predicate2(G,like,D,D))))) &
(A=D))))))).
003037 Every man is a dog that is hated by a bike or that likes itself.
fof(f1, axiom, (
! [A] : ((man(A))
=> (? [B] : ((dog(B)) &
((? [C,D] : (((bike(C)) &
(predicate2(D,hate,C,B)))
| (? [E] : (predicate2(E,like,B,B))))) &
(A=B))))))).
003038 Every man is a dog that hates a bike or that likes itself.
fof(f1, axiom, (
! [A] : ((man(A))
=> (? [B] : ((dog(B)) &
((? [C,D] : (((bike(C)) &
(predicate2(D,hate,B,C)))
| (? [E] : (predicate2(E,like,B,B))))) &
(A=B))))))).
003039 There is a red man and there is a blue man.
fof(f1, axiom, (
? [A] : ((property1(A,blue,pos)) &
(man(A))))).

fof(f2, axiom, (
? [A] : ((property1(A,red,pos)) &
(man(A))))).
003040 There is a red man and there is a blue man and the man feeds a dog.
fof(f1, axiom, (
? [A,B,C] : ((predicate2(A,feed,B,C)) &
((dog(C)) &
((property1(B,blue,pos)) &
(man(B))))))).

fof(f2, axiom, (
? [A] : ((property1(A,red,pos)) &
(man(A))))).
003041 There is a red man and there is a blue man and the man feeds a dog and the dog that the blue man feeds barks.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate1(A,bark,B)) &
((predicate2(C,feed,D,B)) &
((dog(B)) &
((property1(D,blue,pos)) &
(man(D)))))))).

fof(f2, axiom, (
? [A] : ((property1(A,red,pos)) &
(man(A))))).
003042 There is a red man and there is a blue man and the man feeds a dog and the dog that the red man feeds barks.
fof(f1, axiom, (
? [A,B,C,D] : ((man(A)) &
((dog(B)) &
((predicate2(C,feed,A,B)) &
((property1(A,red,pos)) &
(predicate1(D,bark,B)))))))).

fof(f2, axiom, (
? [A,B,C] : ((predicate2(A,feed,B,C)) &
((dog(C)) &
((property1(B,blue,pos)) &
(man(B))))))).
003043 No analysis confirms X and excludes X.
fof(f1, axiom, (
! [A] : ((analysis(A))
=> (~(? [B,C,D] : (($true) &
((predicate2(C,confirm,A,B)) &
(predicate2(D,exclude,A,B))))))))).
003044 X sees a man X.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003045 X sees the man X.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003046 A man X waits. A man X is tired.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003047 A man X waits. The man X is tired.
fof(f1, axiom, (
? [A,B,C] : ((A=B) &
((property1(B,tired,pos)) &
((predicate1(C,wait,A)) &
(man(A))))))).
003048 The man X is tired. The man X waits.
fof(f1, axiom, (
? [A,B,C] : ((predicate1(A,wait,B)) &
((man(B)) &
((B=C) &
(property1(C,tired,pos))))))).
003049 A man X waits. X is tired.
fof(f1, axiom, (
? [A,B,C] : ((A=B) &
((property1(B,tired,pos)) &
((predicate1(C,wait,A)) &
(man(A))))))).
003050 The man X waits. X is tired.
fof(f1, axiom, (
? [A,B,C] : ((A=B) &
((property1(B,tired,pos)) &
((man(A)) &
(predicate1(C,wait,A))))))).
003051 X is tired. X waits.
fof(f1, axiom, (
? [A,B,C] : ((predicate1(A,wait,B)) &
((B=C) &
((property1(C,tired,pos)) &
($true)))))).
003052 Somebody M sleeps. A man is a husband of M.
fof(f1, axiom, (
? [A,B,C,D] : ((A=B) &
((relation(B,of,C)) &
((husband(B)) &
((predicate1(D,sleep,C)) &
(($true) &
(man(A))))))))).
003053 Somebody M sleeps. A man is the husband of M.
fof(f1, axiom, (
? [A,B,C,D] : ((husband(A)) &
((relation(A,of,B)) &
((C=A) &
((man(C)) &
((predicate1(D,sleep,B)) &
($true)))))))).
003054 There is a price of a resource. The price of the resource is high. The resource is valid.
fof(f1, axiom, (
? [A,B,C,D] : ((A=B) &
((property1(B,valid,pos)) &
((C=D) &
((property1(D,high,pos)) &
((relation(C,of,A)) &
((resource(A)) &
(price(C)))))))))).
003055 A man owns a dog. John sees the man who owns a dog. The dog barks.
fof(f1, axiom, (
? [A,B,C,D,E] : ((predicate1(A,bark,B)) &
((predicate2(C,see,'John',D)) &
((predicate2(E,own,D,B)) &
((dog(B)) &
(man(D)))))))).
003056 A man owns a dog. John sees the man who owns the dog. The dog barks.
fof(f1, axiom, (
? [A,B,C,D,E] : ((predicate1(A,bark,B)) &
((predicate2(C,see,'John',D)) &
((predicate2(E,own,D,B)) &
((dog(B)) &
(man(D)))))))).
003057 A card of a man is valid. Which man's card is valid?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,which)
003058 A card of a man X is valid. The card of which man X is valid?
ERROR	DRS is empty	apply_converter/2	drs([],[])
003059 John beats a donkey of his own wife's brother.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003060 John beats the donkey of a brother of his own wife.
fof(f1, axiom, (
? [A,B,C,D] : ((brother(A)) &
((donkey(B)) &
((relation(C,of,'John')) &
((wife(C)) &
((relation(A,of,C)) &
((relation(B,of,A)) &
(predicate2(D,beat,'John',B)))))))))).
003061 John beats a donkey of the brother of his own wife.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate2(A,beat,'John',B)) &
((brother(C)) &
((relation(D,of,'John')) &
((wife(D)) &
((relation(C,of,D)) &
((relation(B,of,C)) &
(donkey(B)))))))))).
003062 John beats the donkey of the brother of his own wife.
fof(f1, axiom, (
? [A,B,C,D] : ((brother(A)) &
((relation(B,of,'John')) &
((wife(B)) &
((relation(A,of,B)) &
((donkey(C)) &
((relation(C,of,A)) &
(predicate2(D,beat,'John',C)))))))))).
003063 There is a man who sleeps in the morning in a bed. John sees the man who sleeps in a bed in the morning.
fof(f1, axiom, (
? [A,B,C,D,E] : ((predicate2(A,see,'John',B)) &
((morning(C)) &
((modifier_pp(D,in,C)) &
((modifier_pp(D,in,E)) &
((predicate1(D,sleep,B)) &
((man(B)) &
(bed(E)))))))))).
003064 A man owns a dog. John sees the man who owns a dog.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate2(A,see,'John',B)) &
((predicate2(C,own,B,D)) &
((dog(D)) &
(man(B))))))).
003065 A man owns a dog. A man owns a cat. A girl sees the man who owns a dog.
fof(f1, axiom, (
? [A,B,C,D,E] : ((predicate2(A,see,B,C)) &
((girl(B)) &
((predicate2(D,own,C,E)) &
((dog(E)) &
(man(C)))))))).

fof(f2, axiom, (
? [A,B,C] : ((predicate2(A,own,B,C)) &
((cat(C)) &
(man(B)))))).
003066 A man X owns a dog. A man Y owns a cat. John sees the man X.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate2(A,see,'John',B)) &
((predicate2(C,own,B,D)) &
((dog(D)) &
(man(B))))))).

fof(f2, axiom, (
? [A,B,C] : ((predicate2(A,own,B,C)) &
((cat(C)) &
(man(B)))))).
003067 A man X owns a dog. A man Y owns a cat. John sees X.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate2(A,see,'John',B)) &
((predicate2(C,own,B,D)) &
((dog(D)) &
(man(B))))))).

fof(f2, axiom, (
? [A,B,C] : ((predicate2(A,own,B,C)) &
((cat(C)) &
(man(B)))))).
003068 A red man owns a dog. A red man owns a cat. John sees the red man who owns a dog.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate2(A,see,'John',B)) &
((predicate2(C,own,B,D)) &
((dog(D)) &
((property1(B,red,pos)) &
(man(B)))))))).

fof(f2, axiom, (
? [A,B,C] : ((predicate2(A,own,B,C)) &
((cat(C)) &
((property1(B,red,pos)) &
(man(B))))))).
003069 A man is red and owns a dog. A man is red and owns a cat. John sees the man who is red and who owns a dog.
fof(f1, axiom, (
? [A,B,C,D,E] : ((predicate2(A,see,'John',B)) &
((predicate2(C,own,B,D)) &
((dog(D)) &
((B=E) &
((property1(E,red,pos)) &
(man(B))))))))).

fof(f2, axiom, (
? [A,B,C,D] : ((predicate2(A,own,B,C)) &
((cat(C)) &
((B=D) &
((property1(D,red,pos)) &
(man(B)))))))).
003070 There is a man who does not sleep. John sees the man who does not sleep.
fof(f1, axiom, (
? [A,B] : ((predicate2(A,see,'John',B)) &
((~(? [C] : (predicate1(C,sleep,B)))) &
(man(B)))))).
003071 There is a man who does not sleep. There is a man who sleeps. John sees the man who does not sleep.
fof(f1, axiom, (
? [A,B] : ((predicate2(A,see,'John',B)) &
((~(? [C] : (predicate1(C,sleep,B)))) &
(man(B)))))).

fof(f2, axiom, (
? [A,B] : ((predicate1(A,sleep,B)) &
(man(B))))).
003072 A man can not sleep. John sees the man who can not sleep.
ERROR	DRS condition not supported: can	tptp/4	can(drs([A],[predicate(A,sleep,_)-1/5]))
003073 A man can not sleep. A man can sleep. John sees the man who can not sleep.
ERROR	DRS condition not supported: can	tptp/4	can(drs([A],[predicate(A,sleep,_)-1/5]))
003074 There is a man who must wait patiently. There is a man who can sleep. John sees the man who must wait. Mary expects the man who can sleep.
ERROR	DRS condition not supported: must	tptp/4	must(drs([A],[predicate(A,wait,_)-1/7,modifier_adv(A,patiently,pos)-1/8]))
003075 A man X must wait. A man Y can sleep. John sees the man X. Mary expects the man Y.
ERROR	DRS condition not supported: must	tptp/4	must(drs([A],[predicate(A,wait,_)-1/5]))
003076 There is a man who must wait patiently. John sees the man who must wait.
ERROR	DRS condition not supported: must	tptp/4	must(drs([A],[predicate(A,wait,_)-1/7,modifier_adv(A,patiently,pos)-1/8]))
003077 There is a man who cannot wait patiently. John sees the man who cannot wait.
ERROR	DRS condition not supported: can	tptp/4	can(drs([A],[predicate(A,wait,_)-1/8,modifier_adv(A,patiently,pos)-1/9]))
003078 There is a man who does not wait patiently. There is a man who does not sleep. John sees the man who does not wait. Mary expects the man who does not sleep.
fof(f1, axiom, (
? [A] : ((~(? [B] : ((predicate1(B,wait,A)) &
(modifier_adv(B,patiently,pos))))) &
(man(A))))).

fof(f2, axiom, (
? [A,B] : ((predicate2(A,expect,'Mary',B)) &
((~(? [C] : (predicate1(C,sleep,B)))) &
(man(B)))))).

fof(f3, axiom, (
? [A,B] : ((man(A)) &
((~(? [C] : (predicate1(C,wait,A)))) &
(predicate2(B,see,'John',A)))))).
003079 A man does not wait patiently. A man does not sleep. John sees the man who does not wait. Mary expects the man who does not sleep.
fof(f1, axiom, (
? [A] : ((~(? [B] : ((predicate1(B,wait,A)) &
(modifier_adv(B,patiently,pos))))) &
(man(A))))).

fof(f2, axiom, (
? [A,B] : ((predicate2(A,expect,'Mary',B)) &
((~(? [C] : (predicate1(C,sleep,B)))) &
(man(B)))))).

fof(f3, axiom, (
? [A,B] : ((man(A)) &
((~(? [C] : (predicate1(C,wait,A)))) &
(predicate2(B,see,'John',A)))))).
003080 A red man who can sleep must wait. A red man who can sleep must work. The man who must wait is tired.
ERROR	DRS condition not supported: must	tptp/4	must(drs([A],[predicate(A,wait,_)-1/8]))
003081 A man owns a dog. A girl sees the man who owns a dog. The dog barks.
fof(f1, axiom, (
? [A,B,C,D,E,F] : ((predicate1(A,bark,B)) &
((predicate2(C,see,D,E)) &
((girl(D)) &
((predicate2(F,own,E,B)) &
((dog(B)) &
(man(E))))))))).
003082 The man sleeps. There is a man.
fof(f1, axiom, (
? [A,B] : ((man(A)) &
(predicate1(B,sleep,A))))).

fof(f2, axiom, (
? [A] : (man(A)))).
003083 The man owns the dog. The dog barks. The dog is red. The man who owns the dog that barks and that is red is happy.
fof(f1, axiom, (
? [A,B,C,D,E,F] : ((A=B) &
((property1(B,happy,pos)) &
((C=D) &
((property1(D,red,pos)) &
((predicate1(E,bark,C)) &
((dog(C)) &
((man(A)) &
(predicate2(F,own,A,C))))))))))).
003084 A man does not wait patiently. A man does not sleep. A girl sees the man who does not wait. A boy expects the man who does not sleep.
fof(f1, axiom, (
? [A] : ((~(? [B] : ((predicate1(B,wait,A)) &
(modifier_adv(B,patiently,pos))))) &
(man(A))))).

fof(f2, axiom, (
? [A,B,C] : ((predicate2(A,expect,B,C)) &
((boy(B)) &
((~(? [D] : (predicate1(D,sleep,C)))) &
(man(C))))))).

fof(f3, axiom, (
? [A,B,C] : ((man(A)) &
((~(? [D] : (predicate1(D,wait,A)))) &
((predicate2(B,see,C,A)) &
(girl(C))))))).
003085 A man does not wait patiently. A girl sees the man who does not wait.
fof(f1, axiom, (
? [A] : ((~(? [B] : ((predicate1(B,wait,A)) &
(modifier_adv(B,patiently,pos))))) &
(man(A))))).

fof(f2, axiom, (
? [A,B,C] : ((man(A)) &
((~(? [D] : (predicate1(D,wait,A)))) &
((predicate2(B,see,C,A)) &
(girl(C))))))).
003086 A man does not wait. A girl sees the man who does not wait.
fof(f1, axiom, (
? [A,B,C] : ((predicate2(A,see,B,C)) &
((girl(B)) &
((~(? [D] : (predicate1(D,wait,C)))) &
(man(C))))))).
003087 There is a man who does not wait patiently. There is a man who does not sleep. A girl sees the man who does not wait. A boy expects the man who does not sleep.
fof(f1, axiom, (
? [A] : ((~(? [B] : ((predicate1(B,wait,A)) &
(modifier_adv(B,patiently,pos))))) &
(man(A))))).

fof(f2, axiom, (
? [A,B,C] : ((predicate2(A,expect,B,C)) &
((boy(B)) &
((~(? [D] : (predicate1(D,sleep,C)))) &
(man(C))))))).

fof(f3, axiom, (
? [A,B,C] : ((man(A)) &
((~(? [D] : (predicate1(D,wait,A)))) &
((predicate2(B,see,C,A)) &
(girl(C))))))).
003088 There is a man who does not wait patiently. A girl sees the man who does not wait.
fof(f1, axiom, (
? [A] : ((~(? [B] : ((predicate1(B,wait,A)) &
(modifier_adv(B,patiently,pos))))) &
(man(A))))).

fof(f2, axiom, (
? [A,B,C] : ((man(A)) &
((~(? [D] : (predicate1(D,wait,A)))) &
((predicate2(B,see,C,A)) &
(girl(C))))))).
003089 There is a man who does not wait. A girl sees the man who does not wait.
fof(f1, axiom, (
? [A,B,C] : ((predicate2(A,see,B,C)) &
((girl(B)) &
((~(? [D] : (predicate1(D,wait,C)))) &
(man(C))))))).
003090 There is a man who cannot wait patiently. A girl sees the man who cannot wait.
ERROR	DRS condition not supported: can	tptp/4	can(drs([A],[predicate(A,wait,_)-1/8,modifier_adv(A,patiently,pos)-1/9]))
003091 A man is red. The red man sleeps.
fof(f1, axiom, (
? [A,B] : ((A=B) &
((property1(B,red,pos)) &
(man(A)))))).

fof(f2, axiom, (
? [A,B] : ((man(A)) &
((property1(A,red,pos)) &
(predicate1(B,sleep,A)))))).
003092 A man is red and owns a dog. A man is red and owns a cat. John sees the red man who owns a dog.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate2(A,own,B,C)) &
((dog(C)) &
((B=D) &
((property1(D,red,pos)) &
(man(B)))))))).

fof(f2, axiom, (
? [A,B,C,D] : ((predicate2(A,own,B,C)) &
((cat(C)) &
((B=D) &
((property1(D,red,pos)) &
(man(B)))))))).

fof(f3, axiom, (
? [A,B,C,D] : ((man(A)) &
((property1(A,red,pos)) &
((dog(B)) &
((predicate2(C,own,A,B)) &
(predicate2(D,see,'John',A)))))))).
003093 A man waits or sleeps. John sees the man who sleeps or who waits.
fof(f1, axiom, (
? [A,B] : ((predicate2(A,see,'John',B)) &
((? [C] : ((predicate1(C,wait,B))
| (? [D] : (predicate1(D,sleep,B))))) &
(man(B)))))).
003094 A man waits or sleeps. John sees the man who sleeps.
fof(f1, axiom, (
? [A] : ((? [B] : ((predicate1(B,wait,A))
| (? [C] : (predicate1(C,sleep,A))))) &
(man(A))))).

fof(f2, axiom, (
? [A,B,C] : ((man(A)) &
((predicate1(B,sleep,A)) &
(predicate2(C,see,'John',A)))))).
003095 A man waits. John sees the man who sleeps or who waits.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,wait,B)) &
(man(B))))).

fof(f2, axiom, (
? [A,B] : ((man(A)) &
((? [C] : ((predicate1(C,sleep,A))
| (? [D] : (predicate1(D,wait,A))))) &
(predicate2(B,see,'John',A)))))).
003096 There is 1kg of n:laundry.
fof(f1, axiom, (
? [A] : (laundry(A)))).
003097 3.141592653611111 approximates Pi.
fof(f1, axiom, (
? [A] : (predicate2(A,approximate,3.141592653611111,'Pi')))).
003098 A man visits a town Zürich.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003099 There is a man who does not sleep soundly in a bed in a morning. John sees the man who does not sleep soundly in a bed in a morning.
fof(f1, axiom, (
? [A,B] : ((predicate2(A,see,'John',B)) &
((~(? [C,D,E] : ((morning(C)) &
((bed(D)) &
((predicate1(E,sleep,B)) &
((modifier_pp(E,in,C)) &
((modifier_pp(E,in,D)) &
(modifier_adv(E,soundly,pos))))))))) &
(man(B)))))).
003100 At most 3 men X wait. X are tired.
ERROR	DRS condition not supported: [|]	tptp/4	[predicate(_,wait,A)-1,object(A,man,countable,na,leq,3)-1]
003101 There is X who sleeps.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003102 If there is an animal that believes that John is its owner then John sees the animal that believes that John is its owner.
ERROR	DRS condition not supported: :	tptp/4	_:drs([A,B],[relation(A,of,_)-1,object(A,owner,countable,na,eq,1)-1,predicate(B,be,named(John),A)-1])
003103 A man X which runs is happy.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003104 A man X eats. X who drinks waits.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003105 A man X eats. The man X who drinks waits.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003106 A man X eats. The man X who eats waits.
fof(f1, axiom, (
? [A,B,C] : ((predicate1(A,wait,B)) &
((predicate1(C,eat,B)) &
(man(B)))))).
003107 A man X eats. X who eats waits.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003108 There is a man X1 that owns a dog and there is a man X2 that owns a cat and John sees X1.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate2(A,see,'John',B)) &
((predicate2(C,own,B,D)) &
((dog(D)) &
(man(B))))))).

fof(f2, axiom, (
? [A,B,C] : ((predicate2(A,own,B,C)) &
((cat(C)) &
(man(B)))))).
003109 A man X sees a cat Y. A woman X observes a dog Y.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003110 A man X walks. A woman X talks.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003111 A man X walks. The woman X talks.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003112 The man X walks. A woman X talks.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003113 A man X walks. The red man X talks.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003114 There is a man X. The man X of a woman waits.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003115 A red man X waits. If a red man X waits then the red man is a customer.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003116 Someone X waits. If someone X waits then X is a customer.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003117 A red man X waits. If the red man X waits then the red man X is a customer.
fof(f1, axiom, (
? [A,B] : ((! [C] : ((predicate1(C,wait,B))
=> (? [D] : ((customer(D)) &
(B=D))))) &
((predicate1(A,wait,B)) &
((property1(B,red,pos)) &
(man(B))))))).
003118 The red man X waits. If the red man X waits then the red man X is a customer.
fof(f1, axiom, (
? [A,B] : ((! [C] : ((predicate1(C,wait,A))
=> (? [D] : ((customer(D)) &
(A=D))))) &
((man(A)) &
((property1(A,red,pos)) &
(predicate1(B,wait,A))))))).
003119 If the red man X waits then the red man is a customer. A red man X waits.
fof(f1, axiom, (
! [A,B] : (((predicate1(A,wait,B)) &
((property1(B,red,pos)) &
(man(B))))
=> (? [C] : ((customer(C)) &
(B=C)))))).

fof(f2, axiom, (
? [A,B] : ((predicate1(A,wait,B)) &
((property1(B,red,pos)) &
(man(B)))))).
003120 John watches the man who sees himself.
fof(f1, axiom, (
? [A,B,C] : ((man(A)) &
((predicate2(B,see,A,A)) &
(predicate2(C,watch,'John',A)))))).
003121 There is a man who sees himself. John watches the man who sees himself.
fof(f1, axiom, (
? [A,B,C] : ((predicate2(A,watch,'John',B)) &
((predicate2(C,see,B,B)) &
(man(B)))))).
003122 A child of a child X is the child X.
fof(f1, axiom, (
? [A,B] : ((A=B) &
((relation(A,of,B)) &
((child(B)) &
(child(A))))))).
003123 There is a child X whose child is the child X.
fof(f1, axiom, (
? [A,B] : ((A=B) &
((relation(A,of,B)) &
((child(A)) &
(child(B))))))).
003124 There is a child X whose child is not the child X.
fof(f1, axiom, (
? [A,B] : ((~(A=B)) &
((relation(A,of,B)) &
((child(A)) &
(child(B))))))).
003125 There is a man X and there is a man X.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003126 Every man X waits and there is a man X.
fof(f1, axiom, (
? [A] : (man(A)))).

fof(f2, axiom, (
! [A] : ((man(A))
=> (? [B] : (predicate1(B,wait,A)))))).
003127 There is a man X and every man X waits.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003128 A child of a child X is not the child X.
fof(f1, axiom, (
? [A,B] : ((~(A=B)) &
((relation(A,of,B)) &
((child(B)) &
(child(A))))))).
003129 Who is a child X whose child is not the child X?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,who)
003130 There is a man or there is a dog or there is a cat that sees it and him.
fof(f1, axiom, (
? [A] : ((man(A))
| (? [B] : ((dog(B))
| (? [C,D,E] : ((cat(C)) &
((has_part(E,B)) &
((predicate2(D,see,C,E)) &
((has_part(E,A)) &
(object(E,na,countable,na,eq,2)))))))))))).
003131 There is a man or there is a dog that sees him or there is a cat that sees him.
fof(f1, axiom, (
? [A] : ((man(A))
| (? [B,C] : (((dog(B)) &
(predicate2(C,see,B,A)))
| (? [D,E] : ((cat(D)) &
(predicate2(E,see,D,A))))))))).
003132 There is a dog that sees the man or there is a cat that sees it.
fof(f1, axiom, (
? [A,B,C] : (((dog(A)) &
((predicate2(B,see,A,C)) &
(man(C))))
| (? [D,E] : ((cat(D)) &
(predicate2(E,see,D,A))))))).
003133 There is a man or there is a dog that sees the man or there is a cat that sees it and the man.
fof(f1, axiom, (
? [A] : ((man(A))
| (? [B,C] : (((dog(B)) &
(predicate2(C,see,B,A)))
| (? [D,E,F] : ((cat(D)) &
((has_part(F,B)) &
((predicate2(E,see,D,F)) &
((has_part(F,A)) &
(object(F,na,countable,na,eq,2)))))))))))).
003134 A dog sees a man and a cat sees it and him.
fof(f1, axiom, (
? [A,B,C,D,E,F] : ((object(A,na,countable,na,eq,2)) &
((has_part(A,B)) &
((predicate2(C,see,D,A)) &
((has_part(A,E)) &
((predicate2(F,see,E,B)) &
((man(B)) &
((dog(E)) &
(cat(D))))))))))).
003135 A man comes in a day A1. A boy reads in the day A2 that follows A1. A book is red in the day that follows A2.
fof(f1, axiom, (
? [A,B,C,D,E,F,G,H,I,J,K] : ((day(A)) &
((predicate2(B,follow,A,C)) &
((modifier_pp(L,in,A)) &
((D=E) &
((property1(E,red,pos)) &
((book(D)) &
((day(C)) &
((predicate2(F,follow,C,G)) &
((modifier_pp(H,in,C)) &
((predicate1(H,read,I)) &
((boy(I)) &
((modifier_pp(J,in,G)) &
((predicate1(J,come,K)) &
((man(K)) &
(day(G)))))))))))))))))).
003136 A man comes in a day A1. A boy reads in a day A2 that follows A1. A book is red in a day that follows A2.
fof(f1, axiom, (
? [A,B,C,D,E,F,G,H,I,J,K] : ((modifier_pp(L,in,A)) &
((B=C) &
((property1(C,red,pos)) &
((book(B)) &
((predicate2(D,follow,A,E)) &
((day(A)) &
((modifier_pp(F,in,E)) &
((predicate1(F,read,G)) &
((boy(G)) &
((predicate2(H,follow,E,I)) &
((day(E)) &
((modifier_pp(J,in,I)) &
((predicate1(J,come,K)) &
((man(K)) &
(day(I)))))))))))))))))).
003137 There is a day A1. A day A2 follows A1.
fof(f1, axiom, (
? [A,B,C] : ((predicate2(A,follow,B,C)) &
((day(B)) &
(day(C)))))).
003138 There is a day A1. A day A2 follows the day.
fof(f1, axiom, (
? [A] : (day(A)))).

fof(f2, axiom, (
? [A,B] : ((predicate2(A,follow,B,B)) &
(day(B))))).
003139 There is a day. A day follows the day.
fof(f1, axiom, (
? [A] : (day(A)))).

fof(f2, axiom, (
? [A,B] : ((predicate2(A,follow,B,B)) &
(day(B))))).
003140 Somebody M is the mother of a child C1. Somebody H is the husband of M. H has a child C2. C1 is not C2. Who is C1?
ERROR	DRS condition not supported: question	tptp/4	question(drs([A,B],[query(A,who)-5/1,predicate(B,be,A,_)-5/2]))
003141 A card of a man a card of who is valid is valid.
fof(f1, axiom, (
? [A,B,C,D,E] : ((A=B) &
((property1(B,valid,pos)) &
((relation(A,of,C)) &
((D=E) &
((property1(E,valid,pos)) &
((relation(D,of,C)) &
((card(D)) &
((man(C)) &
(card(A)))))))))))).
003142 A card of a man the card of who is valid is valid.
fof(f1, axiom, (
? [A,B,C,D] : ((A=B) &
((property1(B,valid,pos)) &
((relation(A,of,C)) &
((A=D) &
((property1(D,valid,pos)) &
((card(A)) &
(man(C)))))))))).
003143 A card of which man the card of who is valid is valid?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,which)
003144 A man waits. His dog barks.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate1(A,bark,B)) &
((dog(B)) &
((relation(B,of,C)) &
((predicate1(D,wait,C)) &
(man(C)))))))).
003145 A man waits. His own dog barks.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003146 Every man is seen by his dog.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003147 There is nothing.
fof(f1, axiom, (
~(? [A] : ($true)))).
003148 Mary sleeps. John sees himself and her.
fof(f1, axiom, (
? [A] : (predicate1(A,sleep,'Mary')))).

fof(f2, axiom, (
? [A,B] : ((object(A,na,countable,na,eq,2)) &
((has_part(A,'Mary')) &
((predicate2(B,see,'John',A)) &
(has_part(A,'John'))))))).
003149 Mary sleeps. John sees herself.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003150 Mary sleeps. John sees himself and herself.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003151 Mary sleeps and John sees herself.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003152 Mary sleeps and John sees herself and himself.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003153 Mary sleeps and John sees himself and herself.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003154 If a card X1 is a card of the card X1 then John enters the card X1.
fof(f1, axiom, (
! [A,B] : (((card(A)) &
((card(B)) &
((relation(B,of,A)) &
(A=B))))
=> (? [C] : (predicate2(C,enter,'John',A)))))).
003155 Not 5 men wait.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003156 A man owns not two cars.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003157 There are some men each of who who is tired sleeps.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003158 There are some men. Each of the men who is tired sleeps.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003159 Every friend of JohnX is JohnY or it is rich.
fof(f1, axiom, (
(! [A] : (((friend(A)) &
(relation(A,of,'JohnX')))
=> (A='JohnY')))
| (? [B] : ((property1(B,rich,pos)) &
('JohnY'=B))))).
003160 JohnX is JohnY or it is rich.
fof(f1, axiom, (
('JohnX'='JohnY')
| (? [A] : ((property1(A,rich,pos)) &
('JohnY'=A))))).
003161 Which thing which is good does a man enter?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,which)
003162 Every man sees a dog X that sees a cat that sees the dog X that sees a rat that sees a mouse.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003163 Which thing which succeeds exists?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,which)
003164 John sees a man who sleeps soundly in a bed.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate2(A,see,'John',B)) &
((modifier_adv(C,soundly,pos)) &
((modifier_pp(C,in,D)) &
((predicate1(C,sleep,B)) &
((man(B)) &
(bed(D))))))))).
003165 Every customer has at least 2 cards and their associated codes. If a customer C approaches an automatic teller and a card of her is valid and she inserts the card carefully into a slot and types a correct code of the card then the automatic teller accepts the card and displays "Card accepted" and C is happy. No card that does not have a correct code is accepted. It is false that a customer's card is valid, and is expired or is cancelled. If a card is not provably invalid then it is accepted. If a customer owns a card and can prove that it is lost then a bank must replace it.
ERROR	DRS condition not supported: ~	tptp/4	~drs([A,B],[property(A,invalid,pos)-5/7,predicate(B,be,_,A)-5/4])
003166 A man hits a dog which runs fast in a park.
fof(f1, axiom, (
? [A,B,C,D,E] : ((predicate2(A,hit,B,C)) &
((modifier_adv(D,fast,pos)) &
((modifier_pp(D,in,E)) &
((predicate1(D,run,C)) &
((dog(C)) &
((park(E)) &
(man(B)))))))))).
003167 A man hits a dog which runs fast in a park quickly.
fof(f1, axiom, (
? [A,B,C,D,E] : ((predicate2(A,hit,B,C)) &
((modifier_adv(D,fast,pos)) &
((modifier_pp(D,in,E)) &
((modifier_adv(D,quickly,pos)) &
((predicate1(D,run,C)) &
((dog(C)) &
((park(E)) &
(man(B))))))))))).
003168 Mary inserts her own card that is valid carefully into a slot.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate2(A,insert,'Mary',B)) &
((modifier_adv(E,carefully,pos)) &
((modifier_pp(E,into,C)) &
((B=D) &
((property1(D,valid,pos)) &
((card(B)) &
((relation(B,of,'Mary')) &
(slot(C))))))))))).
003169 Mary's card is valid and she inserts the card carefully into a slot.
fof(f1, axiom, (
? [A,B,C,D] : ((modifier_adv(A,carefully,pos)) &
((modifier_pp(A,into,B)) &
((predicate2(A,insert,'Mary',C)) &
((C=D) &
((property1(D,valid,pos)) &
((card(C)) &
((relation(C,of,'Mary')) &
(slot(B))))))))))).
003170 A card is valid in a slot.
fof(f1, axiom, (
? [A,B,C] : ((modifier_pp(D,in,A)) &
((B=C) &
((property1(C,valid,pos)) &
((card(B)) &
(slot(A)))))))).
003171 A card is valid in a slot carefully.
fof(f1, axiom, (
? [A,B,C] : ((modifier_pp(D,in,A)) &
((modifier_adv(D,carefully,pos)) &
((B=C) &
((property1(C,valid,pos)) &
((card(B)) &
(slot(A))))))))).
003172 A card is valid carefully in a slot.
fof(f1, axiom, (
? [A,B,C] : ((modifier_adv(D,carefully,pos)) &
((modifier_pp(D,in,A)) &
((B=C) &
((property1(C,valid,pos)) &
((card(B)) &
(slot(A))))))))).
003173 A card is valid carefully.
fof(f1, axiom, (
? [A,B] : ((modifier_adv(C,carefully,pos)) &
((A=B) &
((property1(B,valid,pos)) &
(card(A))))))).
003174 A card is valid in a slot in a bank.
fof(f1, axiom, (
? [A,B,C,D] : ((modifier_pp(E,in,A)) &
((modifier_pp(E,in,B)) &
((C=D) &
((property1(D,valid,pos)) &
((card(C)) &
((bank(B)) &
(slot(A)))))))))).
003175 Everybody X of X's dog waits.
fof(f1, axiom, (
! [A,B] : ((($true) &
((relation(B,of,A)) &
((dog(B)) &
(relation(A,of,B)))))
=> (? [C] : (predicate1(C,wait,A)))))).
003176 There is a boy. A man of his own group waits.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003177 Every mother of someone is a parent of it.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003178 Every man's car contains some instructions that code its development.
fof(f1, axiom, (
! [A,B] : (((man(A)) &
((relation(B,of,A)) &
(car(B))))
=> (? [C,D,E,F] : ((object(C,instruction,countable,na,geq,2)) &
((relation(D,of,B)) &
((development(D)) &
((predicate2(E,code,C,D)) &
(predicate2(F,contain,B,C)))))))))).
003179 Everybody of its dog waits.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003180 If there is an animal that believes that John is its owner then John sees the animal.
ERROR	DRS condition not supported: :	tptp/4	_:drs([A,B],[relation(A,of,_)-1,object(A,owner,countable,na,eq,1)-1,predicate(B,be,named(John),A)-1])
003181 A dog of its man barks.
fof(f1, axiom, (
? [A,B,C] : ((predicate1(A,bark,B)) &
((relation(B,of,C)) &
((man(C)) &
((relation(C,of,B)) &
(dog(B)))))))).
003182 A card X1 is a card of the card X1.
fof(f1, axiom, (
? [A,B] : ((A=B) &
((relation(B,of,A)) &
((card(B)) &
(card(A))))))).
003183 What does John not see?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,what)
003184 Switzerland borders 4 countries that border Germany.
fof(f1, axiom, (
? [A,B,C] : ((predicate2(A,border,'Switzerland',B)) &
((predicate2(C,border,B,'Germany')) &
(object(B,country,countable,na,eq,4)))))).
003185 Switzerland borders each of 4 countries that border Germany.
fof(f1, axiom, (
? [A,B] : ((! [C] : ((has_part(B,C))
=> (? [D] : (predicate2(D,border,'Switzerland',C))))) &
((predicate2(A,border,B,'Germany')) &
(object(B,country,countable,na,eq,4)))))).
003186 John has 0 kg of apples.
fof(f1, axiom, (
? [A,B] : ((predicate2(A,have,'John',B)) &
(object(B,apple,countable,kg,eq,0))))).
003187 John wants to run.
ERROR	DRS condition not supported: :	tptp/4	_:drs([A],[predicate(A,run,named(John))-1])
003188 John has 1.83 apples.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003189 A dog that every man who waits has barks.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,bark,B)) &
((! [C,D] : (((man(C)) &
(predicate1(D,wait,C)))
=> (? [E] : (predicate2(E,have,C,B))))) &
(dog(B)))))).
003190 A dog of every man who waits barks.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,bark,B)) &
((! [C,D] : (((man(C)) &
(predicate1(D,wait,C)))
=> (relation(B,of,C)))) &
(dog(B)))))).
003191 There is a dog of every man. There is a cat of every woman.
fof(f1, axiom, (
? [A] : ((! [B] : ((man(B))
=> (relation(A,of,B)))) &
(dog(A))))).

fof(f2, axiom, (
? [A] : ((! [B] : ((woman(B))
=> (relation(A,of,B)))) &
(cat(A))))).
003192 An apple is v:given toooo John by Mary.
fof(f1, axiom, (
? [A,B] : ((predicate3(A,given,'Mary',B,'John')) &
(apple(B))))).
003193 John v:gives an apple to Mary.
fof(f1, axiom, (
? [A,B] : ((predicate3(A,gives,'John',B,'Mary')) &
(apple(B))))).
003194 John v:gives Mary an apple.
fof(f1, axiom, (
? [A,B] : ((predicate3(A,gives,'John',B,'Mary')) &
(apple(B))))).
003195 John v:gives an apple toooo Mary.
fof(f1, axiom, (
? [A,B] : ((predicate3(A,gives,'John',B,'Mary')) &
(apple(B))))).
003196 John v:xxx an apple yyy Mary.
fof(f1, axiom, (
? [A,B] : ((predicate3(A,xxx,'John',B,'Mary')) &
(apple(B))))).
003197 John is as a:rrich as Bill.
fof(f1, axiom, (
? [A] : (('John'=A) &
(property2(A,rrich,pos_as,'Bill'))))).
003198 John is a:rricher than Bill.
fof(f1, axiom, (
? [A] : (('John'=A) &
(property2(A,rricher,comp_than,'Bill'))))).
003199 John is more a:rrich than Bill.
fof(f1, axiom, (
? [A] : (('John'=A) &
(property2(A,rrich,comp_than,'Bill'))))).
003200 John is most a:rrich.
fof(f1, axiom, (
? [A] : (('John'=A) &
(property1(A,rrich,sup))))).
003201 John runs a:ffast.
fof(f1, axiom, (
? [A] : ((modifier_adv(A,ffast,pos)) &
(predicate1(A,run,'John'))))).
003202 John runs more a:ffast.
fof(f1, axiom, (
? [A] : ((modifier_adv(A,ffast,comp)) &
(predicate1(A,run,'John'))))).
003203 John runs most a:ffast.
fof(f1, axiom, (
? [A] : ((modifier_adv(A,ffast,sup)) &
(predicate1(A,run,'John'))))).
003204 John has 1.83 kg of apples.
fof(f1, axiom, (
? [A,B] : ((predicate2(A,have,'John',B)) &
(object(B,apple,countable,kg,eq,1.83))))).
003205 John has 0 apples.
fof(f1, axiom, (
? [A,B] : ((predicate2(A,have,'John',B)) &
(object(B,apple,countable,na,eq,0))))).
003206 John has -2 apples.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003207 John has -2 kg of apples.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003208 There are at most 2 men X and something Y and something Z.
ERROR	DRS condition not supported: [|]	tptp/4	[has_part(_,A)-1,object(A,man,countable,na,leq,2)-1]
003209 There is X. There is X.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003210 There is a man X. There is X.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003211 There is something X. There is X.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003212 There are X. There is X.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003213 There are X. X are some men.
fof(f1, axiom, (
? [A,B] : ((A=B) &
((object(B,man,countable,na,geq,2)) &
($true))))).
003214 There are X. X is some men.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003215 There is X. There is a man X.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003216 If there is X then there is X.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003217 There are X and Y.
fof(f1, axiom, (
? [A,B,C] : ((object(A,na,countable,na,eq,2)) &
((has_part(A,B)) &
(($true) &
((has_part(A,C)) &
($true))))))).
003218 John says "
ERROR	DRS is empty	apply_converter/2	drs([],[])
003219 John, can swim!
ERROR	DRS is empty	apply_converter/2	drs([],[])
003220 John, must wait!
ERROR	DRS is empty	apply_converter/2	drs([],[])
003221 John, do not provably sleep!
ERROR	DRS is empty	apply_converter/2	drs([],[])
003222 John tries to hurry and runs.
ERROR	DRS condition not supported: :	tptp/4	_:drs([A],[predicate(A,hurry,named(John))-1])
003223 Every manager manages to manage.
ERROR	DRS condition not supported: :	tptp/4	_:drs([A],[predicate(A,manage,_)-1])
003224 Every manager manages to manage something.
ERROR	DRS condition not supported: :	tptp/4	_:drs([A,B],[object(A,something,dom,na,na,na)-1,predicate(B,manage,_,A)-1])
003225 John stops to smoke and starts to drink.
ERROR	DRS condition not supported: :	tptp/4	_:drs([A],[predicate(A,drink,named(John))-1])
003226 John strongly desires a beer.
fof(f1, axiom, (
? [A,B] : ((modifier_adv(A,strongly,pos)) &
((predicate2(A,desire,'John',B)) &
(beer(B)))))).
003227 John strongly desires to drink a beer.
ERROR	DRS condition not supported: :	tptp/4	_:drs([A,B],[object(A,beer,countable,na,eq,1)-1,predicate(B,drink,named(John),A)-1])
003228 John wants to be loved by Mary.
ERROR	DRS condition not supported: :	tptp/4	_:drs([A],[predicate(A,love,named(Mary),named(John))-1])
003229 Every man wants to be loved by a woman who wants to be protected by the man.
ERROR	DRS condition not supported: :	tptp/4	_:drs([A,B,C,E],[object(A,woman,countable,na,eq,1)-1,predicate(B,want,A,C)-1,C:drs([D],[predicate(D,protect,F,A)-1]),predicate(E,love,A,F)-1])
003230 Every man can want to love a woman.
ERROR	DRS condition not supported: can	tptp/4	can(drs([A,B],[predicate(A,want,E,B)-1/4,B:drs([C,D],[object(C,woman,countable,na,eq,1)-1/8,predicate(D,love,E,C)-1/6])]))
003231 Every man can want to attempt to try to love a woman.
ERROR	DRS condition not supported: can	tptp/4	can(drs([A,B],[predicate(A,want,D,B)-1/4,B:drs([C,E],[predicate(C,attempt,D,E)-1/6,E:drs([F,G],[predicate(F,try,D,G)-1/8,G:drs([H,I],[object(H,woman,countable,na,eq,1)-1/12,predicate(I,love,D,H)-1/10])])])]))
003232 John wants to can swim.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003233 John wants to must swim.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003234 John wants to have to swim.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003235 John wants to not swim.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003236 John should swim.
ERROR	DRS condition not supported: should	tptp/4	should(drs([A],[predicate(A,swim,named(John))-1]))
003237 John wants to should swim.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003238 John wants to do not swim.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003239 John wants to swims.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003240 There is a case. It is not the case that John sees.
fof(f1, axiom, (
? [A] : ((~(? [B,C] : ((A=B) &
((predicate2(C,see,'John',B)) &
(case(B)))))) &
(case(A))))).
003241 There is a case. It is not the case.
fof(f1, axiom, (
? [A] : ((~(A=A)) &
(case(A))))).
003242 When can a card be valid?
ERROR	DRS condition not supported: can	tptp/4	can(drs([A,B],[property(A,valid,pos)-1/6,predicate(B,be,_,A)-1/2,query(B,when)-1/1]))
003243 How can a car be fastest and more reliable?
ERROR	DRS condition not supported: can	tptp/4	can(drs([A,B],[property(A,fast,sup)-1/6,property(A,reliable,comp)-1/9,predicate(B,be,_,A)-1/2,query(B,how)-1/1]))
003244 How must John be polite?
ERROR	DRS condition not supported: must	tptp/4	must(drs([A,B],[property(A,polite,pos)-1/5,predicate(B,be,named(John),A)-1/2,query(B,how)-1/1]))
003245 Where can an escaped prisoner be?
ERROR	DRS condition not supported: can	tptp/4	can(drs([A],[predicate(A,be,_)-1/2,query(A,where)-1/1]))
003246 Where can an escaped prisoner be rich?
ERROR	DRS condition not supported: can	tptp/4	can(drs([A,B],[property(A,rich,pos)-1/7,predicate(B,be,_,A)-1/2,query(B,where)-1/1]))
003247 How can a man can be rich?
ERROR	DRS is empty	apply_converter/2	drs([],[])
003248 How does a man works?
ERROR	DRS is empty	apply_converter/2	drs([],[])
003249 when can some cards be valid?
ERROR	DRS condition not supported: can	tptp/4	can(drs([A,B],[property(A,valid,pos)-1/6,predicate(B,be,_,A)-1/2,query(B,when)-1/1]))
003250 when can some cards is valid?
ERROR	DRS is empty	apply_converter/2	drs([],[])
003251 when can some cards must be valid?
ERROR	DRS is empty	apply_converter/2	drs([],[])
003252 When are some cards valid?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,when)
003253 John lives in a city that exists always always.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003254 If X=X then X=X.
fof(f1, axiom, (
! [A] : ((($true) &
(A=A))
=> (A=A)))).
003255 If X=Y then X=X.
fof(f1, axiom, (
! [A,B] : ((($true) &
(($true) &
(A=B)))
=> (A=A)))).
003256 If X=Y then X=Y.
fof(f1, axiom, (
! [A,B] : ((($true) &
(($true) &
(A=B)))
=> (A=B)))).
003257 If X=Y then Y=X.
fof(f1, axiom, (
! [A,B] : ((($true) &
(($true) &
(A=B)))
=> (B=A)))).
003259 If it is false that X=X then it is false that X=X.
fof(f1, axiom, (
(~(? [A] : (($true) &
(A=A))))
=> (~(? [B] : (($true) &
(B=B)))))).
003260 If it is false that there is something X1 and that X1 = X1 then it is false that there is something X2 and that X2 = X2.
fof(f1, axiom, (
(~(? [A] : (($true) &
(A=A))))
=> (~(? [B] : (($true) &
(B=B)))))).
003261 If it is false that X=X then X=X.
fof(f1, axiom, (
(~(? [A] : (($true) &
(A=A))))
=> (? [B] : (($true) &
(B=B))))).
003262 If John=X then it is false that John=X.
fof(f1, axiom, (
! [A] : ((($true) &
('John'=A))
=> (~('John'=A))))).
003263 If John=John then it is false that John=John.
fof(f1, axiom, (
('John'='John')
=> (~('John'='John')))).
003264 If John=John then John=John.
fof(f1, axiom, (
('John'='John')
=> ('John'='John'))).
003265 If John=John then John=Mary.
fof(f1, axiom, (
('John'='John')
=> ('John'='Mary'))).
003266 If John=Mary then Mary=John.
fof(f1, axiom, (
('John'='Mary')
=> ('Mary'='John'))).
003267 No man gives no woman no apple.
fof(f1, axiom, (
! [A] : ((man(A))
=> (~(! [B] : ((woman(B))
=> (~(! [C] : ((apple(C))
=> (~(? [D] : (predicate3(D,give,A,C,B))))))))))))).
003268 At least 2 men give at least 3 women at least 4 apples.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate3(A,give,B,C,D)) &
((object(C,apple,countable,na,geq,4)) &
((object(D,woman,countable,na,geq,3)) &
(object(B,man,countable,na,geq,2))))))).
003269 At most 2 men give at most 3 women at most 4 apples.
ERROR	DRS condition not supported: [|]	tptp/4	[[[predicate(_,give,C,A,B)-1,object(A,apple,countable,na,leq,4)-1],object(B,woman,countable,na,leq,3)-1],object(C,man,countable,na,leq,2)-1]
003270 At most 2 men give themselves at most 4 apples.
ERROR	DRS condition not supported: [|]	tptp/4	[[predicate(_,give,A,B,A)-1,object(B,apple,countable,na,leq,4)-1],object(A,man,countable,na,leq,2)-1]
003271 At most 2 men give themselves themselves.
ERROR	DRS condition not supported: [|]	tptp/4	[predicate(_,give,A,A,A)-1,object(A,man,countable,na,leq,2)-1]
003272 every man owns each of at most 5 cars that are expensive.
ERROR	DRS condition not supported: [|]	tptp/4	[drs([A],[has_part(C,A)-1])=>drs([B],[predicate(B,own,_,A)-1]),predicate(_,be,C,D)-1,property(D,expensive,pos)-1,object(C,car,countable,na,leq,5)-1]
003273 John has at most 3 cars. Mary loves them.
ERROR	DRS condition not supported: [|]	tptp/4	[object(A,car,countable,na,leq,3)-1,predicate(_,have,named(John),A)-1]
003274 John owns at most 3 cars that do not start.
ERROR	DRS condition not supported: [|]	tptp/4	[object(B,car,countable,na,leq,3)-1,-drs([A],[predicate(A,start,B)-1]),predicate(_,own,named(John),B)-1]
003275 John owns at most 3 cars that have at most 3 wheels.
ERROR	DRS condition not supported: [|]	tptp/4	[object(A,car,countable,na,leq,3)-1/6,[object(B,wheel,countable,na,leq,3)-1/12,predicate(_,have,A,B)-1/8],predicate(_,own,named(John),A)-1/2]
003276 John quickly knows that Mary sleeps.
ERROR	DRS condition not supported: :	tptp/4	_:drs([A],[predicate(A,sleep,named(Mary))-1/6])
003277 John quickly knows that Mary quickly sleeps.
ERROR	DRS condition not supported: :	tptp/4	_:drs([A],[predicate(A,sleep,named(Mary))-1/7,modifier_adv(A,quickly,pos)-1/6])
003278 John sees a girl in every park.
fof(f1, axiom, (
? [A] : ((! [B] : ((park(B))
=> (? [C] : ((predicate2(C,see,'John',A)) &
(modifier_pp(C,in,B)))))) &
(girl(A))))).
003279 John in every park sees a girl.
fof(f1, axiom, (
! [A] : ((park(A))
=> (? [B,C] : ((girl(B)) &
((predicate2(C,see,'John',B)) &
(modifier_pp(C,in,A)))))))).
003280 John in every park sees a girl with every telescope.
fof(f1, axiom, (
! [A] : ((park(A))
=> (? [B] : ((girl(B)) &
(! [C] : ((telescope(C))
=> (? [D] : ((modifier_pp(D,in,A)) &
((predicate2(D,see,'John',B)) &
(modifier_pp(D,with,C)))))))))))).
003281 John in a park sees that Mary sleeps.
ERROR	DRS condition not supported: :	tptp/4	_:drs([A],[predicate(A,sleep,named(Mary))-1/8])
003282 John in every park sees that Mary sleeps.
ERROR	DRS condition not supported: :	tptp/4	_:drs([A],[predicate(A,sleep,named(Mary))-1/8])
003283 John in no park sees that Mary sleeps.
ERROR	DRS condition not supported: :	tptp/4	_:drs([A],[predicate(A,sleep,named(Mary))-1/8])
003284 John in every park for no reason sees that Mary sleeps.
ERROR	DRS condition not supported: :	tptp/4	_:drs([A],[predicate(A,sleep,named(Mary))-1/11])
003285 John in every park sees a girl with no telescope.
fof(f1, axiom, (
! [A] : ((park(A))
=> (? [B] : ((girl(B)) &
(! [C] : ((telescope(C))
=> (~(? [D] : ((modifier_pp(D,in,A)) &
((predicate2(D,see,'John',B)) &
(modifier_pp(D,with,C))))))))))))).
003286 John in every park intentionally sees a girl manually with no telescope.
fof(f1, axiom, (
! [A] : ((park(A))
=> (? [B] : ((girl(B)) &
(! [C] : ((telescope(C))
=> (~(? [D] : ((modifier_adv(D,intentionally,pos)) &
((modifier_pp(D,in,A)) &
((predicate2(D,see,'John',B)) &
((modifier_pp(D,with,C)) &
(modifier_adv(D,manually,pos))))))))))))))).
003287 John believes that a dog barks and it is false that a cat sleeps.
ERROR	DRS condition not supported: :	tptp/4	_:drs([A,B],[object(A,dog,countable,na,eq,1)-1/5,predicate(B,bark,A)-1/6])
003288 John sees soundly in a bed in a morning that a man sleeps.
fof(f1, axiom, (
? [A,B,C,D,E] : ((modifier_adv(A,soundly,pos)) &
((modifier_pp(A,in,B)) &
((modifier_pp(A,in,C)) &
((predicate1(A,see,'John')) &
((predicate2(D,sleep,E,C)) &
((man(E)) &
((morning(C)) &
(bed(B))))))))))).
003289 John in every morning wants to swim.
ERROR	DRS condition not supported: :	tptp/4	_:drs([A],[predicate(A,swim,named(John))-1/7])
003290 John in every morning wants to swim intentionally for no reason.
ERROR	DRS condition not supported: :	tptp/4	_:drs([],[drs([A],[object(A,reason,countable,na,eq,1)-1/11])=>drs([],[-drs([B],[predicate(B,swim,named(John))-1/7,modifier_pp(B,for,A)-1/9,modifier_adv(B,intentionally,pos)-1/8])])])
003291 John in a bar wants to drink a beer.
ERROR	DRS condition not supported: :	tptp/4	_:drs([A,B],[object(A,beer,countable,na,eq,1)-1/9,predicate(B,drink,named(John),A)-1/7])
003292 John wants to drink a beer in a bar.
ERROR	DRS condition not supported: :	tptp/4	_:drs([A,B,C],[object(A,bar,countable,na,eq,1)-1/9,object(B,beer,countable,na,eq,1)-1/6,predicate(C,drink,named(John),B)-1/4,modifier_pp(C,in,A)-1/7])
003293 John in the morning wants to swim in the evening.
ERROR	DRS condition not supported: :	tptp/4	_:drs([A,B],[predicate(A,swim,named(John))-1/7,modifier_pp(A,in,B)-1/8,object(B,evening,countable,na,eq,1)-1/10])
003294 Every man in the morning wants to in the evening say that he likes the day completely.
ERROR	DRS condition not supported: :	tptp/4	_:drs([A,B,C],[predicate(A,say,E,B)-1/11,modifier_pp(A,in,C)-1/8,B:drs([D,F],[predicate(D,like,E,F)-1/14,modifier_adv(D,completely,pos)-1/17,object(F,day,countable,na,eq,1)-1/16]),object(C,evening,countable,na,eq,1)-1/10])
003295 Every man for no reason in every location meets a woman between two houses after no search.
fof(f1, axiom, (
! [A] : ((man(A))
=> (! [B] : ((reason(B))
=> (~(! [C] : ((location(C))
=> (? [D,E] : ((woman(D)) &
((object(E,house,countable,na,eq,2)) &
(! [F] : ((search(F))
=> (~(? [G] : ((modifier_pp(G,in,C)) &
((modifier_pp(G,for,B)) &
((predicate2(G,meet,A,D)) &
((modifier_pp(G,after,F)) &
(modifier_pp(G,between,E))))))))))))))))))))).
003296 Every man for no reason at every time wants to swim.
ERROR	DRS condition not supported: :	tptp/4	_:drs([A],[predicate(A,swim,_)-1/11])
003297 Every man for no reason at every time intentionally wants to swim in every lake.
ERROR	DRS condition not supported: :	tptp/4	_:drs([],[drs([A],[object(A,lake,countable,na,eq,1)-1/15])=>drs([B],[predicate(B,swim,_)-1/12,modifier_pp(B,in,A)-1/13])])
003298 Every man for no reason at every time intentionally knows that no woman swims in every lake.
ERROR	DRS condition not supported: :	tptp/4	_:drs([],[drs([A],[object(A,woman,countable,na,eq,1)-1/13])=>drs([],[-drs([],[drs([B],[object(B,lake,countable,na,eq,1)-1/17])=>drs([C],[predicate(C,swim,A)-1/14,modifier_pp(C,in,B)-1/15])])])])
003299 Every man for no reason knows that every woman for no reason wants to for no reason swim in every lake.
ERROR	DRS condition not supported: :	tptp/4	_:drs([],[drs([A],[object(A,woman,countable,na,eq,1)-1/9])=>drs([],[drs([B],[object(B,reason,countable,na,eq,1)-1/12])=>drs([],[-drs([C,D],[predicate(C,want,A,D)-1/13,modifier_pp(C,for,B)-1/10,D:drs([],[drs([E],[object(E,reason,countable,na,eq,1)-1/17])=>drs([],[-drs([],[drs([F],[object(F,lake,countable,na,eq,1)-1/21])=>drs([G],[predicate(G,swim,A)-1/18,modifier_pp(G,for,E)-1/15,modifier_pp(G,in,F)-1/19])])])])])])])])
003300 John sees a girl in every park with no telescope.
fof(f1, axiom, (
? [A] : ((! [B] : ((park(B))
=> (! [C] : ((telescope(C))
=> (~(? [D] : ((predicate2(D,see,'John',A)) &
((modifier_pp(D,with,C)) &
(modifier_pp(D,in,B)))))))))) &
(girl(A))))).
003301 John is with no telescope in every park seen by a girl.
fof(f1, axiom, (
! [A] : ((telescope(A))
=> (~(! [B] : ((park(B))
=> (? [C,D] : ((girl(C)) &
((predicate2(D,see,C,'John')) &
((modifier_pp(D,in,B)) &
(modifier_pp(D,with,A)))))))))))).
003302 John is with no telescope fast and quickly in every park seen by a girl.
fof(f1, axiom, (
! [A] : ((telescope(A))
=> (~(! [B] : ((park(B))
=> (? [C,D] : ((girl(C)) &
((predicate2(D,see,C,'John')) &
((modifier_pp(D,in,B)) &
((modifier_adv(D,quickly,pos)) &
((modifier_adv(D,fast,pos)) &
(modifier_pp(D,with,A)))))))))))))).
003303 John does not in a park sleep.
fof(f1, axiom, (
~(? [A,B] : ((park(A)) &
((predicate1(B,sleep,'John')) &
(modifier_pp(B,in,A))))))).
003304 John does not intentionally in a park sleep in the night.
fof(f1, axiom, (
~(? [A,B,C] : ((park(A)) &
((predicate1(B,sleep,'John')) &
((modifier_pp(B,in,A)) &
((modifier_adv(B,intentionally,pos)) &
((modifier_pp(B,in,C)) &
(night(C)))))))))).
003305 John can travel from Rome to Zurich.
ERROR	DRS condition not supported: can	tptp/4	can(drs([A],[predicate(A,travel,named(John))-1/3,modifier_pp(A,to,named(Zurich))-1/6,modifier_pp(A,from,named(Rome))-1/4]))
003306 John can from Rome to Zurich travel.
ERROR	DRS condition not supported: can	tptp/4	can(drs([A],[modifier_pp(A,to,named(Zurich))-1/5,modifier_pp(A,from,named(Rome))-1/3,predicate(A,travel,named(John))-1/7]))
003307 John is in a park hit by a ball.
fof(f1, axiom, (
? [A,B,C] : ((modifier_pp(A,in,B)) &
((predicate2(A,hit,C,'John')) &
((ball(C)) &
(park(B))))))).
003308 A ball in a park hits John.
fof(f1, axiom, (
? [A,B,C] : ((modifier_pp(A,in,B)) &
((predicate2(A,hit,C,'John')) &
((ball(C)) &
(park(B))))))).
003309 A ball where hits John?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,where)
003310 Where does a ball in a park hit John?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,where)
003311 John does not provably mostly swim.
ERROR	DRS condition not supported: ~	tptp/4	~drs([A],[predicate(A,swim,named(John))-1/6,modifier_adv(A,mostly,pos)-1/5])
003312 John does not provably in a park talk-to a girl.
ERROR	DRS condition not supported: ~	tptp/4	~drs([A,B,C],[object(A,park,countable,na,eq,1)-1/7,object(B,girl,countable,na,eq,1)-1/10,predicate(C,talk-to,named(John),B)-1/8,modifier_pp(C,in,A)-1/5])
003313 John must manually hit a button.
ERROR	DRS condition not supported: must	tptp/4	must(drs([A,B],[object(A,button,countable,na,eq,1)-1/6,modifier_adv(B,manually,pos)-1/3,predicate(B,hit,named(John),A)-1/4]))
003314 John must manually hit every button in every case.
ERROR	DRS condition not supported: must	tptp/4	must(drs([],[drs([A],[object(A,button,countable,na,eq,1)-1/6])=>drs([],[drs([B],[object(B,case,countable,na,eq,1)-1/9])=>drs([C],[modifier_adv(C,manually,pos)-1/3,predicate(C,hit,named(John),A)-1/4,modifier_pp(C,in,B)-1/7])])]))
003315 John must manually in every case for no reason hit every button.
ERROR	DRS condition not supported: must	tptp/4	must(drs([],[drs([A],[object(A,case,countable,na,eq,1)-1/6])=>drs([],[drs([B],[object(B,reason,countable,na,eq,1)-1/9])=>drs([],[-drs([],[drs([C],[object(C,button,countable,na,eq,1)-1/12])=>drs([D],[modifier_pp(D,for,B)-1/7,modifier_pp(D,in,A)-1/4,modifier_adv(D,manually,pos)-1/3,predicate(D,hit,named(John),C)-1/10])])])])]))
003316 A man who in a park that in a city exists walks waits.
fof(f1, axiom, (
? [A,B,C,D,E,F] : ((predicate1(A,wait,B)) &
((modifier_pp(C,in,D)) &
((predicate1(C,walk,B)) &
((man(B)) &
((modifier_pp(E,in,F)) &
((predicate1(E,exist,D)) &
((park(D)) &
(city(F))))))))))).
003317 Every man who in every park that in no city exists walks waits.
fof(f1, axiom, (
! [A] : (((man(A)) &
(! [B] : (((park(B)) &
(! [C] : ((city(C))
=> (~(? [D] : ((predicate1(D,exist,B)) &
(modifier_pp(D,in,C))))))))
=> (? [E] : ((predicate1(E,walk,A)) &
(modifier_pp(E,in,B)))))))
=> (? [F] : (predicate1(F,wait,A)))))).
003319 { Christmases, the United-Nations } > 2.
ERROR	DRS function set/1 not supported	arg_to_tptp/2	set([named(Christmas),named(United-Nations)])
003320 Everybody sees the United-Nations that wait.
fof(f1, axiom, (
! [A] : (($true)
=> (? [B,C] : ((predicate2(B,see,A,'United-Nations')) &
(predicate1(C,wait,'United-Nations'))))))).
003321 Everybody sees the United-Nations.
fof(f1, axiom, (
! [A] : (($true)
=> (? [B] : (predicate2(B,see,A,'United-Nations')))))).
003322 Everybody sees Christmases that wait.
fof(f1, axiom, (
! [A] : (($true)
=> (? [B,C] : ((predicate2(B,see,A,'Christmas')) &
(predicate1(C,wait,'Christmas'))))))).
003323 Everybody sees Christmases.
fof(f1, axiom, (
! [A] : (($true)
=> (? [B] : (predicate2(B,see,A,'Christmas')))))).
003324 The United-Nations see the United-Nations.
fof(f1, axiom, (
? [A] : (predicate2(A,see,'United-Nations','United-Nations')))).
003325 John sees the United-Nations and the United-Nations.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003326 { the United-Nations, the United-Nations} waits.
ERROR	DRS function set/1 not supported	arg_to_tptp/2	set([named(United-Nations),named(United-Nations)])
003327 He sleeps.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003328 He sees himself.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003329 A woman sees himself.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003330 A number X sees the number X.
fof(f1, axiom, (
? [A,B] : ((predicate2(A,see,B,B)) &
(number(B))))).
003331 A number X sees the man X.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003332 A number X sees a man X.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003333 The water flows.
fof(f1, axiom, (
? [A,B] : ((water(A)) &
(predicate1(B,flow,A))))).
003334 John patiently waits.
fof(f1, axiom, (
? [A] : ((modifier_adv(A,patiently,pos)) &
(predicate1(A,wait,'John'))))).
003335 John waits patiently.
fof(f1, axiom, (
? [A] : ((modifier_adv(A,patiently,pos)) &
(predicate1(A,wait,'John'))))).
003336 John in a kitchen waits.
fof(f1, axiom, (
? [A,B] : ((modifier_pp(A,in,B)) &
((predicate1(A,wait,'John')) &
(kitchen(B)))))).
003337 John waits in a kitchen.
fof(f1, axiom, (
? [A,B] : ((modifier_pp(A,in,B)) &
((predicate1(A,wait,'John')) &
(kitchen(B)))))).
003338 John patiently waits in a kitchen.
fof(f1, axiom, (
? [A,B] : ((modifier_pp(A,in,B)) &
((modifier_adv(A,patiently,pos)) &
((predicate1(A,wait,'John')) &
(kitchen(B))))))).
003339 John patiently in a kitchen waits .
fof(f1, axiom, (
? [A,B] : ((modifier_adv(A,patiently,pos)) &
((modifier_pp(A,in,B)) &
((predicate1(A,wait,'John')) &
(kitchen(B))))))).
003340 John in a kitchen patiently waits .
fof(f1, axiom, (
? [A,B] : ((modifier_pp(A,in,B)) &
((modifier_adv(A,patiently,pos)) &
((predicate1(A,wait,'John')) &
(kitchen(B))))))).
003341 John waits in a kitchen patiently .
fof(f1, axiom, (
? [A,B] : ((modifier_pp(A,in,B)) &
((modifier_adv(A,patiently,pos)) &
((predicate1(A,wait,'John')) &
(kitchen(B))))))).
003342 John waits patiently in a kitchen .
fof(f1, axiom, (
? [A,B] : ((modifier_adv(A,patiently,pos)) &
((modifier_pp(A,in,B)) &
((predicate1(A,wait,'John')) &
(kitchen(B))))))).
003343 John patiently in a kitchen wants to wait.
ERROR	DRS condition not supported: :	tptp/4	_:drs([A],[predicate(A,wait,named(John))-1/8])
003344 John in a kitchen patiently wants to wait.
ERROR	DRS condition not supported: :	tptp/4	_:drs([A],[predicate(A,wait,named(John))-1/8])
003345 John wants in a kitchen patiently to wait.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003346 John wants patiently in a kitchen to wait.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003347 John in a kitchen patiently wants that he waits.
ERROR	DRS condition not supported: :	tptp/4	_:drs([A],[predicate(A,wait,named(John))-1/9])
003348 John patiently in a kitchen wants that he waits.
ERROR	DRS condition not supported: :	tptp/4	_:drs([A],[predicate(A,wait,named(John))-1/9])
003349 John wants patiently in a kitchen that he waits.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003350 John wants patiently that he waits.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003351 There is a dog. A cat sees what?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,what)
003352 There is a dog and a cat sees what?
ERROR	DRS is empty	apply_converter/2	drs([],[])
003353 Whose child is Mary and is nothing but Mary?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,what)
003354 Who sleeps? John waits.
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,who)
003355 John may wait.
ERROR	DRS condition not supported: may	tptp/4	may(drs([A],[predicate(A,wait,named(John))-1/3]))
003356 John may not sleep.
ERROR	DRS condition not supported: may	tptp/4	may(drs([A],[predicate(A,sleep,named(John))-1/4]))
003357 John may be rich.
ERROR	DRS condition not supported: may	tptp/4	may(drs([A,B],[property(A,rich,pos)-1/4,predicate(B,be,named(John),A)-1/2]))
003358 John may not be important.
ERROR	DRS condition not supported: may	tptp/4	may(drs([A,B],[property(A,important,pos)-1/5,predicate(B,be,named(John),A)-1/2]))
003359 If a young child has a fever then the doctor may treat the child.
ERROR	DRS condition not supported: may	tptp/4	may(drs([A],[predicate(A,treat,_,_)-1/12]))
003360 If Socrates is a man and every man is mortal then Socrates is mortal.
fof(f1, axiom, (
! [A] : (((man(A)) &
(('Socrates'=A) &
(! [B] : ((man(B))
=> (? [C] : ((property1(C,mortal,pos)) &
(B=C)))))))
=> (? [D] : ((property1(D,mortal,pos)) &
('Socrates'=D)))))).
003361 JJ1 waits. JJ2 waits. She sleeps. He eats.
fof(f1, axiom, (
? [A] : (predicate1(A,wait,'JJ1')))).

fof(f2, axiom, (
? [A] : (predicate1(A,wait,'JJ2')))).

fof(f3, axiom, (
? [A] : (predicate1(A,sleep,'JJ2')))).

fof(f4, axiom, (
? [A] : (predicate1(A,eat,'JJ1')))).
003362 If Iokaste makes Oedipus, and Iokaste makes Polyneikes, and Oedipus makes Polyneikes, and Polyneikes makes Thersandros and Oedipus is a patricide, and Thersandros is not a patricide then Iokaste makes a patricide that makes somebody who is not a patricide.
fof(f1, axiom, (
! [A,B,C,D,E] : (((predicate2(A,make,'Iokaste','Oedipus')) &
((predicate2(B,make,'Iokaste','Polyneikes')) &
((predicate2(C,make,'Oedipus','Polyneikes')) &
((predicate2(D,make,'Polyneikes','Thersandros')) &
((patricide(E)) &
(('Oedipus'=E) &
(~(? [F] : ((patricide(F)) &
('Thersandros'=F))))))))))
=> (? [G,H,I,J] : ((patricide(G)) &
(($true) &
((~(? [K] : ((patricide(K)) &
(H=K)))) &
((predicate2(I,make,G,H)) &
(predicate2(J,make,'Iokaste',G)))))))))).
003363 If Iokaste makes Oedipus, and Iokaste makes Polyneikes, and Oedipus makes Polyneikes, and Polyneikes makes Thersandros and Oedipus is a patricide, and Thersandros is not a patricide, and everybody that makes a patricide that makes somebody who is not a patricide is an answer then Iokaste is an answer.
fof(f1, axiom, (
! [A,B,C,D,E] : (((predicate2(A,make,'Iokaste','Oedipus')) &
((predicate2(B,make,'Iokaste','Polyneikes')) &
((predicate2(C,make,'Oedipus','Polyneikes')) &
((predicate2(D,make,'Polyneikes','Thersandros')) &
((patricide(E)) &
(('Oedipus'=E) &
((~(? [F] : ((patricide(F)) &
('Thersandros'=F)))) &
(! [G,H,I,J,K] : ((($true) &
((patricide(H)) &
(($true) &
((~(? [L] : ((patricide(L)) &
(I=L)))) &
((predicate2(J,make,H,I)) &
(predicate2(K,make,G,H)))))))
=> (? [M] : ((answer(M)) &
(G=M))))))))))))
=> (? [N] : ((answer(N)) &
('Iokaste'=N)))))).
003364 "a" & "a" makes "aa".
ERROR	DRS operator '&' not supported	arg_to_tptp/2	expr(&,string(a),string(a))
003365 All men sleep. They are tired.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003366 John, sell his own car!
ERROR	DRS is empty	apply_converter/2	drs([],[])
003367 John, buy a dog that likes him!
ERROR	DRS is empty	apply_converter/2	drs([],[])
003368 John hits himself.
fof(f1, axiom, (
? [A] : (predicate2(A,hit,'John','John')))).
003369 John hits yourself.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003370 John and Mary, buy a dog!
ERROR	DRS condition not supported: command	tptp/4	command(drs([B,C,A],[has_part(A,named(John))-1/,object(B,dog,countable,na,eq,1)-1/7,predicate(C,buy,A,B)-1/5,has_part(A,named(Mary))-1/,object(A,na,countable,na,eq,2)-1/]))
003371 John and Mary, hit yourselves!
ERROR	DRS condition not supported: command	tptp/4	command(drs([B,A],[has_part(A,named(John))-1/,predicate(B,hit,A,A)-1/5,has_part(A,named(Mary))-1/,object(A,na,countable,na,eq,2)-1/]))
003372 John and Mary, hit yourself!
ERROR	DRS is empty	apply_converter/2	drs([],[])
003373 John and Mary hit yourselves.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003374 John and Mary hit themselves.
fof(f1, axiom, (
? [A,B] : ((object(A,na,countable,na,eq,2)) &
((has_part(A,'Mary')) &
((predicate2(B,hit,A,A)) &
(has_part(A,'John'))))))).
003375 John sells his own car.
fof(f1, axiom, (
? [A,B] : ((predicate2(A,sell,'John',B)) &
((car(B)) &
(relation(B,of,'John')))))).
003376 John sells your own car.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003377 You, buy a car!
ERROR	DRS is empty	apply_converter/2	drs([],[])
003378 John, you wait!
ERROR	DRS is empty	apply_converter/2	drs([],[])
003379 John and Mary, sell your own car!
ERROR	DRS condition not supported: command	tptp/4	command(drs([B,C,A],[has_part(A,named(John))-1/,relation(B,of,A)-1/6,object(B,car,countable,na,eq,1)-1/8,predicate(C,sell,A,B)-1/5,has_part(A,named(Mary))-1/,object(A,na,countable,na,eq,2)-1/]))
003380 John and Mary, buy a dog that likes you!
ERROR	DRS condition not supported: command	tptp/4	command(drs([B,C,D,A],[has_part(A,named(John))-1/,object(B,dog,countable,na,eq,1)-1/7,predicate(C,like,B,A)-1/9,predicate(D,buy,A,B)-1/5,has_part(A,named(Mary))-1/,object(A,na,countable,na,eq,2)-1/]))
003381 John and Mary, buy a dog that is owned by Bill and that likes you!
ERROR	DRS condition not supported: command	tptp/4	command(drs([B,C,D,E,A],[has_part(A,named(John))-1/,object(B,dog,countable,na,eq,1)-1/7,predicate(C,own,named(Bill),B)-1/10,predicate(D,like,B,A)-1/15,predicate(E,buy,A,B)-1/5,has_part(A,named(Mary))-1/,object(A,na,countable,na,eq,2)-1/]))
003382 A man, hit himself!
ERROR	DRS is empty	apply_converter/2	drs([],[])
003383 A man, hit yourself!
ERROR	DRS condition not supported: command	tptp/4	command(drs([A,B],[object(A,man,countable,na,eq,1)-1/2,predicate(B,hit,A,A)-1/4]))
003384 A man, hit yourselves!
ERROR	DRS is empty	apply_converter/2	drs([],[])
003385 A man, sell your own car!
ERROR	DRS condition not supported: command	tptp/4	command(drs([A,B,C],[object(A,man,countable,na,eq,1)-1/2,relation(B,of,A)-1/5,object(B,car,countable,na,eq,1)-1/7,predicate(C,sell,A,B)-1/4]))
003386 A man, sell his own car!
ERROR	DRS is empty	apply_converter/2	drs([],[])
003387 A man, buy a dog that likes you!
ERROR	DRS condition not supported: command	tptp/4	command(drs([A,B,C,D],[object(A,man,countable,na,eq,1)-1/2,object(B,dog,countable,na,eq,1)-1/6,predicate(C,like,B,A)-1/8,predicate(D,buy,A,B)-1/4]))
003388 A man, buy a dog that likes him!
ERROR	DRS is empty	apply_converter/2	drs([],[])
003389 A man, buy a dog that is owned by Bill and that likes him!
ERROR	DRS condition not supported: command	tptp/4	command(drs([A,B,C,D,E],[object(A,man,countable,na,eq,1)-1/2,object(B,dog,countable,na,eq,1)-1/6,predicate(C,own,named(Bill),B)-1/9,predicate(D,like,B,named(Bill))-1/14,predicate(E,buy,A,B)-1/4]))
003390 A man, buy a dog that is owned by Bill and that likes you!
ERROR	DRS condition not supported: command	tptp/4	command(drs([A,B,C,D,E],[object(A,man,countable,na,eq,1)-1/2,object(B,dog,countable,na,eq,1)-1/6,predicate(C,own,named(Bill),B)-1/9,predicate(D,like,B,A)-1/14,predicate(E,buy,A,B)-1/4]))
003391 Some men, buy a dog that is owned by Bill and that likes you!
ERROR	DRS condition not supported: command	tptp/4	command(drs([A,B,C,D,E],[object(A,man,countable,na,geq,2)-1/2,object(B,dog,countable,na,eq,1)-1/6,predicate(C,own,named(Bill),B)-1/9,predicate(D,like,B,A)-1/14,predicate(E,buy,A,B)-1/4]))
003392 At least 5 men, buy a dog that is owned by Bill and that likes you!
ERROR	DRS condition not supported: command	tptp/4	command(drs([A,B,C,D,E],[object(A,man,countable,na,geq,5)-1/4,object(B,dog,countable,na,eq,1)-1/8,predicate(C,own,named(Bill),B)-1/11,predicate(D,like,B,A)-1/16,predicate(E,buy,A,B)-1/6]))
003393 John and you, wait!
ERROR	DRS is empty	apply_converter/2	drs([],[])
003394 John, trust a woman and yourself!
ERROR	DRS condition not supported: command	tptp/4	command(drs([A,C,B],[object(A,woman,countable,na,eq,1)-1/5,has_part(B,A)-1/,predicate(C,trust,named(John),B)-1/3,has_part(B,named(John))-1/,object(B,na,countable,na,eq,2)-1/]))
003395 All men see a dog that likes them.
fof(f1, axiom, (
! [A] : ((man(A))
=> (? [B,C,D] : ((dog(B)) &
((predicate2(C,like,B,A)) &
(predicate2(D,see,A,B)))))))).
003396 All men see their own dog.
fof(f1, axiom, (
! [A] : ((man(A))
=> (? [B,C] : ((relation(B,of,A)) &
((dog(B)) &
(predicate2(C,see,A,B)))))))).
003397 All men sleep and he is tired.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003398 All men sleep and they are tired.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003399 All men sleep.
fof(f1, axiom, (
! [A] : ((man(A))
=> (? [B] : (predicate1(B,sleep,A)))))).
003400 Christmases, help yourselves!
ERROR	DRS condition not supported: command	tptp/4	command(drs([A],[predicate(A,help,named(Christmas),named(Christmas))-1/3]))
003401 John, see yourself!
ERROR	DRS condition not supported: command	tptp/4	command(drs([A],[predicate(A,see,named(John),named(John))-1/3]))
003402 John, enter your own card!
ERROR	DRS condition not supported: command	tptp/4	command(drs([A,B],[relation(A,of,named(John))-1/4,object(A,card,countable,na,eq,1)-1/6,predicate(B,enter,named(John),A)-1/3]))
003403 John, enter your own card and see yourself!
ERROR	DRS is empty	apply_converter/2	drs([],[])
003404 Every man likes who?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,who)
003405 Which man likes who?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,which)
003406 Is it true that a man does not eat or that the man does not drink?
fof(f1, conjecture, (
? [A] : (((man(A)) &
(~(? [B] : (predicate1(B,eat,A)))))
| (~(? [C] : (predicate1(C,drink,A))))))).
003407 Is it true that it is false that if there is a man X1 then the man X1 is a human?
fof(f1, conjecture, (
~(! [A] : ((man(A))
=> (? [B] : ((human(B)) &
(A=B))))))).
003408 John in the morning is rich.
fof(f1, axiom, (
? [A,B] : ((morning(A)) &
((modifier_pp(C,in,A)) &
(('John'=B) &
(property1(B,rich,pos))))))).
003409 A one-armed bandit has an hour.
fof(f1, axiom, (
? [A,B,C] : ((predicate2(A,have,B,C)) &
((hour(C)) &
((property1(B,'one-armed',pos)) &
(bandit(B))))))).
003410 John waits usually.
fof(f1, axiom, (
? [A] : ((modifier_adv(A,usually,pos)) &
(predicate1(A,wait,'John'))))).
003411 John is rich in the morning.
fof(f1, axiom, (
? [A,B] : ((morning(A)) &
((modifier_pp(C,in,A)) &
(('John'=B) &
(property1(B,rich,pos))))))).
003412 Not every card is correct.
fof(f1, axiom, (
~(! [A] : ((card(A))
=> (? [B] : ((property1(B,correct,pos)) &
(A=B))))))).
003413 No card is correct.
fof(f1, axiom, (
! [A] : ((card(A))
=> (~(? [B] : ((property1(B,correct,pos)) &
(A=B))))))).
003414 the United-Nations wait.
fof(f1, axiom, (
? [A] : (predicate1(A,wait,'United-Nations')))).
003415 No one sleeps.
fof(f1, axiom, (
! [A] : (($true)
=> (~(? [B] : (predicate1(B,sleep,A))))))).
003416 John has not at least 2 cards.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003417 John has at least 2 cards.
fof(f1, axiom, (
? [A,B] : ((predicate2(A,have,'John',B)) &
(object(B,card,countable,na,geq,2))))).
003418 John has not more than 3 cards.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003419 John has not exactly 3 cards.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003420 John has each of less than 3 cards.
ERROR	DRS condition not supported: [|]	tptp/4	[object(A,card,countable,na,less,3)-1/8,drs([B],[has_part(A,B)-1/3])=>drs([C],[predicate(C,have,named(John),B)-1/2])]
003421 John has each of exactly 3 cards.
ERROR	DRS condition not supported: [|]	tptp/4	[object(A,card,countable,na,exactly,3)-1/7,drs([B],[has_part(A,B)-1/3])=>drs([C],[predicate(C,have,named(John),B)-1/2])]
003422 3 kg of apples are heavy.
fof(f1, axiom, (
? [A,B] : ((A=B) &
((property1(B,heavy,pos)) &
(object(A,apple,countable,kg,eq,3)))))).
003423 3 kg of apples is heavy.
fof(f1, axiom, (
? [A,B] : ((A=B) &
((property1(B,heavy,pos)) &
(object(A,apple,countable,kg,eq,3)))))).
003424 X weighs 300 kg. X is heavy.
fof(f1, axiom, (
? [A,B,C] : ((A=B) &
((property1(B,heavy,pos)) &
((predicate2(C,weigh,A,int(300,kg))) &
($true)))))).
003425 John should not work.
ERROR	DRS condition not supported: should	tptp/4	should(drs([A],[predicate(A,work,named(John))-1]))
003426 John shouldn't work.
ERROR	DRS condition not supported: should	tptp/4	should(drs([A],[predicate(A,work,named(John))-1]))
003427 John may not work.
ERROR	DRS condition not supported: may	tptp/4	may(drs([A],[predicate(A,work,named(John))-1/4]))
003428 John rarely sleeps.
fof(f1, axiom, (
? [A] : ((modifier_adv(A,rarely,pos)) &
(predicate1(A,sleep,'John'))))).
003429 John never sleeps.
fof(f1, axiom, (
? [A] : ((modifier_adv(A,never,pos)) &
(predicate1(A,sleep,'John'))))).
003430 John mostly sleeps.
fof(f1, axiom, (
? [A] : ((modifier_adv(A,mostly,pos)) &
(predicate1(A,sleep,'John'))))).
003431 It is false that John sleeps.
fof(f1, axiom, (
~(? [A] : (predicate1(A,sleep,'John'))))).
003432 It is not true that John sleeps.
fof(f1, axiom, (
~(? [A] : (predicate1(A,sleep,'John'))))).
003433 It is true that John sleeps.
fof(f1, axiom, (
? [A] : (predicate1(A,sleep,'John')))).
003434 It is possible that John waits. It is not necessary that John enters a card and that he types a code. It is recommended that the surgeon operates the patient. It is not admissible that the patient takes his/her own medicine.
ERROR	DRS condition not supported: can	tptp/4	can(drs([A],[predicate(A,wait,named(John))-1/6]))
003435 John eats. It is necessary that John waits.
ERROR	DRS condition not supported: must	tptp/4	must(drs([A],[predicate(A,wait,named(John))-2/6]))
003436 John eats. It is false that John waits.
fof(f1, axiom, (
? [A] : (predicate1(A,eat,'John')))).

fof(f2, axiom, (
~(? [A] : (predicate1(A,wait,'John'))))).
003437 John eats. It is not possible that John waits.
ERROR	DRS condition not supported: can	tptp/4	can(drs([A],[predicate(A,wait,named(John))-2/7]))
003438 John, wait yourself!
ERROR	DRS condition not supported: command	tptp/4	command(drs([A],[predicate(A,wait,named(John),named(John))-1/3]))
003439 John, wait Mary! Does John wait Mary?
ERROR	DRS condition not supported: command	tptp/4	command(drs([A],[predicate(A,wait,named(John),named(Mary))-1/3]))
003440 John is in every park.
fof(f1, axiom, (
! [A] : ((park(A))
=> (? [B] : ((predicate1(B,be,'John')) &
(modifier_pp(B,in,A))))))).
003441 John is in every park in every morning.
fof(f1, axiom, (
! [A] : ((park(A))
=> (! [B] : ((morning(B))
=> (? [C] : ((predicate1(C,be,'John')) &
((modifier_pp(C,in,B)) &
(modifier_pp(C,in,A)))))))))).
003442 John is in no park.
fof(f1, axiom, (
! [A] : ((park(A))
=> (~(? [B] : ((predicate1(B,be,'John')) &
(modifier_pp(B,in,A)))))))).
003443 XJohn waits. It is happy.
fof(f1, axiom, (
? [A] : (predicate1(A,wait,'XJohn')))).

fof(f2, axiom, (
? [A] : (('XJohn'=A) &
(property1(A,happy,pos))))).
003444 XJohn waits. He is happy.
fof(f1, axiom, (
? [A] : (predicate1(A,wait,'XJohn')))).

fof(f2, axiom, (
? [A] : (('XJohn'=A) &
(property1(A,happy,pos))))).
003445 XJohn waits. She is happy.
fof(f1, axiom, (
? [A] : (predicate1(A,wait,'XJohn')))).

fof(f2, axiom, (
? [A] : (('XJohn'=A) &
(property1(A,happy,pos))))).
003446 XJohn sees herself.
fof(f1, axiom, (
? [A] : (predicate2(A,see,'XJohn','XJohn')))).
003447 Mary waits. XJohn waits. Bill sees her.
fof(f1, axiom, (
? [A] : (predicate1(A,wait,'Mary')))).

fof(f2, axiom, (
? [A] : (predicate1(A,wait,'XJohn')))).

fof(f3, axiom, (
? [A] : (predicate2(A,see,'Bill','XJohn')))).
003448 Mary waits. XJohn waits. He waits. Bill sees her.
fof(f1, axiom, (
? [A] : (predicate1(A,wait,'Mary')))).

fof(f2, axiom, (
? [A] : (predicate1(A,wait,'XJohn')))).

fof(f3, axiom, (
? [A] : (predicate1(A,wait,'XJohn')))).

fof(f4, axiom, (
? [A] : (predicate2(A,see,'Bill','Mary')))).
003449 A man manually enters a card.
fof(f1, axiom, (
? [A,B,C] : ((modifier_adv(A,manually,pos)) &
((predicate2(A,enter,B,C)) &
((card(C)) &
(man(B))))))).
003450 A man manually enters a card usually.
fof(f1, axiom, (
? [A,B,C] : ((modifier_adv(A,usually,pos)) &
((modifier_adv(A,manually,pos)) &
((predicate2(A,enter,B,C)) &
((card(C)) &
(man(B)))))))).
003451 A man manually in a bank enters a card usually in a morning.
fof(f1, axiom, (
? [A,B,C,D,E] : ((modifier_adv(A,usually,pos)) &
((modifier_pp(A,in,B)) &
((modifier_adv(A,manually,pos)) &
((modifier_pp(A,in,C)) &
((predicate2(A,enter,D,E)) &
((card(E)) &
((man(D)) &
((bank(C)) &
(morning(B)))))))))))).
003452 A man in a morning manually and usually in a bank enters a card.
fof(f1, axiom, (
? [A,B,C,D,E] : ((modifier_pp(A,in,B)) &
((modifier_adv(A,manually,pos)) &
((modifier_adv(A,usually,pos)) &
((modifier_pp(A,in,C)) &
((predicate2(A,enter,D,E)) &
((card(E)) &
((man(D)) &
((bank(C)) &
(morning(B)))))))))))).
003453 A man in a morning manually usually in a bank enters a card.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003454 A man usually is rich.
fof(f1, axiom, (
? [A,B] : ((modifier_adv(C,usually,pos)) &
((A=B) &
((property1(B,rich,pos)) &
(man(A))))))).
003455 A man usually is rich fast.
fof(f1, axiom, (
? [A,B] : ((modifier_adv(C,fast,pos)) &
((modifier_adv(C,usually,pos)) &
((A=B) &
((property1(B,rich,pos)) &
(man(A)))))))).
003456 A man usually in a morning is rich fast.
fof(f1, axiom, (
? [A,B,C] : ((modifier_adv(D,fast,pos)) &
((modifier_adv(D,usually,pos)) &
((modifier_pp(D,in,A)) &
((B=C) &
((property1(C,rich,pos)) &
((man(B)) &
(morning(A)))))))))).
003457 A man usually is in a park.
fof(f1, axiom, (
? [A,B,C] : ((modifier_adv(A,usually,pos)) &
((modifier_pp(A,in,B)) &
((predicate1(A,be,C)) &
((man(C)) &
(park(B)))))))).
003458 A man usually is in a park fast.
fof(f1, axiom, (
? [A,B,C] : ((modifier_adv(A,fast,pos)) &
((modifier_adv(A,usually,pos)) &
((modifier_pp(A,in,B)) &
((predicate1(A,be,C)) &
((man(C)) &
(park(B))))))))).
003459 A man usually is fast in a park.
fof(f1, axiom, (
? [A,B,C] : ((modifier_pp(D,in,A)) &
((modifier_adv(D,usually,pos)) &
((B=C) &
((property1(C,fast,pos)) &
((man(B)) &
(park(A))))))))).
003460 John in every park usually for no reason waits.
fof(f1, axiom, (
! [A] : ((park(A))
=> (! [B] : ((reason(B))
=> (~(? [C] : ((predicate1(C,wait,'John')) &
((modifier_pp(C,for,B)) &
((modifier_adv(C,usually,pos)) &
(modifier_pp(C,in,A)))))))))))).
003461 John in no park usually for every reason waits.
fof(f1, axiom, (
! [A] : ((park(A))
=> (~(! [B] : ((reason(B))
=> (? [C] : ((predicate1(C,wait,'John')) &
((modifier_pp(C,for,B)) &
((modifier_adv(C,usually,pos)) &
(modifier_pp(C,in,A)))))))))))).
003462 John in every park usually for no reason waits in every morning.
fof(f1, axiom, (
! [A] : ((park(A))
=> (! [B] : ((reason(B))
=> (~(! [C] : ((morning(C))
=> (? [D] : ((predicate1(D,wait,'John')) &
((modifier_pp(D,for,B)) &
((modifier_adv(D,usually,pos)) &
((modifier_pp(D,in,A)) &
(modifier_pp(D,in,C))))))))))))))).
003463 John in every park usually for no reason waits in every morning at every condition.
fof(f1, axiom, (
! [A] : ((park(A))
=> (! [B] : ((reason(B))
=> (~(! [C] : ((morning(C))
=> (! [D] : ((condition(D))
=> (? [E] : ((predicate1(E,wait,'John')) &
((modifier_pp(E,for,B)) &
((modifier_adv(E,usually,pos)) &
((modifier_pp(E,in,A)) &
((modifier_pp(E,at,D)) &
(modifier_pp(E,in,C)))))))))))))))))).
003464 John is in a park in a morning.
fof(f1, axiom, (
? [A,B,C] : ((modifier_pp(A,in,B)) &
((modifier_pp(A,in,C)) &
((predicate1(A,be,'John')) &
((park(C)) &
(morning(B)))))))).
003465 John usually is in a park in a morning .
fof(f1, axiom, (
? [A,B,C] : ((modifier_pp(A,in,B)) &
((modifier_adv(A,usually,pos)) &
((modifier_pp(A,in,C)) &
((predicate1(A,be,'John')) &
((park(C)) &
(morning(B))))))))).
003466 John is rich usually in a morning .
fof(f1, axiom, (
? [A,B] : ((modifier_adv(C,usually,pos)) &
((modifier_pp(C,in,A)) &
(('John'=B) &
((property1(B,rich,pos)) &
(morning(A)))))))).
003467 John is in a park in a morning usually.
fof(f1, axiom, (
? [A,B,C] : ((modifier_pp(A,in,B)) &
((modifier_adv(A,usually,pos)) &
((modifier_pp(A,in,C)) &
((predicate1(A,be,'John')) &
((park(C)) &
(morning(B))))))))).
003468 John is a manager usually in a morning .
fof(f1, axiom, (
? [A,B] : ((modifier_adv(C,usually,pos)) &
((modifier_pp(C,in,A)) &
(('John'=B) &
((manager(B)) &
(morning(A)))))))).
003469 John usually is a manager in a morning .
fof(f1, axiom, (
? [A,B] : ((modifier_pp(C,in,A)) &
((modifier_adv(C,usually,pos)) &
(('John'=B) &
((manager(B)) &
(morning(A)))))))).
003470 John often and usually is a manager in a morning .
fof(f1, axiom, (
? [A,B] : ((modifier_pp(C,in,A)) &
((modifier_adv(C,often,pos)) &
((modifier_adv(C,usually,pos)) &
(('John'=B) &
((manager(B)) &
(morning(A))))))))).
003471 John often and usually is a manager in a morning early.
fof(f1, axiom, (
? [A,B] : ((modifier_pp(C,in,A)) &
((modifier_adv(C,early,pos)) &
((modifier_adv(C,often,pos)) &
((modifier_adv(C,usually,pos)) &
(('John'=B) &
((manager(B)) &
(morning(A)))))))))).
003472 John in the beginning in a morning early and often and usually is a manager.
fof(f1, axiom, (
? [A,B,C] : ((beginning(A)) &
((modifier_pp(D,in,A)) &
((modifier_pp(D,in,B)) &
((modifier_adv(D,early,pos)) &
((modifier_adv(D,often,pos)) &
((modifier_adv(D,usually,pos)) &
(('John'=C) &
((manager(C)) &
(morning(B)))))))))))).
003473 John in a morning early and often and usually is a manager.
fof(f1, axiom, (
? [A,B] : ((modifier_pp(C,in,A)) &
((modifier_adv(C,early,pos)) &
((modifier_adv(C,often,pos)) &
((modifier_adv(C,usually,pos)) &
(('John'=B) &
((manager(B)) &
(morning(A)))))))))).
003474 John is rich in a morning usually.
fof(f1, axiom, (
? [A,B] : ((modifier_pp(C,in,A)) &
((modifier_adv(C,usually,pos)) &
(('John'=B) &
((property1(B,rich,pos)) &
(morning(A)))))))).
003475 John usually is a manager in every morning .
fof(f1, axiom, (
? [A] : ((! [B] : ((morning(B))
=> ((modifier_adv(C,usually,pos)) &
(('John'=A) &
(modifier_pp(C,in,B)))))) &
(manager(A))))).
003476 John is in each of 3 parks.
fof(f1, axiom, (
? [A] : ((! [B] : ((has_part(A,B))
=> (? [C] : ((predicate1(C,be,'John')) &
(modifier_pp(C,in,B)))))) &
(object(A,park,countable,na,eq,3))))).
003477 John is happy in each of 3 parks.
fof(f1, axiom, (
? [A] : ((! [B] : ((has_part(A,B))
=> (? [C] : ((property1(C,happy,pos)) &
(('John'=C) &
(modifier_pp(D,in,B))))))) &
(object(A,park,countable,na,eq,3))))).
003478 John is happy in each of 3 parks in every morning.
fof(f1, axiom, (
? [A] : ((! [B] : ((has_part(A,B))
=> (! [C] : ((morning(C))
=> (? [D] : ((property1(D,happy,pos)) &
(('John'=D) &
((modifier_pp(E,in,C)) &
(modifier_pp(E,in,B)))))))))) &
(object(A,park,countable,na,eq,3))))).
003479 John is happy in every morning in each of 3 parks.
fof(f1, axiom, (
! [A] : ((morning(A))
=> (? [B] : ((object(B,park,countable,na,eq,3)) &
(! [C] : ((has_part(B,C))
=> (? [D] : ((property1(D,happy,pos)) &
(('John'=D) &
((modifier_pp(E,in,C)) &
(modifier_pp(E,in,A))))))))))))).
003480 XYZ is tired. He sleeps.
fof(f1, axiom, (
? [A] : (('XYZ'=A) &
(property1(A,tired,pos))))).

fof(f2, axiom, (
? [A] : (predicate1(A,sleep,'XYZ')))).
003481 XYZ is tired. He sleeps. She waits.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003482 XYZ is tired. she sleeps. She waits.
fof(f1, axiom, (
? [A] : (('XYZ'=A) &
(property1(A,tired,pos))))).

fof(f2, axiom, (
? [A] : (predicate1(A,sleep,'XYZ')))).

fof(f3, axiom, (
? [A] : (predicate1(A,wait,'XYZ')))).
003483 XYZ is tired. she sleeps. It waits.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003484 XYZ is tired. she sleeps. Its dog waits.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003485 A message is from someone from who John awaits a delivery usually.
fof(f1, axiom, (
? [A,B,C,D,E] : ((modifier_pp(A,from,B)) &
((predicate1(A,be,C)) &
((message(C)) &
((modifier_pp(D,from,B)) &
((modifier_adv(D,usually,pos)) &
((predicate2(D,await,'John',E)) &
((delivery(E)) &
($true)))))))))).
003486 A message is from someone from who John awaits a delivery usually manually.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003487 A message is from someone from who John awaits a delivery usually and manually.
fof(f1, axiom, (
? [A,B,C,D,E] : ((modifier_pp(A,from,B)) &
((predicate1(A,be,C)) &
((message(C)) &
((modifier_pp(D,from,B)) &
((modifier_adv(D,usually,pos)) &
((modifier_adv(D,manually,pos)) &
((predicate2(D,await,'John',E)) &
((delivery(E)) &
($true))))))))))).
003488 Every man is in every park in every morning for no reason.
fof(f1, axiom, (
! [A] : ((man(A))
=> (! [B] : ((park(B))
=> (! [C] : ((morning(C))
=> (! [D] : ((reason(D))
=> (~(? [E] : ((predicate1(E,be,A)) &
((modifier_pp(E,for,D)) &
((modifier_pp(E,in,C)) &
(modifier_pp(E,in,B)))))))))))))))).
003489 Every man is fast in every park.
fof(f1, axiom, (
! [A] : ((man(A))
=> (! [B] : ((park(B))
=> (? [C] : ((property1(C,fast,pos)) &
((A=C) &
(modifier_pp(D,in,B)))))))))).
003490 Every man is who in every park?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,who)
003491 Every man is where in the morning?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,where)
003492 Every man is in the morning where?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,where)
003493 Every man is rich in the morning where?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,where)
003494 John in every park is in every morning.
fof(f1, axiom, (
! [A] : ((park(A))
=> (! [B] : ((morning(B))
=> (? [C] : ((predicate1(C,be,'John')) &
((modifier_pp(C,in,A)) &
(modifier_pp(C,in,B)))))))))).
003495 John in every park in every morning is in every bank.
fof(f1, axiom, (
! [A] : ((park(A))
=> (! [B] : ((morning(B))
=> (! [C] : ((bank(C))
=> (? [D] : ((predicate1(D,be,'John')) &
((modifier_pp(D,in,B)) &
((modifier_pp(D,in,A)) &
(modifier_pp(D,in,C))))))))))))).
003496 John in every park in every morning is in every bank at every time.
fof(f1, axiom, (
! [A] : ((park(A))
=> (! [B] : ((morning(B))
=> (! [C] : ((bank(C))
=> (! [D] : ((time(D))
=> (? [E] : ((predicate1(E,be,'John')) &
((modifier_pp(E,in,B)) &
((modifier_pp(E,in,A)) &
((modifier_pp(E,at,D)) &
(modifier_pp(E,in,C)))))))))))))))).
003497 John likes Mary.

Mary likes John.
fof(f1, axiom, (
? [A] : (predicate2(A,like,'John','Mary')))).

fof(f2, axiom, (
? [A] : (predicate2(A,like,'Mary','John')))).
003498 John likes Mary.
 
Mary likes John.
fof(f1, axiom, (
? [A] : (predicate2(A,like,'John','Mary')))).

fof(f2, axiom, (
? [A] : (predicate2(A,like,'Mary','John')))).
003499 #This is a comment.
There is a comment.
fof(f1, axiom, (
? [A] : (comment(A)))).
003500 #This is a comment.

There is a paragraph.

There is a paragraph.
fof(f1, axiom, (
? [A] : (paragraph(A)))).

fof(f2, axiom, (
? [A] : (paragraph(A)))).
003501 There is a man X.
There is a woman X.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003502 There is a man X.

There is a woman X.
fof(f1, axiom, (
? [A] : (man(A)))).

fof(f2, axiom, (
? [A] : (woman(A)))).
003503 There is a man X.
 
There is a woman X.
fof(f1, axiom, (
? [A] : (man(A)))).

fof(f2, axiom, (
? [A] : (woman(A)))).
003504 There is a man X.
# comment
There is a woman X.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003505 There is a man X.
/*


*/
There is a woman X.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003506 There is a man X.
/* comment */
There is a woman X.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003507 John sees a man.

The man waits.
fof(f1, axiom, (
? [A,B] : ((predicate2(A,see,'John',B)) &
(man(B))))).

fof(f2, axiom, (
? [A,B] : ((man(A)) &
(predicate1(B,wait,A))))).
003508 John sees a man.
# comment.
The man waits.
fof(f1, axiom, (
? [A,B,C] : ((predicate1(A,wait,B)) &
((predicate2(C,see,'John',B)) &
(man(B)))))).
003509 X is Y.
Y is X.
fof(f1, axiom, (
? [A,B] : ((A=B) &
((B=A) &
(($true) &
($true)))))).
003510 X is Y.

Y is X.
fof(f1, axiom, (
? [A,B] : ((A=B) &
(($true) &
($true))))).

fof(f2, axiom, (
? [A,B] : ((A=B) &
(($true) &
($true))))).
003511 John waits.

John waits.

John waits.

John waits.

John waits.

John waits.

John waits.

John waits.

John waits.

John waits.
fof(f1, axiom, (
? [A] : (predicate1(A,wait,'John')))).

fof(f2, axiom, (
? [A] : (predicate1(A,wait,'John')))).

fof(f3, axiom, (
? [A] : (predicate1(A,wait,'John')))).

fof(f4, axiom, (
? [A] : (predicate1(A,wait,'John')))).

fof(f5, axiom, (
? [A] : (predicate1(A,wait,'John')))).

fof(f6, axiom, (
? [A] : (predicate1(A,wait,'John')))).

fof(f7, axiom, (
? [A] : (predicate1(A,wait,'John')))).

fof(f8, axiom, (
? [A] : (predicate1(A,wait,'John')))).

fof(f9, axiom, (
? [A] : (predicate1(A,wait,'John')))).

fof(f10, axiom, (
? [A] : (predicate1(A,wait,'John')))).
003512 There is a man X. There is a woman X.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003513 There is a man X. 
There is a woman X.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003514 There is a man X. 

There is a woman X.
fof(f1, axiom, (
? [A] : (man(A)))).

fof(f2, axiom, (
? [A] : (woman(A)))).
003515 John is a man.

# comment

Mary is a woman.
fof(f1, axiom, (
? [A] : (('John'=A) &
(man(A))))).

fof(f2, axiom, (
? [A] : (('Mary'=A) &
(woman(A))))).
003516 John is a man.
# comment

Mary is a woman.
fof(f1, axiom, (
? [A] : (('John'=A) &
(man(A))))).

fof(f2, axiom, (
? [A] : (('Mary'=A) &
(woman(A))))).
003517 John is a man.

# comment
Mary is a woman.
fof(f1, axiom, (
? [A] : (('John'=A) &
(man(A))))).

fof(f2, axiom, (
? [A] : (('Mary'=A) &
(woman(A))))).
003518 John is a man.

Mary is a woman. Bill knows the woman.

The woman waits.
fof(f1, axiom, (
? [A] : (('John'=A) &
(man(A))))).

fof(f2, axiom, (
? [A,B] : ((predicate2(A,know,'Bill',B)) &
(('Mary'=B) &
(woman(B)))))).

fof(f3, axiom, (
? [A,B] : ((woman(A)) &
(predicate1(B,wait,A))))).
003519 John sees a man. A customer is him.
fof(f1, axiom, (
? [A,B,C] : ((A=B) &
((customer(A)) &
((predicate2(C,see,'John',B)) &
(man(B))))))).
003520 John is where and when?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,when)
003521 John is in Paris when and where?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,where)
003522 Every man sleeps where and when and how?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,how)
003523 John sleeps where and where?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,where)
003524 -007 likes -002.200.
fof(f1, axiom, (
? [A] : (predicate2(A,like,-7,-2.2)))).
003525 John likes (Mary + 1).
fof(f1, axiom, (
? [A] : (predicate2(A,like,'John','Mary'+1)))).
003526 John likes 1 + Mary.
fof(f1, axiom, (
? [A] : (predicate2(A,like,'John',1+'Mary')))).
003527 John likes Mary + 1.
fof(f1, axiom, (
? [A] : (predicate2(A,like,'John','Mary'+1)))).
003528 There is a car that John buys for himself.
fof(f1, axiom, (
? [A,B] : ((modifier_pp(A,for,'John')) &
((predicate2(A,buy,'John',B)) &
(car(B)))))).
003529 Mary is as young as who?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,who)
003530 Mary asks everybody X for X.
fof(f1, axiom, (
! [A] : (($true)
=> (? [B] : ((predicate2(B,ask,'Mary',A)) &
(modifier_pp(B,for,A))))))).
003531 There is a car that John buys for herself.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003532 There is a car that John buys for him.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003533 John sees every woman in every park.
fof(f1, axiom, (
! [A] : ((woman(A))
=> (! [B] : ((park(B))
=> (? [C] : ((predicate2(C,see,'John',A)) &
(modifier_pp(C,in,B))))))))).
003534 John is no hero at every time.
fof(f1, axiom, (
! [A] : ((hero(A))
=> (~(! [B] : ((time(B))
=> (('John'=A) &
(modifier_pp(C,at,B))))))))).
003535 There is X. X is fast. John shows X to a man.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate3(A,show,'John',B,C)) &
((man(C)) &
((B=D) &
((property1(D,fast,pos)) &
($true))))))).
003536 There is X. X is fast. A man is shown X by John.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate3(A,show,'John',B,C)) &
((man(C)) &
((B=D) &
((property1(D,fast,pos)) &
($true))))))).
003537 There is X. X is fast. X is shown to a man by John.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate3(A,show,'John',B,C)) &
((man(C)) &
((B=D) &
((property1(D,fast,pos)) &
($true))))))).
003538 There is something X1.
X1 is fast.
John shows X1 a man.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate3(A,show,'John',B,C)) &
((man(B)) &
((C=D) &
((property1(D,fast,pos)) &
($true))))))).
003539 At most 2 men give at most 4 apples to at most 3 women.
ERROR	DRS condition not supported: [|]	tptp/4	[object(A,man,countable,na,leq,2)-1/4,[object(B,apple,countable,na,leq,4)-1/9,[object(C,woman,countable,na,leq,3)-1/14,predicate(_,give,A,B,C)-1/5]]]
003540 Mary asks John who asks who.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003541 Mary asks John who asks who?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,who)
003542 For every woman the woman does not ask her.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003543 For every woman the woman asks her.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003544 Mary who sees Bill who does not see her asks X.
fof(f1, axiom, (
? [A] : (predicate2(A,see,'Mary','Bill')))).

fof(f2, axiom, (
~(? [A] : (predicate2(A,see,'Bill','Mary'))))).

fof(f3, axiom, (
? [A,B] : ((predicate2(A,ask,'Mary',B)) &
($true)))).
003545 Mary who X asks does not ask her .
fof(f1, axiom, (
? [A,B] : ((~(? [C] : (predicate2(C,ask,'Mary',B)))) &
((predicate2(A,ask,B,'Mary')) &
($true))))).
003546 Mary who asks X is not her .
fof(f1, axiom, (
? [A,B] : ((~('Mary'=B)) &
((predicate2(A,ask,'Mary',B)) &
($true))))).
003547 Mary who asks everybody X asks X .
fof(f1, axiom, (
! [A] : (($true)
=> (? [B] : (predicate2(B,ask,'Mary',A)))))).

fof(f2, axiom, (
? [A,B] : ((predicate2(A,ask,'Mary',B)) &
($true)))).
003548 Mary who does not ask X is X .
fof(f1, axiom, (
~(? [A,B] : (($true) &
(predicate2(B,ask,'Mary',A)))))).

fof(f2, axiom, (
? [A] : (('Mary'=A) &
($true)))).
003549 Mary who everybody X asks asks X .
fof(f1, axiom, (
! [A] : (($true)
=> (? [B] : (predicate2(B,ask,A,'Mary')))))).

fof(f2, axiom, (
? [A,B] : ((predicate2(A,ask,'Mary',B)) &
($true)))).
003550 Mary who is X is not her .
fof(f1, axiom, (
? [A] : ((~('Mary'=A)) &
(('Mary'=A) &
($true))))).
003551 Mary who is not X asks X .
fof(f1, axiom, (
~(? [A] : (($true) &
('Mary'=A))))).

fof(f2, axiom, (
? [A,B] : ((predicate2(A,ask,'Mary',B)) &
($true)))).
003552 Mary who which women ask for her waits ?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,which)
003553 a man who a woman asks for him waits.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate1(A,wait,B)) &
((modifier_pp(C,for,B)) &
((predicate2(C,ask,D,B)) &
((woman(D)) &
(man(B)))))))).
003554 everybody who which women ask for her waits?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,which)
003555 a woman carries the woman from who to her?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,who)
003556 exactly 1 woman who sees a man who loves her waits.
ERROR	DRS condition not supported: [|]	tptp/4	[object(B,woman,countable,na,exactly,1)-1/3,object(A,man,countable,na,eq,1)-1/7,predicate(_,love,A,B)-1/9,predicate(_,see,B,A)-1/5,predicate(_,wait,B)-1/11]
003557 exactly 1 woman asks a woman of her.
ERROR	DRS condition not supported: [|]	tptp/4	[object(B,woman,countable,na,exactly,1)-1/3,object(A,woman,countable,na,eq,1)-1/6,relation(A,of,A)-1/7,predicate(_,ask,B,A)-1/4]
003558 John sees a cat that likes the cat that smiles.
fof(f1, axiom, (
? [A,B,C,D,E] : ((predicate2(A,see,'John',B)) &
((predicate2(C,like,B,D)) &
((cat(D)) &
((predicate1(E,smile,D)) &
(cat(B)))))))).
003559 There is a cat that smiles. John sees a cat that likes the cat that smiles.
fof(f1, axiom, (
? [A,B,C,D,E] : ((predicate2(A,see,'John',B)) &
((predicate2(C,like,B,D)) &
((cat(B)) &
((predicate1(E,smile,D)) &
(cat(D)))))))).
003560 There is a cat that likes the cat that smiles.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate2(A,like,B,C)) &
((cat(C)) &
((predicate1(D,smile,C)) &
(cat(B))))))).
003561 There is a cat that smiles and that likes the cat that smiles.
fof(f1, axiom, (
? [A,B,C] : ((predicate2(A,like,B,B)) &
((predicate1(C,smile,B)) &
(cat(B)))))).
003562 There is a cat that smiles or that likes the cat that smiles.
fof(f1, axiom, (
? [A] : ((? [B] : ((predicate1(B,smile,A))
| (? [C] : (predicate2(C,like,A,A))))) &
(cat(A))))).
003563 There is a cat that smiles or that is not the cat that smiles.
fof(f1, axiom, (
? [A] : ((? [B] : ((predicate1(B,smile,A))
| (~(A=A)))) &
(cat(A))))).
003564 There is a man that likes a cat and that sees the cat that smiles.
fof(f1, axiom, (
? [A,B,C,D,E,F] : ((predicate2(A,see,B,C)) &
((cat(C)) &
((predicate1(D,smile,C)) &
((predicate2(E,like,B,F)) &
((cat(F)) &
(man(B))))))))).
003565 There is a man that likes a cat and that sees the cat.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate2(A,see,B,C)) &
((predicate2(D,like,B,C)) &
((cat(C)) &
(man(B))))))).
003566 There is a cat that likes the cat that smiles and that smiles.
fof(f1, axiom, (
? [A,B,C,D,E] : ((predicate2(A,like,B,C)) &
((cat(C)) &
((predicate1(D,smile,C)) &
((predicate1(E,smile,C)) &
(cat(B)))))))).
003568 Every dog uses to run.
ERROR	DRS condition not supported: :	tptp/4	_:drs([A],[predicate(A,run,_)-1/5])
003569 John tells that a man waits to Mary.
ERROR	DRS condition not supported: :	tptp/4	_:drs([A,B],[object(A,man,countable,na,eq,1)-1/5,predicate(B,wait,A)-1/6,modifier_pp(B,to,named(Mary))-1/7])
003570 John wants a man to wait.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003571 Every man sees a dog X that sees a cat that sees the dog that sees a rat that sees a mouse.
fof(f1, axiom, (
! [A] : ((man(A))
=> (? [B,C,D,E,F,G,H,I,J,K] : ((dog(B)) &
((cat(C)) &
((predicate2(I,see,E,F)) &
((predicate2(H,see,F,G)) &
((mouse(G)) &
((rat(F)) &
((dog(E)) &
((predicate2(D,see,C,E)) &
((predicate2(J,see,B,C)) &
(predicate2(K,see,A,B))))))))))))))).
003572 For every man the man likes himself.
fof(f1, axiom, (
! [A] : ((man(A))
=> (? [B] : (predicate2(B,like,A,A)))))).
003573 For all men he likes himself.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003574 For every man he likes himself.
fof(f1, axiom, (
! [A] : ((man(A))
=> (? [B] : (predicate2(B,like,A,A)))))).
003575 John sees the cat that likes the cat that smiles.
fof(f1, axiom, (
? [A,B,C,D,E] : ((cat(A)) &
((predicate1(B,smile,A)) &
((predicate2(C,see,'John',D)) &
((cat(D)) &
(predicate2(E,like,D,A)))))))).
003576 Every man v:giiives a cat is Mary.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003577 X is Y and X is Y and X is Y and X is Y and X is.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003578 X is Y and X is Y and X is Y and X is Y and X is Y and X is Y and X is Y and X is Y and X is.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003579 If p:String-To-Be-Parsed starts with X1 and X1 is "drs" and
X1 v:immediately-precedes X2 and X2 is "(" and
X2 v:immediately-precedes X3 and X3 is Y and
X3 v:immediately-precedes X4 and X4 is "," and
X4 v:immediately-precedes X5 and X5 is Z and
X5 v:immediately-precedes X6 and X6 is ")" and
and Y is a n:domain-definition and Z is a n:conditions-definition 
then p:String-To-Be-Parsed must be a n:drs-definition.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003580 If p:String-To-Be-Parsed starts with X1 and X1 is "drs" and
X1 v:immediately-precedes X2 and X2 is "(" and
X2 v:immediately-precedes X3 and X3 is Y and
X3 v:immediately-precedes X4 and X4 is "," and
X4 v:immediately-precedes X5 and X5 is Z and
X5 v:immediately-precedes X6 and X6 is ")" and
Y is a n:domain-definition and Z is a n:conditions-definition 
then p:String-To-Be-Parsed must be a n:drs-definition.
ERROR	DRS condition not supported: must	tptp/4	must(drs([A,B],[object(A,drs-definition,countable,na,eq,1)-1/85,predicate(B,be,named(String-To-Be-Parsed),A)-1/80]))
003581 John says "Mary \/ says \"John is lazy!\" \\".
fof(f1, axiom, (
? [A] : (predicate2(A,say,'John',string('Mary / says "John is lazy!" \\'))))).
003582 A c-comment is "a/*comment*/b".
ERROR	DRS is empty	apply_converter/2	drs([],[])
003583 A man waits. /* This is a C-comment that ends with */
fof(f1, axiom, (
? [A,B] : ((predicate1(A,wait,B)) &
(man(B))))).
003585 "\1" represents 1.
fof(f1, axiom, (
? [A] : (predicate2(A,represent,string('1'),1)))).
003586 /* ... /* ... */ Every comment ends with "*/".
fof(f1, axiom, (
! [A] : ((comment(A))
=> (? [B] : ((predicate1(B,end,A)) &
(modifier_pp(B,with,string(*/)))))))).
003587 /* ... /* ... */ John waits.
fof(f1, axiom, (
? [A] : (predicate1(A,wait,'John')))).
003588 Every dot is ".".
fof(f1, axiom, (
! [A] : ((dot(A))
=> (A=string('.'))))).
003589 1 is not 0.5. 1 is bigger.
fof(f1, axiom, (
~(1=0.5))).

fof(f2, axiom, (
? [A] : ((1=A) &
(property1(A,big,comp))))).
003590 1 is not 0.5.1 is bigger.
fof(f1, axiom, (
~(1=0.5))).

fof(f2, axiom, (
? [A] : ((1=A) &
(property1(A,big,comp))))).
003592 -0.5 = -.5.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003594 There is nothing X such that X waits.
fof(f1, axiom, (
~(? [A] : ($true)))).

fof(f2, axiom, (
? [A,B] : ((predicate1(A,wait,B)) &
($true)))).
003595 John gives something to somebody.
fof(f1, axiom, (
? [A,B,C] : ((predicate3(A,give,'John',B,C)) &
(($true) &
($true))))).
003596 Pi = 3.14. Pi is not 3.14.
fof(f1, axiom, (
'Pi'=3.14)).

fof(f2, axiom, (
~('Pi'=3.14))).
003598 Pi = 3.14.

If there is a circle C and C's radius is R and C's area is S then S = Pi * (R * R).

There is a circle C whose radius is 5. What is C's surface?
ERROR	DRS condition not supported: question	tptp/4	question(drs([A,B,C],[query(A,what)-4/1,relation(B,of,_)-4/4,object(B,surface,countable,na,eq,1)-4/6,predicate(C,be,A,B)-4/2]))
003601 There is no man such that the man waits.
fof(f1, axiom, (
~(? [A] : (man(A))))).

fof(f2, axiom, (
? [A,B] : ((predicate1(A,wait,B)) &
(man(B))))).
003602 There are some men such that the men wait.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,wait,B)) &
(object(B,man,countable,na,geq,2))))).
003603 There are no men such that the men wait.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003604 Less than 5 men drink less.
ERROR	DRS condition not supported: [|]	tptp/4	[modifier_adv(A,less,pos)-1/6,predicate(A,drink,B)-1/5,object(B,man,countable,na,less,5)-1/4]
003605 If X gives Y Z then X hands Y Z.
fof(f1, axiom, (
! [A,B,C,D] : ((($true) &
(($true) &
(($true) &
(predicate3(D,give,A,C,B)))))
=> (? [E] : (predicate3(E,hand,A,C,B)))))).
003606 For everything X if X gives Y Z then X hands Y Z.
fof(f1, axiom, (
! [A] : (($true)
=> (! [B,C,D] : ((($true) &
(($true) &
(predicate3(D,give,A,C,B))))
=> (? [E] : (predicate3(E,hand,A,C,B)))))))).
003607 John likes Mary a dog of his own friend hates a cat.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003608 John likes Mary a dog of her own friend hates a cat.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003609 John likes Mary a dog of his friend hates a cat.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003610 John likes Mary a dog of her friend hates a cat.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003611 John likes Mary a dog of its own friend hates a cat.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003612 John likes Mary a dog of its friend hates a cat.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003613 John likes Mary a dog of who hates a cat.
fof(f1, axiom, (
? [A] : (predicate2(A,like,'John','Mary')))).

fof(f2, axiom, (
? [A,B,C] : ((predicate2(A,hate,B,C)) &
((cat(C)) &
((relation(B,of,'Mary')) &
(dog(B))))))).
003614 John likes Mary a dog of a friend of who hates a cat.
fof(f1, axiom, (
? [A] : (predicate2(A,like,'John','Mary')))).

fof(f2, axiom, (
? [A,B,C,D] : ((predicate2(A,hate,B,C)) &
((cat(C)) &
((relation(B,of,D)) &
((relation(D,of,'Mary')) &
((friend(D)) &
(dog(B))))))))).
003615 John a dog of a friend of who hates a cat likes Mary.
fof(f1, axiom, (
? [A,B,C,D] : ((predicate2(A,hate,B,C)) &
((cat(C)) &
((relation(B,of,D)) &
((relation(D,of,'John')) &
((friend(D)) &
(dog(B))))))))).

fof(f2, axiom, (
? [A] : (predicate2(A,like,'John','Mary')))).
003616 John likes Mary a dog of whose friend hates a cat.
fof(f1, axiom, (
? [A] : (predicate2(A,like,'John','Mary')))).

fof(f2, axiom, (
? [A,B,C,D] : ((predicate2(A,hate,B,C)) &
((cat(C)) &
((relation(B,of,D)) &
((relation(D,of,'Mary')) &
((friend(D)) &
(dog(B))))))))).
003617 John likes Mary a dog of whose friends hates a cat.
fof(f1, axiom, (
? [A] : (predicate2(A,like,'John','Mary')))).

fof(f2, axiom, (
? [A,B,C,D] : ((predicate2(A,hate,B,C)) &
((cat(C)) &
((relation(B,of,D)) &
((relation(D,of,'Mary')) &
((object(D,friend,countable,na,geq,2)) &
(dog(B))))))))).
003618 John likes Foo a dog of which hates a cat.
fof(f1, axiom, (
? [A] : (predicate2(A,like,'John','Foo')))).

fof(f2, axiom, (
? [A,B,C] : ((predicate2(A,hate,B,C)) &
((cat(C)) &
((relation(B,of,'Foo')) &
(dog(B))))))).
003619 John likes Foo a dog of which friend hates a cat.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003620 f there is a man then it is necessary that a human is the man.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003621 A dog of who sleeps?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,who)
003622 Every period is ".".
fof(f1, axiom, (
! [A] : ((period(A))
=> (A=string('.'))))).
003623 "." and "?" and "!" are three special characters.
fof(f1, axiom, (
? [A,B] : ((object(A,na,countable,na,eq,3)) &
((has_part(A,string(!))) &
((has_part(A,string(?))) &
((A=B) &
((property1(B,special,pos)) &
((object(B,character,countable,na,eq,3)) &
(has_part(A,string('.'))))))))))).
003624 John is "\"John".
fof(f1, axiom, (
'John'=string('"John'))).
003625 `John"` is John.
fof(f1, axiom, (
'John"'='John')).
003626 John's good friend is Bill.
fof(f1, axiom, (
? [A] : ((A='Bill') &
((property1(A,good,pos)) &
((friend(A)) &
(relation(A,of,'John'))))))).
003627 A man's good friend is Bill.
fof(f1, axiom, (
? [A,B] : ((A='Bill') &
((property1(A,good,pos)) &
((friend(A)) &
((relation(A,of,B)) &
(man(B)))))))).
003628 There is a man whose good friend is Bill.
fof(f1, axiom, (
? [A,B] : ((A='Bill') &
((relation(A,of,B)) &
((property1(A,good,pos)) &
((friend(A)) &
(man(B)))))))).
003629 A string is "/* comment */".
fof(f1, axiom, (
? [A] : ((A=string('/* comment */')) &
(string(A))))).
003630 A string is "#".
fof(f1, axiom, (
? [A] : ((A=string(#)) &
(string(A))))).
003631 "#" is not "/**/".
fof(f1, axiom, (
~(string(#)=string('/**/')))).
003632 "" is /* "/**/"".
fof(f1, axiom, (
string('')=string(''))).
003633 X=X.
fof(f1, axiom, (
? [A] : ((A=A) &
($true)))).
003636 for every woman of who everybody waits.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003637 for every friend of who Mary asks a woman.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003638 For everything of X X waits.
fof(f1, axiom, (
! [A,B] : ((($true) &
(($true) &
(relation(A,of,B))))
=> (? [C] : (predicate1(C,wait,B)))))).
003641 John is everything of who?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,who)
003642 Every card the code of which is correct is valid.
fof(f1, axiom, (
! [A,B,C] : (((card(A)) &
((relation(C,of,A)) &
((code(C)) &
((property1(B,correct,pos)) &
(C=B)))))
=> (? [D] : ((property1(D,valid,pos)) &
(A=D)))))).
003643 There is a code of a card. Every card the code of which is correct is valid.
fof(f1, axiom, (
? [A,B] : ((! [C,D] : (((card(C)) &
((property1(D,correct,pos)) &
(A=D)))
=> (? [E] : ((property1(E,valid,pos)) &
(C=E))))) &
((relation(A,of,B)) &
((card(B)) &
(code(A))))))).
003644 There is a code of a card. If the code of a card is correct then the card is valid.
fof(f1, axiom, (
? [A,B] : ((! [C] : (((property1(C,correct,pos)) &
(A=C))
=> (? [D] : ((property1(D,valid,pos)) &
(B=D))))) &
((relation(A,of,B)) &
((card(B)) &
(code(A))))))).
003645 There is a code of a card. The code of a card is correct. The card is valid.
fof(f1, axiom, (
? [A,B,C,D] : ((A=B) &
((property1(B,valid,pos)) &
((C=D) &
((property1(D,correct,pos)) &
((relation(C,of,A)) &
((card(A)) &
(code(C)))))))))).
003646 There is a code of a card. Every card whose code is correct is valid.
fof(f1, axiom, (
? [A,B] : ((relation(A,of,B)) &
((card(B)) &
(code(A)))))).

fof(f2, axiom, (
! [A,B,C] : (((card(A)) &
((code(B)) &
((relation(B,of,A)) &
((property1(C,correct,pos)) &
(B=C)))))
=> (? [D] : ((property1(D,valid,pos)) &
(A=D)))))).
003647 There is a code of a card. Every card a code of which is correct is valid.
fof(f1, axiom, (
? [A,B] : ((relation(A,of,B)) &
((card(B)) &
(code(A)))))).

fof(f2, axiom, (
! [A,B,C] : (((card(A)) &
((code(B)) &
((relation(B,of,A)) &
((property1(C,correct,pos)) &
(B=C)))))
=> (? [D] : ((property1(D,valid,pos)) &
(A=D)))))).
003650 X eats. X drinks.
fof(f1, axiom, (
? [A,B,C] : ((predicate1(A,drink,B)) &
((predicate1(C,eat,B)) &
($true))))).
003652 John, Mary!
ERROR	DRS is empty	apply_converter/2	drs([],[])
003656 "" = X.
fof(f1, axiom, (
? [A] : ((string('')=A) &
($true)))).
003659 There is a man.
John is the man and the man.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003660 There is a man.
John is the man and a man.
fof(f1, axiom, (
? [A,B,C] : ((object(A,na,countable,na,eq,2)) &
((has_part(A,B)) &
((man(B)) &
(('John'=A) &
((has_part(A,C)) &
(man(C))))))))).
003661 There is a man.
A group is the man and a dog of the man.
fof(f1, axiom, (
? [A,B,C,D] : ((object(A,na,countable,na,eq,2)) &
((has_part(A,B)) &
((relation(B,of,C)) &
((dog(B)) &
((D=A) &
((has_part(A,C)) &
((man(C)) &
(group(D))))))))))).
003662 There is a man.
John is the man and a dog of the man.
fof(f1, axiom, (
? [A,B,C] : ((object(A,na,countable,na,eq,2)) &
((has_part(A,B)) &
((relation(B,of,C)) &
((dog(B)) &
(('John'=A) &
((has_part(A,C)) &
(man(C)))))))))).
003664 John is the name of the man and the name of the man.
fof(f1, axiom, (
? [A,B,C,D] : ((man(A)) &
((name(B)) &
((relation(B,of,A)) &
(('John'=C) &
((name(C)) &
((relation(C,of,D)) &
((has_part(D,B)) &
((has_part(D,A)) &
(object(D,na,countable,na,eq,2)))))))))))).
003665 John is a name of a man and a name of a man.
fof(f1, axiom, (
? [A,B,C,D,E] : (('John'=A) &
((object(B,na,countable,na,eq,2)) &
((has_part(B,C)) &
((relation(C,of,D)) &
((man(D)) &
((name(C)) &
((relation(A,of,B)) &
((has_part(B,E)) &
((man(E)) &
(name(A))))))))))))).
003666 There is a name.
There is a dog.
"" is the name of the dog of a man and a woman.
fof(f1, axiom, (
? [A] : (name(A)))).

fof(f2, axiom, (
? [A] : (dog(A)))).

fof(f3, axiom, (
? [A,B,C,D,E] : ((dog(A)) &
((man(B)) &
((has_part(C,B)) &
((relation(A,of,C)) &
((woman(D)) &
((has_part(C,D)) &
((object(C,na,countable,na,eq,2)) &
((string('')=E) &
((name(E)) &
(relation(E,of,A))))))))))))).
003667 "Fido" is the name of the dog of a man and a woman.
fof(f1, axiom, (
? [A,B,C,D,E] : ((dog(A)) &
((man(B)) &
((has_part(C,B)) &
((relation(A,of,C)) &
((woman(D)) &
((has_part(C,D)) &
((object(C,na,countable,na,eq,2)) &
((string('Fido')=E) &
((name(E)) &
(relation(E,of,A))))))))))))).
003668 There is the name of the dog of a man and a woman.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003669 If
there is an element, and
there is a name N of the element, and
there is an n:attributes-serialization A of the element, and
there is a n:children-serialization C of the element
then
a n:serialization of the element is
"<" & N & A & ">" & C & "</" & N & ">".
ERROR	DRS operator '&' not supported	arg_to_tptp/2	expr(&,expr(&,expr(&,expr(&,expr(&,expr(&,expr(&,string(<),A),_),string(>)),_),string(</)),A),string(>))
003671 There is a dog of a cat of a rat.
fof(f1, axiom, (
? [A,B,C] : ((relation(A,of,B)) &
((relation(B,of,C)) &
((rat(C)) &
((cat(B)) &
(dog(A)))))))).
003672 There is a dog of a cat and a rat.
fof(f1, axiom, (
? [A,B,C,D] : ((object(A,na,countable,na,eq,2)) &
((has_part(A,B)) &
((rat(B)) &
((relation(C,of,A)) &
((has_part(A,D)) &
((cat(D)) &
(dog(C)))))))))).
003673 There is a dog and a cat of a rat.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003674 A comment is "a/*comment*/b".
fof(f1, axiom, (
? [A] : ((A=string('a/*comment*/b')) &
(comment(A))))).
003676 A book is v:sent and Mary by John.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003677 0- -1 = 1.
fof(f1, axiom, (
0- -1=1)).
003678 0--1 = 1.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003679 John v:verb Mary and John and Bill.
fof(f1, axiom, (
? [A,B] : ((object(A,na,countable,na,eq,3)) &
((has_part(A,'Bill')) &
((has_part(A,'John')) &
((predicate2(B,verb,'John',A)) &
(has_part(A,'Mary')))))))).
003680 Bill is a:_ to Mary by John.
fof(f1, axiom, (
? [A] : ((modifier_pp(B,to,'Mary')) &
((modifier_pp(B,by,'John')) &
(('Bill'=A) &
(property1(A,'_',pos))))))).
003681 Bill is v:_ to Mary by John.
fof(f1, axiom, (
? [A] : (predicate3(A,'_','John','Bill','Mary')))).
003682 A quick and quick man eats.
fof(f1, axiom, (
? [A,B] : ((predicate1(A,eat,B)) &
((property1(B,quick,pos)) &
(man(B)))))).
003683 The a:textual n:serialization of an a:XML element is the concatenation of "<" and the name of the element and the a:textual n:serializations of the attributes of the element and ">" and the a:textual n:serialization of the sequence of the children of the element and "".
fof(f1, axiom, (
? [A,B,C,D,E,F,G,H,I,J,K,L,M] : ((element(A)) &
((object(B,child,countable,na,geq,2)) &
((has_part(C,A)) &
((relation(B,of,C)) &
((has_part(C,string(''))) &
((object(C,na,countable,na,eq,2)) &
((sequence(D)) &
((relation(D,of,B)) &
((serialization(E)) &
((relation(E,of,D)) &
((property1(E,textual,pos)) &
((object(F,attribute,countable,na,geq,2)) &
((relation(F,of,G)) &
((has_part(G,string(>))) &
((has_part(G,E)) &
((has_part(G,A)) &
((object(G,na,countable,na,eq,3)) &
((serializations(H)) &
((relation(H,of,F)) &
((property1(H,textual,pos)) &
((name(I)) &
((relation(I,of,J)) &
((has_part(J,H)) &
((has_part(J,A)) &
((object(J,na,countable,na,eq,2)) &
((K=L) &
((concatenation(L)) &
((relation(L,of,M)) &
((has_part(M,string(<))) &
((has_part(M,I)) &
((object(M,na,countable,na,eq,2)) &
((serialization(K)) &
((property1(K,textual,pos)) &
((property1(A,'XML',pos)) &
(relation(K,of,A)))))))))))))))))))))))))))))))))))))).
003684 A red and red man runs quickly and quickly.
fof(f1, axiom, (
? [A,B] : ((modifier_adv(A,quickly,pos)) &
((predicate1(A,run,B)) &
((property1(B,red,pos)) &
(man(B))))))).
003685 A man believes that he sleeps and that he sleeps.
ERROR	DRS condition not supported: :	tptp/4	_:drs([A,B],[predicate(A,sleep,C)-1/6,predicate(B,sleep,C)-1/10])
003686 A man and he see a cat and it.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003687 Pi is 3.1415926536.
fof(f1, axiom, (
'Pi'=3.1415926536)).
003688 There is a man. A group is a dog of the man and the man.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003689 There is a name. There is a dog. "" is the name of the dog of a man and a woman.
fof(f1, axiom, (
? [A] : (name(A)))).

fof(f2, axiom, (
? [A] : (dog(A)))).

fof(f3, axiom, (
? [A,B,C,D,E] : ((dog(A)) &
((man(B)) &
((has_part(C,B)) &
((relation(A,of,C)) &
((woman(D)) &
((has_part(C,D)) &
((object(C,na,countable,na,eq,2)) &
((string('')=E) &
((name(E)) &
(relation(E,of,A))))))))))))).
003690 The card of which man whose card is valid is valid?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,which)
003691 A card of which man whose card is valid is valid?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,which)
003692 At most 3 men eat or the men drink.
ERROR	DRS condition not supported: [|]	tptp/4	[predicate(_,eat,A)-1/5,object(A,man,countable,na,leq,3)-1/4]
003693 At most 3 men eat or drink.
ERROR	DRS condition not supported: [|]	tptp/4	[drs([A],[predicate(A,eat,C)-1/5])v drs([B],[predicate(B,drink,C)-1/7]),object(C,man,countable,na,leq,3)-1/4]
003694 Every dog barks or a cat does not sleep.
fof(f1, axiom, (
(! [A] : ((dog(A))
=> (? [B] : (predicate1(B,bark,A)))))
| (? [C] : ((cat(C)) &
(~(? [D] : (predicate1(D,sleep,C)))))))).
003695 The cat of a man whose dog barks sleeps.
fof(f1, axiom, (
? [A,B,C,D,E] : ((predicate1(A,sleep,B)) &
((cat(B)) &
((man(C)) &
((dog(D)) &
((relation(D,of,C)) &
((predicate1(E,bark,D)) &
(relation(B,of,C)))))))))).
003696 The dog of a man whose dog barks barks.
fof(f1, axiom, (
? [A,B,C,D,E] : ((predicate1(A,bark,B)) &
((dog(B)) &
((man(C)) &
((dog(D)) &
((relation(D,of,C)) &
((predicate1(E,bark,D)) &
(relation(B,of,C)))))))))).
003697 A dog of a man whose dog barks barks.
fof(f1, axiom, (
? [A,B,C,D,E] : ((predicate1(A,bark,B)) &
((relation(B,of,C)) &
((predicate1(D,bark,E)) &
((relation(E,of,C)) &
((dog(E)) &
((man(C)) &
(dog(B)))))))))).
003698 Which man whose dog barks waits?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,which)
003699 A dog of which man who waits barks?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,which)
003700 At most 3 men eat or at most 2 men eat.
ERROR	DRS condition not supported: [|]	tptp/4	[predicate(_,eat,A)-1/5,object(A,man,countable,na,leq,3)-1/4]
003701 Mary knows that John eats or Bill drinks.
ERROR	DRS condition not supported: :	tptp/4	_:drs([A],[predicate(A,eat,named(John))-1/5])
003702 Mary knows that John eats or that Bill drinks.
ERROR	DRS condition not supported: :	tptp/4	_:drs([],[drs([A],[predicate(A,eat,named(John))-1/5])v drs([B],[predicate(B,drink,named(Bill))-1/9])])
003703 Mary knows that every man eats or that Bill drinks.
ERROR	DRS condition not supported: :	tptp/4	_:drs([],[drs([],[drs([A],[object(A,man,countable,na,eq,1)-1/5])=>drs([B],[predicate(B,eat,A)-1/6])])v drs([C],[predicate(C,drink,named(Bill))-1/10])])
003704 Bill drinks or Mary knows that John eats.
ERROR	DRS condition not supported: :	tptp/4	_:drs([A],[predicate(A,eat,named(John))-1/8])
003705 There is a book. A database lists the title of the book and lists the code of the book.
fof(f1, axiom, (
? [A,B,C,D,E,F] : ((predicate2(A,list,B,C)) &
((book(D)) &
((code(C)) &
((relation(C,of,D)) &
((predicate2(E,list,B,F)) &
((title(F)) &
((relation(F,of,D)) &
(database(B))))))))))).
003706 Mary does not know that John eats or Bill drinks.
ERROR	DRS condition not supported: :	tptp/4	_:drs([A],[predicate(A,eat,named(John))-1/7])
003707 There is a man X. Every woman likes X or X drinks.
fof(f1, axiom, (
? [A] : (((! [B] : ((woman(B))
=> (? [C] : (predicate2(C,like,B,A)))))
| (? [D] : (predicate1(D,drink,A)))) &
(man(A))))).
003708 There is a man X. A dog likes X and every woman likes X or X drinks.
fof(f1, axiom, (
? [A] : ((? [B,C] : (((dog(B)) &
((predicate2(C,like,B,A)) &
(! [D] : ((woman(D))
=> (? [E] : (predicate2(E,like,D,A)))))))
| (? [F] : (predicate1(F,drink,A))))) &
(man(A))))).
003709 There is a man X. A dog likes X and every woman likes X or X likes the dog.
fof(f1, axiom, (
? [A] : ((? [B,C] : (((dog(B)) &
((predicate2(C,like,B,A)) &
(! [D] : ((woman(D))
=> (? [E] : (predicate2(E,like,D,A)))))))
| (? [F] : (predicate2(F,like,A,B))))) &
(man(A))))).
003710 It is false that a cat sleeps and every dog barks or there is a man.
fof(f1, axiom, (
((~(? [A,B] : ((cat(A)) &
(predicate1(B,sleep,A))))) &
(! [C] : ((dog(C))
=> (? [D] : (predicate1(D,bark,C))))))
| (? [E] : (man(E))))).
003711 Every dog barks and it is false that a cat sleeps or there is a man.
fof(f1, axiom, (
((! [A] : ((dog(A))
=> (? [B] : (predicate1(B,bark,A))))) &
(~(? [C,D] : ((cat(C)) &
(predicate1(D,sleep,C))))))
| (? [E] : (man(E))))).
003712 1=1 and every dog barks or a cat sleeps.
fof(f1, axiom, (
((1=1) &
(! [A] : ((dog(A))
=> (? [B] : (predicate1(B,bark,A))))))
| (? [C,D] : ((cat(C)) &
(predicate1(D,sleep,C)))))).
003713 It is false that a man eats or that the man drinks and that the man waits.
fof(f1, axiom, (
~(? [A,B] : (((man(A)) &
(predicate1(B,eat,A)))
| (? [C,D] : ((predicate1(C,drink,A)) &
(predicate1(D,wait,A)))))))).
003714 It is false that a man eats and that the man drinks, or that the man waits.
fof(f1, axiom, (
~(? [A,B,C] : (((man(A)) &
((predicate1(B,eat,A)) &
(predicate1(C,drink,A))))
| (? [D] : (predicate1(D,wait,A))))))).
003715 It is false that a man eats and that the man drinks or that the man waits.
fof(f1, axiom, (
~(? [A,B,C] : (((man(A)) &
((predicate1(B,eat,A)) &
(predicate1(C,drink,A))))
| (? [D] : (predicate1(D,wait,A))))))).
003716 It is false that a man eats and that the man drinks, and that the man waits.
fof(f1, axiom, (
~(? [A,B,C,D] : ((man(A)) &
((predicate1(B,eat,A)) &
((predicate1(C,drink,A)) &
(predicate1(D,wait,A)))))))).
003717 It is false that a man eats or that the man drinks or that the man waits.
fof(f1, axiom, (
~(? [A,B] : (((man(A)) &
(predicate1(B,eat,A)))
| (? [C] : ((predicate1(C,drink,A))
| (? [D] : (predicate1(D,wait,A))))))))).
003718 It is false that a man eats or that the man drinks, or that the man waits.
fof(f1, axiom, (
~((? [A,B] : (((man(A)) &
(predicate1(B,eat,A)))
| (? [C] : (predicate1(C,drink,A)))))
| (? [D,E] : ((man(E)) &
(predicate1(D,wait,E))))))).
003719 It is false that a man eats or that the man drinks, and that the man waits.
fof(f1, axiom, (
~(? [A,B] : ((? [C,D] : (((man(C)) &
(predicate1(D,eat,C)))
| (? [E] : (predicate1(E,drink,C))))) &
((man(B)) &
(predicate1(A,wait,B))))))).
003720 A man eats or the man drinks, and the man waits.
fof(f1, axiom, (
? [A,B] : (((man(A)) &
(predicate1(B,eat,A)))
| (? [C] : (predicate1(C,drink,A)))))).

fof(f2, axiom, (
? [A,B] : ((predicate1(A,wait,B)) &
(man(B))))).
003721 John knows that there is a cat or that there is a dog.
ERROR	DRS condition not supported: :	tptp/4	_:drs([],[drs([A],[object(A,cat,countable,na,eq,1)-1/7])v drs([B],[object(B,dog,countable,na,eq,1)-1/13])])
003722 John knows that there is a cat and that 1 = 1.
ERROR	DRS condition not supported: :	tptp/4	_:drs([A],[object(A,cat,countable,na,eq,1)-1/7,formula(int(1),=,int(1))-1/11])
003723 A man and the man and he see a cat and the cat and it.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003724 A man sleeps in the morning and in the morning.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003725 A man sleeps in a bed in a bed.
fof(f1, axiom, (
? [A,B,C,D] : ((modifier_pp(A,in,B)) &
((modifier_pp(A,in,C)) &
((predicate1(A,sleep,D)) &
((man(D)) &
((bed(C)) &
(bed(B))))))))).
003726 A man sleeps in a bed in the bed.
fof(f1, axiom, (
? [A,B,C] : ((modifier_pp(A,in,B)) &
((predicate1(A,sleep,C)) &
((man(C)) &
(bed(B))))))).
003727 A man sleeps in the morning in the morning.
fof(f1, axiom, (
? [A,B,C] : ((modifier_pp(A,in,B)) &
((predicate1(A,sleep,C)) &
((man(C)) &
(morning(B))))))).
003728 Which film
contains a role that a person A performs, and
contains a role that depicts A and that a person that is not A performs?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,which)
003729 Which film
contains a role that which person A performs, and
contains a role that depicts A and that a person that is not A performs?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,which)
003730 Which man gives which dog which chases which cat which apple which is what?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,which)
003731 Which man gives which cat which which dog chases which apple which what eats?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,which)
003732 John has a card every code of which is valid.
fof(f1, axiom, (
? [A,B] : ((predicate2(A,have,'John',B)) &
((! [C] : (((code(C)) &
(relation(C,of,B)))
=> (? [D] : ((property1(D,valid,pos)) &
(C=D))))) &
(card(B)))))).
003733 John has a card no code of which is valid.
fof(f1, axiom, (
? [A,B] : ((predicate2(A,have,'John',B)) &
((! [C] : (((code(C)) &
(relation(C,of,B)))
=> (~(? [D] : ((property1(D,valid,pos)) &
(C=D)))))) &
(card(B)))))).
003734 John has a card every code of every copy of which is valid.
fof(f1, axiom, (
? [A,B] : ((predicate2(A,have,'John',B)) &
((! [C] : (((code(C)) &
(! [D] : (((copy(D)) &
(relation(D,of,B)))
=> (relation(C,of,D)))))
=> (? [E] : ((property1(E,valid,pos)) &
(C=E))))) &
(card(B)))))).
003737 Exactly 1 woman waits.
ERROR	DRS condition not supported: [|]	tptp/4	[predicate(_,wait,A)-1/4,object(A,woman,countable,na,exactly,1)-1/3]
003738 May John not wait?
ERROR	DRS condition not supported: may	tptp/4	may(drs([A],[predicate(A,wait,named(John))-1/4]))
003739 Brend is a man.
fof(f1, axiom, (
? [A] : (('Brend'=A) &
(man(A))))).
003740 How many man waits?
ERROR	DRS is empty	apply_converter/2	drs([],[])
003741 How many men does which woman who eats how much food like?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,which)
003742 There are which men of John?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,which)
003743 There are how many men of John?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,howm)
003744 There is how much food of John?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,howm)
003745 How much man waits?
ERROR	DRS is empty	apply_converter/2	drs([],[])
003746 How many men wait?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,howm)
003747 How much food waits?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,howm)
003748 How many good men eat how much bad food?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,howm)
003749 There is some fluid. How many liters of the fluid are there?
ERROR	DRS condition not supported: question	tptp/4	question(drs([A],[query(A,howm)-2/1,object(A,liter,countable,na,geq,2)-2/3,relation(A,of,_)-2/4]))
003750 There are how many liters of some fluid?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,howm)
003751 Sun is the Sun.
fof(f1, axiom, (
'Sun'='Sun')).
003752 There is a man that John is not.
ERROR	DRS is empty	apply_converter/2	drs([],[])
003753 Does John believe that Mary sleeps?
ERROR	DRS condition not supported: :	tptp/4	_:drs([A],[predicate(A,sleep,named(Mary))-1/6])
003756 Does John see a man that waits?
fof(f1, conjecture, (
? [A,B,C] : ((man(A)) &
((predicate1(B,wait,A)) &
(predicate2(C,see,'John',A)))))).
003757 How does John that waits see a man?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,how)
003758 John where sees a man that waits?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,where)
003759 John how believes that Mary sleeps?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,how)
003760 John how and when and where believes that Mary sleeps?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,where)
003761 How and when and where does John see a man?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,where)
003762 John sees a man where and when and how?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,how)
003763 John when eats and where drinks?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,when)
003764 How is John seen by a man?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,how)
003765 How is John that waits seen by a man?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,how)
003766 Is John seen by a man that waits?
fof(f1, conjecture, (
? [A,B,C] : ((man(A)) &
((predicate1(B,wait,A)) &
(predicate2(C,see,A,'John')))))).
003768 John eats when and where drinks?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,when)
003770 John has nothing but apples.
fof(f1, axiom, (
! [A,B] : (((predicate2(A,have,'John',B)) &
($true))
=> (? [C] : ((apple(C)) &
(B=C)))))).
003771 A = 2*3^4.
ERROR	Converter failed	apply_converter/2	drs([A],[object(A,something,dom,na,na,na)-1/1,formula(A,=,expr(*,int(2),expr(^,int(3),int(4))))-1/2])
003772 A = 2*3^4.5.
ERROR	Converter failed	apply_converter/2	drs([A],[object(A,something,dom,na,na,na)-1/1,formula(A,=,expr(*,int(2),expr(^,int(3),real(4.5))))-1/2])
003773 A = 2*3^(-1).
ERROR	Converter failed	apply_converter/2	drs([A],[object(A,something,dom,na,na,na)-1/1,formula(A,=,expr(*,int(2),expr(^,int(3),int(-1))))-1/2])
003774 A = 2*3^(2+B).
ERROR	Converter failed	apply_converter/2	drs([A,B],[object(A,something,dom,na,na,na)-1/1,object(B,something,dom,na,na,na)-1/10,formula(A,=,expr(*,int(2),expr(^,int(3),expr(+,int(2),B))))-1/2])
003775 A = 2*3^(2+3^B).
ERROR	Converter failed	apply_converter/2	drs([A,B],[object(A,something,dom,na,na,na)-1/1,object(B,something,dom,na,na,na)-1/12,formula(A,=,expr(*,int(2),expr(^,int(3),expr(+,int(2),expr(^,int(3),B)))))-1/2])
003776 A = 2*3^4^5.
ERROR	Converter failed	apply_converter/2	drs([A],[object(A,something,dom,na,na,na)-1/1,formula(A,=,expr(*,int(2),expr(^,expr(^,int(3),int(4)),int(5))))-1/2])
003777 How many beaches have how much sand?
ERROR	DRS query/2 not supported	cond_to_tptp/2	query(_,howm)
003778 Errol is not Hedwig. Hedwig is not Errol.
HarryPotter is not NevilleLongbottom. NevilleLongbottom is not HarryPotter.
NevilleLongbottom is not RonWeasley. RonWeasley is not NevilleLongbottom.
NevilleLongbottom is not TomRiddle. TomRiddle is not NevilleLongbottom.
fof(f1, axiom, (
~('Errol'='Hedwig'))).

fof(f2, axiom, (
~('Hedwig'='Errol'))).

fof(f3, axiom, (
~('HarryPotter'='NevilleLongbottom'))).

fof(f4, axiom, (
~('NevilleLongbottom'='HarryPotter'))).

fof(f5, axiom, (
~('NevilleLongbottom'='RonWeasley'))).

fof(f6, axiom, (
~('RonWeasley'='NevilleLongbottom'))).

fof(f7, axiom, (
~('NevilleLongbottom'='TomRiddle'))).

fof(f8, axiom, (
~('TomRiddle'='NevilleLongbottom'))).
true.


